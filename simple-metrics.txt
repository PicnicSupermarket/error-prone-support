Shared build flags: 
  -Derror-prone.version=2.35.1
  -Derror-prone-support.version=0.19.2-SNAPSHOT
  -DadditionalSourceDirectories=
  
  
Error Prone patch flags: -XepExcludedPaths:.*/target/generated-sources/.* -XepPatchLocation:IN_PLACE -XepPatchChecks:AmbiguousJsonCreator,AssertJIsNull,AutowiredConstructor,CanonicalAnnotationSyntax,CanonicalClassNameUsage,ClassCastLambdaUsage,CollectorMutability,ConstantNaming,DirectReturn,EmptyMethod,EmptyMonoZip,ExplicitEnumOrdering,FluxFlatMapUsage,FluxImplicitBlock,FormatStringConcatenation,IdentityConversion,ImmutablesSortedSetComparator,IsInstanceLambdaUsage,JUnitClassModifiers,JUnitMethodDeclaration,JUnitNullaryParameterizedTestDeclaration,JUnitValueSource,LexicographicalAnnotationAttributeListing,LexicographicalAnnotationListing,MockitoMockClassReference,MockitoStubbing,MongoDBTextFilterUsage,NestedOptionals,NestedPublishers,NonEmptyMono,NonStaticImport,OptionalOrElseGet,PrimitiveComparison,RedundantStringConversion,RequestMappingAnnotation,RequestParamType,Slf4jLogStatement,Slf4jLoggerDeclaration,SpringMvcAnnotation,StaticImport,StringJoin,TimeZoneUsage,Refaster -Xep:CollectorMutability:OFF -XepOpt:Refaster:NamePattern=^(?!FileRules\$).*
Error Prone validation flags: -XepExcludedPaths:.*/target/generated-sources/.* -XepDisableAllChecks -Xep:AmbiguousJsonCreator:WARN -Xep:AssertJIsNull:WARN -Xep:AutowiredConstructor:WARN -Xep:CanonicalAnnotationSyntax:WARN -Xep:CanonicalClassNameUsage:WARN -Xep:ClassCastLambdaUsage:WARN -Xep:CollectorMutability:WARN -Xep:ConstantNaming:WARN -Xep:DirectReturn:WARN -Xep:EmptyMethod:WARN -Xep:EmptyMonoZip:WARN -Xep:ExplicitEnumOrdering:WARN -Xep:FluxFlatMapUsage:WARN -Xep:FluxImplicitBlock:WARN -Xep:FormatStringConcatenation:WARN -Xep:IdentityConversion:WARN -Xep:ImmutablesSortedSetComparator:WARN -Xep:IsInstanceLambdaUsage:WARN -Xep:JUnitClassModifiers:WARN -Xep:JUnitMethodDeclaration:WARN -Xep:JUnitNullaryParameterizedTestDeclaration:WARN -Xep:JUnitValueSource:WARN -Xep:LexicographicalAnnotationAttributeListing:WARN -Xep:LexicographicalAnnotationListing:WARN -Xep:MockitoMockClassReference:WARN -Xep:MockitoStubbing:WARN -Xep:MongoDBTextFilterUsage:WARN -Xep:NestedOptionals:WARN -Xep:NestedPublishers:WARN -Xep:NonEmptyMono:WARN -Xep:NonStaticImport:WARN -Xep:OptionalOrElseGet:WARN -Xep:PrimitiveComparison:WARN -Xep:RedundantStringConversion:WARN -Xep:RequestMappingAnnotation:WARN -Xep:RequestParamType:WARN -Xep:Slf4jLogStatement:WARN -Xep:Slf4jLoggerDeclaration:WARN -Xep:SpringMvcAnnotation:WARN -Xep:StaticImport:WARN -Xep:StringJoin:WARN -Xep:TimeZoneUsage:WARN -Xep:Refaster:WARN 
~/repos/error-prone-support/integration-tests/.repos/metrics ~/repos/error-prone-support
rick.ossendrijver@gmail.com
Rick Ossendrijver
[detached HEAD d508418] dependency: Introduce Error Prone Support
 5 files changed, 48 insertions(+), 4 deletions(-)
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Metrics5 Parent                                                    [pom]
[INFO] Metrics5 Documentation                                             [jar]
[INFO] Metrics5 BOM                                                       [pom]
[INFO] Annotations for Metrics5                                        [bundle]
[INFO] Metrics5 Core                                                   [bundle]
[INFO] Benchmarks for Metrics5                                            [jar]
[INFO] Metrics Integration for Caffeine 3.x                            [bundle]
[INFO] Metrics Integration for Collectd                                [bundle]
[INFO] Metrics Integration for Ehcache                                 [bundle]
[INFO] Graphite Integration for Metrics5                               [bundle]
[INFO] InfluxDB integration for Metrics5                               [bundle]
[INFO] JVM Integration for Metrics5                                    [bundle]
[INFO] Metrics5 Health Checks                                          [bundle]
[INFO] Metrics Integration for Apache HttpClient                       [bundle]
[INFO] Metrics Integration for Apache HttpClient 5.x                   [bundle]
[INFO] Metrics Integration for Apache HttpAsyncClient                  [bundle]
[INFO] Metrics Integration for Jakarta Servlets                        [bundle]
[INFO] Metrics Integration for Jakarta Servlets 6.x                    [bundle]
[INFO] Jackson Integration for Metrics5                                [bundle]
[INFO] Metrics Integration for Jetty 11.x and higher                   [bundle]
[INFO] Metrics5 Utility Jakarta Servlets                               [bundle]
[INFO] Metrics Integration for JCache                                  [bundle]
[INFO] Metrics Integration for JDBI3                                   [bundle]
[INFO] Metrics Integration for Jersey 2.x                              [bundle]
[INFO] Metrics Integration for Jersey 3.0.x                            [bundle]
[INFO] Metrics Integration for Jersey 3.1.x                            [bundle]
[INFO] Metrics Integration for Jetty 10.x and higher                   [bundle]
[INFO] Metrics Integration for Log4j 2.x                               [bundle]
[INFO] Metrics Integration for Logback 1.3.x                           [bundle]
[INFO] Metrics Integration for Logback 1.4.x                           [bundle]
[INFO] Metrics Integration for Logback 1.5.x                           [bundle]
[INFO] Metrics Integration for Servlets                                [bundle]
[INFO] Metrics5 Utility Servlets                                       [bundle]
[INFO] Metrics5 JCStress tests                                            [jar]
[INFO] Metrics Integration with JMX                                    [bundle]
[INFO] Metrics5 Adapter to Metrics 3/4 API                                [jar]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API                  [jar]
[INFO] Metrics Integration for Jetty 12.x and higher                   [bundle]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 [bundle]
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-parent >----------------
[INFO] Building Metrics5 Parent 5.0.0-rc22                               [1/39]
[INFO]   from pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-parent ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] --------------------< io.dropwizard.metrics5:docs >---------------------
[INFO] Building Metrics5 Documentation 5.0.0-rc22                        [2/39]
[INFO]   from docs/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ docs ---
[WARNING] Source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/main/java' does not exist, ignoring.
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/java' does not exist, ignoring.
[info] Processed 0 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-bom >-----------------
[INFO] Building Metrics5 BOM 5.0.0-rc22                                  [3/39]
[INFO]   from metrics-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-bom ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-annotation >--------------
[INFO] Building Annotations for Metrics5 5.0.0-rc22                      [4/39]
[INFO]   from metrics-annotation/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-resources-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-resources-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-resources-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-resources-plugin:3.3.1
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-install-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-install-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-install-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-install-plugin:3.1.3
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-annotation ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/java' does not exist, ignoring.
[info] Processed 9 files (9 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-core >-----------------
[INFO] Building Metrics5 Core 5.0.0-rc22                                 [5/39]
[INFO]   from metrics-core/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-core ---
[info] Processed 87 files (87 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-benchmarks >--------------
[INFO] Building Benchmarks for Metrics5 5.0.0-rc22                       [6/39]
[INFO]   from metrics-benchmarks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-benchmarks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/java' does not exist, ignoring.
[info] Processed 5 files (5 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-caffeine3 >--------------
[INFO] Building Metrics Integration for Caffeine 3.x 5.0.0-rc22          [7/39]
[INFO]   from metrics-caffeine3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-caffeine3 ---
[info] Processed 2 files (2 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-collectd >---------------
[INFO] Building Metrics Integration for Collectd 5.0.0-rc22              [8/39]
[INFO]   from metrics-collectd/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-collectd ---
[info] Processed 12 files (12 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-ehcache >---------------
[INFO] Building Metrics Integration for Ehcache 5.0.0-rc22               [9/39]
[INFO]   from metrics-ehcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-ehcache ---
[info] Processed 4 files (4 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-graphite >---------------
[INFO] Building Graphite Integration for Metrics5 5.0.0-rc22            [10/39]
[INFO]   from metrics-graphite/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-graphite ---
[info] Processed 13 files (13 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-influxdb >---------------
[INFO] Building InfluxDB integration for Metrics5 5.0.0-rc22            [11/39]
[INFO]   from metrics-influxdb/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-influxdb ---
[info] Processed 8 files (8 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jvm >-----------------
[INFO] Building JVM Integration for Metrics5 5.0.0-rc22                 [12/39]
[INFO]   from metrics-jvm/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jvm ---
[info] Processed 23 files (23 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-healthchecks >-------------
[INFO] Building Metrics5 Health Checks 5.0.0-rc22                       [13/39]
[INFO]   from metrics-healthchecks/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-healthchecks ---
[info] Processed 14 files (14 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient >--------------
[INFO] Building Metrics Integration for Apache HttpClient 5.0.0-rc22    [14/39]
[INFO]   from metrics-httpclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient ---
[info] Processed 8 files (8 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient5 >-------------
[INFO] Building Metrics Integration for Apache HttpClient 5.x 5.0.0-rc22 [15/39]
[INFO]   from metrics-httpclient5/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient5 ---
[info] Processed 13 files (13 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-httpasyncclient >-----------
[INFO] Building Metrics Integration for Apache HttpAsyncClient 5.0.0-rc22 [16/39]
[INFO]   from metrics-httpasyncclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpasyncclient ---
[info] Processed 5 files (5 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-jakarta-servlet >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 5.0.0-rc22     [17/39]
[INFO]   from metrics-jakarta-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet ---
[info] Processed 4 files (4 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlet6 >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 6.x 5.0.0-rc22 [18/39]
[INFO]   from metrics-jakarta-servlet6/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet6 ---
[info] Processed 4 files (4 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-json >-----------------
[INFO] Building Jackson Integration for Metrics5 5.0.0-rc22             [19/39]
[INFO]   from metrics-json/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-json ---
[info] Processed 4 files (4 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty11 >---------------
[INFO] Building Metrics Integration for Jetty 11.x and higher 5.0.0-rc22 [20/39]
[INFO]   from metrics-jetty11/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty11 ---
[info] Processed 8 files (8 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlets >-----------
[INFO] Building Metrics5 Utility Jakarta Servlets 5.0.0-rc22            [21/39]
[INFO]   from metrics-jakarta-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlets ---
[info] Processed 17 files (17 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jcache >----------------
[INFO] Building Metrics Integration for JCache 5.0.0-rc22               [22/39]
[INFO]   from metrics-jcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcache ---
[info] Processed 2 files (2 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-jdbi3 >----------------
[INFO] Building Metrics Integration for JDBI3 5.0.0-rc22                [23/39]
[INFO]   from metrics-jdbi3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jdbi3 ---
[info] Processed 15 files (15 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey2 >---------------
[INFO] Building Metrics Integration for Jersey 2.x 5.0.0-rc22           [24/39]
[INFO]   from metrics-jersey2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey2 ---
[info] Processed 24 files (24 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey3 >---------------
[INFO] Building Metrics Integration for Jersey 3.0.x 5.0.0-rc22         [25/39]
[INFO]   from metrics-jersey3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey3 ---
[info] Processed 24 files (24 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jersey31 >---------------
[INFO] Building Metrics Integration for Jersey 3.1.x 5.0.0-rc22         [26/39]
[INFO]   from metrics-jersey31/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey31 ---
[info] Processed 24 files (24 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty10 >---------------
[INFO] Building Metrics Integration for Jetty 10.x and higher 5.0.0-rc22 [27/39]
[INFO]   from metrics-jetty10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty10 ---
[info] Processed 8 files (8 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-log4j2 >----------------
[INFO] Building Metrics Integration for Log4j 2.x 5.0.0-rc22            [28/39]
[INFO]   from metrics-log4j2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-log4j2 ---
[info] Processed 3 files (3 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback13 >--------------
[INFO] Building Metrics Integration for Logback 1.3.x 5.0.0-rc22        [29/39]
[INFO]   from metrics-logback13/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback13 ---
[info] Processed 2 files (2 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback14 >--------------
[INFO] Building Metrics Integration for Logback 1.4.x 5.0.0-rc22        [30/39]
[INFO]   from metrics-logback14/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback14 ---
[info] Processed 2 files (2 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback15 >--------------
[INFO] Building Metrics Integration for Logback 1.5.x 5.0.0-rc22        [31/39]
[INFO]   from metrics-logback15/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback15 ---
[info] Processed 2 files (2 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-servlet >---------------
[INFO] Building Metrics Integration for Servlets 5.0.0-rc22             [32/39]
[INFO]   from metrics-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlet ---
[info] Processed 4 files (4 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-servlets >---------------
[INFO] Building Metrics5 Utility Servlets 5.0.0-rc22                    [33/39]
[INFO]   from metrics-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlets ---
[info] Processed 16 files (16 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jcstress >---------------
[INFO] Building Metrics5 JCStress tests 5.0.0-rc22                      [34/39]
[INFO]   from metrics-jcstress/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcstress ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/java' does not exist, ignoring.
[info] Processed 3 files (3 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jmx >-----------------
[INFO] Building Metrics Integration with JMX 5.0.0-rc22                 [35/39]
[INFO]   from metrics-jmx/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jmx ---
[info] Processed 5 files (5 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-legacy-adapter >------------
[INFO] Building Metrics5 Adapter to Metrics 3/4 API 5.0.0-rc22          [36/39]
[INFO]   from metrics-legacy-adapter/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter ---
[info] Processed 60 files (60 reformatted).
[INFO] 
[INFO] -----< io.dropwizard.metrics5:metrics-legacy-adapter-healthchecks >-----
[INFO] Building Metrics5 Health Checks Adapter to Metrics 3/4 API 5.0.0-rc22 [37/39]
[INFO]   from metrics-legacy-adapter-healthchecks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter-healthchecks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/java' does not exist, ignoring.
[info] Processed 4 files (4 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty12 >---------------
[INFO] Building Metrics Integration for Jetty 12.x and higher 5.0.0-rc22 [38/39]
[INFO]   from metrics-jetty12/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12 ---
[info] Processed 5 files (5 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-jetty12-ee10 >-------------
[INFO] Building Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 5.0.0-rc22 [39/39]
[INFO]   from metrics-jetty12-ee10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12-ee10 ---
[info] Processed 2 files (2 reformatted).
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Metrics5 Parent 5.0.0-rc22:
[INFO] 
[INFO] Metrics5 Parent .................................... SUCCESS [  0.130 s]
[INFO] Metrics5 Documentation ............................. SUCCESS [  0.588 s]
[INFO] Metrics5 BOM ....................................... SUCCESS [  0.003 s]
[INFO] Annotations for Metrics5 ........................... SUCCESS [  0.951 s]
[INFO] Metrics5 Core ...................................... SUCCESS [  1.412 s]
[INFO] Benchmarks for Metrics5 ............................ SUCCESS [  0.835 s]
[INFO] Metrics Integration for Caffeine 3.x ............... SUCCESS [  0.987 s]
[INFO] Metrics Integration for Collectd ................... SUCCESS [  1.186 s]
[INFO] Metrics Integration for Ehcache .................... SUCCESS [  1.283 s]
[INFO] Graphite Integration for Metrics5 .................. SUCCESS [  1.226 s]
[INFO] InfluxDB integration for Metrics5 .................. SUCCESS [  1.048 s]
[INFO] JVM Integration for Metrics5 ....................... SUCCESS [  1.128 s]
[INFO] Metrics5 Health Checks ............................. SUCCESS [  1.026 s]
[INFO] Metrics Integration for Apache HttpClient .......... SUCCESS [  0.934 s]
[INFO] Metrics Integration for Apache HttpClient 5.x ...... SUCCESS [  0.969 s]
[INFO] Metrics Integration for Apache HttpAsyncClient ..... SUCCESS [  0.977 s]
[INFO] Metrics Integration for Jakarta Servlets ........... SUCCESS [  0.883 s]
[INFO] Metrics Integration for Jakarta Servlets 6.x ....... SUCCESS [  0.916 s]
[INFO] Jackson Integration for Metrics5 ................... SUCCESS [  1.071 s]
[INFO] Metrics Integration for Jetty 11.x and higher ...... SUCCESS [  1.007 s]
[INFO] Metrics5 Utility Jakarta Servlets .................. SUCCESS [  1.003 s]
[INFO] Metrics Integration for JCache ..................... SUCCESS [  1.001 s]
[INFO] Metrics Integration for JDBI3 ...................... SUCCESS [  0.956 s]
[INFO] Metrics Integration for Jersey 2.x ................. SUCCESS [  1.021 s]
[INFO] Metrics Integration for Jersey 3.0.x ............... SUCCESS [  1.053 s]
[INFO] Metrics Integration for Jersey 3.1.x ............... SUCCESS [  1.143 s]
[INFO] Metrics Integration for Jetty 10.x and higher ...... SUCCESS [  1.029 s]
[INFO] Metrics Integration for Log4j 2.x .................. SUCCESS [  1.003 s]
[INFO] Metrics Integration for Logback 1.3.x .............. SUCCESS [  0.969 s]
[INFO] Metrics Integration for Logback 1.4.x .............. SUCCESS [  0.954 s]
[INFO] Metrics Integration for Logback 1.5.x .............. SUCCESS [  0.914 s]
[INFO] Metrics Integration for Servlets ................... SUCCESS [  0.863 s]
[INFO] Metrics5 Utility Servlets .......................... SUCCESS [  0.970 s]
[INFO] Metrics5 JCStress tests ............................ SUCCESS [  0.877 s]
[INFO] Metrics Integration with JMX ....................... SUCCESS [  1.028 s]
[INFO] Metrics5 Adapter to Metrics 3/4 API ................ SUCCESS [  1.100 s]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API .. SUCCESS [  0.845 s]
[INFO] Metrics Integration for Jetty 12.x and higher ...... SUCCESS [  0.997 s]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 SUCCESS [  1.008 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  38.095 s
[INFO] Finished at: 2024-11-18T12:45:04+01:00
[INFO] ------------------------------------------------------------------------
[detached HEAD b1e8ab8] minor: Reformat using Google Java Format
 445 files changed, 38272 insertions(+), 38032 deletions(-)
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Metrics5 Parent                                                    [pom]
[INFO] Metrics5 Documentation                                             [jar]
[INFO] Metrics5 BOM                                                       [pom]
[INFO] Annotations for Metrics5                                        [bundle]
[INFO] Metrics5 Core                                                   [bundle]
[INFO] Benchmarks for Metrics5                                            [jar]
[INFO] Metrics Integration for Caffeine 3.x                            [bundle]
[INFO] Metrics Integration for Collectd                                [bundle]
[INFO] Metrics Integration for Ehcache                                 [bundle]
[INFO] Graphite Integration for Metrics5                               [bundle]
[INFO] InfluxDB integration for Metrics5                               [bundle]
[INFO] JVM Integration for Metrics5                                    [bundle]
[INFO] Metrics5 Health Checks                                          [bundle]
[INFO] Metrics Integration for Apache HttpClient                       [bundle]
[INFO] Metrics Integration for Apache HttpClient 5.x                   [bundle]
[INFO] Metrics Integration for Apache HttpAsyncClient                  [bundle]
[INFO] Metrics Integration for Jakarta Servlets                        [bundle]
[INFO] Metrics Integration for Jakarta Servlets 6.x                    [bundle]
[INFO] Jackson Integration for Metrics5                                [bundle]
[INFO] Metrics Integration for Jetty 11.x and higher                   [bundle]
[INFO] Metrics5 Utility Jakarta Servlets                               [bundle]
[INFO] Metrics Integration for JCache                                  [bundle]
[INFO] Metrics Integration for JDBI3                                   [bundle]
[INFO] Metrics Integration for Jersey 2.x                              [bundle]
[INFO] Metrics Integration for Jersey 3.0.x                            [bundle]
[INFO] Metrics Integration for Jersey 3.1.x                            [bundle]
[INFO] Metrics Integration for Jetty 10.x and higher                   [bundle]
[INFO] Metrics Integration for Log4j 2.x                               [bundle]
[INFO] Metrics Integration for Logback 1.3.x                           [bundle]
[INFO] Metrics Integration for Logback 1.4.x                           [bundle]
[INFO] Metrics Integration for Logback 1.5.x                           [bundle]
[INFO] Metrics Integration for Servlets                                [bundle]
[INFO] Metrics5 Utility Servlets                                       [bundle]
[INFO] Metrics5 JCStress tests                                            [jar]
[INFO] Metrics Integration with JMX                                    [bundle]
[INFO] Metrics5 Adapter to Metrics 3/4 API                                [jar]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API                  [jar]
[INFO] Metrics Integration for Jetty 12.x and higher                   [bundle]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 [bundle]
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-parent >----------------
[INFO] Building Metrics5 Parent 5.0.0-rc22                               [1/39]
[INFO]   from pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-parent ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-parent ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-parent ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] --------------------< io.dropwizard.metrics5:docs >---------------------
[INFO] Building Metrics5 Documentation 5.0.0-rc22                        [2/39]
[INFO]   from docs/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ docs ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ docs ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/jacoco.exec
[INFO] 
[INFO] --- build-helper:3.6.0:parse-version (parse-version) @ docs ---
[INFO] 
[INFO] --- resources:3.3.1:resources (process-resources) @ docs ---
[INFO] Copying 72 resources from source to target/source
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ docs ---
[INFO] Copying 72 resources from source to target/classes
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ docs ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ docs ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ docs ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/docs-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ docs ---
[WARNING] Source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/main/java' does not exist, ignoring.
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/java' does not exist, ignoring.
[info] Processed 0 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-bom >-----------------
[INFO] Building Metrics5 BOM 5.0.0-rc22                                  [3/39]
[INFO]   from metrics-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-bom ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-bom ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-bom/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-bom ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-annotation >--------------
[INFO] Building Annotations for Metrics5 5.0.0-rc22                      [4/39]
[INFO]   from metrics-annotation/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-resources-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-resources-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-resources-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-resources-plugin:3.3.1
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-install-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-install-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-install-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-install-plugin:3.1.3
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-annotation ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-annotation ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-annotation ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 9 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-annotation ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-annotation ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-annotation ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-annotation:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/metrics-annotation-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-annotation ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/java' does not exist, ignoring.
[info] Processed 9 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-core >-----------------
[INFO] Building Metrics5 Core 5.0.0-rc22                                 [5/39]
[INFO]   from metrics-core/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-core ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-core ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-core ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 49 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java:[56,53] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'disabledMetricAttributes = ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java:[56,44] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'disabledMetricAttributes = emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[175,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(this.scheduledFuture == null, "Reporter already started");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[144,4] Note: [Refaster Rule] PreconditionsRules.RequireNonNullWithMessageStatement: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#RequireNonNullWithMessageStatement)
  Did you mean 'requireNonNull(registry, "registry == null");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[131,28] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'ImmutableSet.of());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[157,90] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'disabledMetricAttributes != null ? disabledMetricAttributes : ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[131,19] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'emptySet());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[157,81] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'disabledMetricAttributes != null ? disabledMetricAttributes : emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java:[188,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@Deprecated'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[52,27] [this-escape] possible 'this' escape before subclass is fully initialized
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[94,4] Note: [Refaster Rule] PreconditionsRules.RequireNonNullWithMessageStatement: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#RequireNonNullWithMessageStatement)
  Did you mean 'requireNonNull(metric, "metric == null");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[256,45] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Histogram;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[662,45] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Histogram;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[216,43] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Counter;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[649,43] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Counter;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[296,41] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Meter;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[331,41] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Timer;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[369,41] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Gauge;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[675,41] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Meter;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[688,41] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Timer;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[702,41] Note: [Refaster Rule] ClassRules.Instanceof: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#Instanceof)
  Did you mean 'return metric instanceof Gauge;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[433,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedSet(new TreeSet<>(metrics.keySet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[458,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedMap(timers);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[565,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedMap(timers);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[630,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(metrics);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[97,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(pairs.length % 2 == 0, "Argument count must be even");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[204,36] Note: [Refaster Rule] MapEntryRules.MapEntryComparingByKey: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MapEntryRules#MapEntryComparingByKey)
  Did you mean '.sorted(comparingByKey())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[67,35] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean '.filter(s -> !Strings.isNullOrEmpty(s))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[20,76] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean 'private static final Map<String, String> EMPTY_TAGS = ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[66,47] Note: [Refaster Rule] StreamRules.StreamOfArray: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StreamRules#StreamOfArray)
  Did you mean 'Stream.concat(Stream.of(key), Arrays.stream(parts))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[20,67] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'private static final Map<String, String> EMPTY_TAGS = emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[36,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.key = requireNonNull(key);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[68,31] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(joining(SEPARATOR));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[204,26] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.sorted(comparing(Map.Entry::getKey))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java:[206,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(sorted);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java:[182,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(CsvReporter.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java:[390,35] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ExponentialMovingAverages.java:[20,30] [ConstantNaming] Constant variables should adhere to the `UPPER_SNAKE_CASE` naming convention
    (see https://error-prone.picnic.tech/bugpatterns/ConstantNaming)
  Did you mean 'private static final double MAX_TICK_ZERO_TARGET = 0.0001;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/ExponentialMovingAverages.java:[22,27] [ConstantNaming] Constant variables should adhere to the `UPPER_SNAKE_CASE` naming convention
    (see https://error-prone.picnic.tech/bugpatterns/ConstantNaming)
  Did you mean 'private static final int MAX_TICKS;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java:[67,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(quantile >= 0.0 && quantile <= 1.0 && !Double.isNaN(quantile), quantile + " is not in [0..1]");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java:[38,32] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'Arrays.sort(copy, comparingLong(w -> w.value));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/InstrumentedExecutorService.java:[244,25] [try] auto-closeable resource durationContext is never referenced in body of corresponding try statement
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/InstrumentedExecutorService.java:[266,25] [try] auto-closeable resource context is never referenced in body of corresponding try statement
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[238,6] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(value > 0, "LockFreeExponentiallyDecayingReservoir size must be positive: " + value);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[44,6] [ConstantNaming] Constant variables should adhere to the `UPPER_SNAKE_CASE` naming convention
    (see https://error-prone.picnic.tech/bugpatterns/ConstantNaming)
  Did you mean 'STATE_UPDATER ='?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[56,58] [ConstantNaming] Constant variables should adhere to the `UPPER_SNAKE_CASE` naming convention
    (see https://error-prone.picnic.tech/bugpatterns/ConstantNaming)
  Did you mean 'private static final AtomicIntegerFieldUpdater<State> COUNT_UPDATER ='?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[129,15] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'requireNonNull(newValues.pollFirstEntry(), "Expected an entry");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[257,37] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.rescaleThreshold = requireNonNull(value, "rescaleThreshold is required");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[263,26] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.clock = requireNonNull(value, "clock is required");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[239,31] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean 'return ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[633,33] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'return ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[639,33] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'return ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[645,33] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'return ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[161,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedSet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[167,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[173,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[179,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[185,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[191,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[197,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[203,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[209,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[215,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[221,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[239,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[633,24] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[639,24] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java:[645,24] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/SharedMetricRegistries.java:[87,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(metricRegistry != null, "Default registry name has not been set.");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java:[7] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java:[10] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java:[84,58] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'this.disabledMetricAttributes = ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java:[84,49] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.disabledMetricAttributes = emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAverages.java:[189,9] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return adder.longValue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java:[50,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(quantile >= 0.0 && quantile <= 1.0 && !Double.isNaN(quantile), quantile + " is not in [0..1]");'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-core ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 38 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java:[125,6] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatWithFailMessageStringIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatWithFailMessageStringIsTrue)
  Did you mean 'assertThat(futures.get(i).get()).withFailMessage("Future " + i + " failed").isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java:[18] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CachedGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java:[19,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(CachedGaugeTest.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ChunkedAssociativeLongArrayTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ChunkedAssociativeLongArrayTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ChunkedAssociativeLongArrayTest.java:[10,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void trim() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ClassMetadataTest.java:[7,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ClassMetadataTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ClassMetadataTest.java:[9,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void parameterMetadataIsAvailable() throws NoSuchMethodException {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java:[14,50] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat((double) clock.getTime()).isCloseTo(System.currentTimeMillis(), offset(100.0));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java:[16,50] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat((double) clock.getTick()).isCloseTo(System.nanoTime(), offset(1000000.0));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ClockTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[22] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ConsoleReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[26,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[27,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[77,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[96,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[100,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[141,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[170,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[178,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[242,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[286,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[294,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[352,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java:[356,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CounterTest.java:[12,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(counter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CounterTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CounterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[20,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CsvReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[23,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[24,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[56,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[66,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[70,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[108,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[116,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[140,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void csvFileProviderIsUsed() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[141,39] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'CsvFileProvider fileProvider = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[180,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java:[202,88] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'Files.readAllBytes(new File(dataDirectory, filename).toPath()), UTF_8);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/DefaultSettableGaugeTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class DefaultSettableGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/DerivativeGaugeTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class DerivativeGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[20,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.22072766, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[24,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.08120117, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[28,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.02987224, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[32,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.01098938, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[36,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00404277, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[40,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00148725, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[44,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00054713, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[48,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00020128, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[52,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00007405, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[56,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00002724, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[60,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00001002, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[64,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000369, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[68,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000136, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[72,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000050, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[76,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000018, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[89,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.49123845, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[93,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.40219203, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[97,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.32928698, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[101,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.26959738, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[105,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.22072766, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[109,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.18071653, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[113,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.14795818, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[117,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.12113791, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[121,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.09917933, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[125,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.08120117, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[129,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.06648190, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[133,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.05443077, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[137,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.04456415, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[141,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.03648604, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[145,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.02987224, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[158,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.56130419, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[162,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.52510399, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[166,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.49123845, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[170,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.45955700, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[174,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.42991879, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[178,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.40219203, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[182,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.37625345, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[186,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.35198773, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[190,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.32928698, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[194,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.30805027, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[198,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.28818318, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[202,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.26959738, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[206,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.25221023, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[210,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.23594443, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[214,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.22072766, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[16,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.6, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[85,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.6, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[154,56] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.6, offset(0.000001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class EWMATest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java:[10,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ExponentialMovingAveragesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java:[12,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void maxTicks() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java:[13,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java:[14,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ExponentiallyDecayingReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java:[45,34] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableList());' or '.collect(toCollection(ArrayList::new));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java:[45,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toList());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java:[11,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class FixedNameCsvFileProviderTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java:[22,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getFile() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java:[30,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getFileSanitize() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java:[16,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(histogram.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java:[17,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(histogram.getSum()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HistogramTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java:[11,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Reservoir reservoir = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java:[28,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[22] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedExecutorServiceTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[24,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG ='?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[118,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[183,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void reportsRejectedTasksForThreadPoolExecutor() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[210,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void removesMetricsAfterShutdownForThreadPoolExecutor() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[239,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java:[294,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void removesMetricsAfterShutdownForForkJoinPool() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[46,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[60,65] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[75,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[89,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[103,65] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[120,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[134,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[150,65] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[167,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[181,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[197,65] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[216,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[230,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[282,55] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledRepetitively.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[47,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[61,60] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[76,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[90,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[104,60] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[121,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[135,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[151,60] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[168,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[182,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[198,60] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[217,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[231,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[283,50] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOverrun.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[48,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[62,59] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[77,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[91,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[105,59] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[122,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[136,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[152,59] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[169,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[183,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[199,59] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[218,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[232,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[284,49] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(percentOfPeriod.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[45,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[59,57] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[74,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[88,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[133,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[149,57] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[166,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[180,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[229,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[267,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[281,47] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(scheduledOnce.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[39,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[42,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[56,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[82,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[85,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[96,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[99,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[112,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[127,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[130,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[146,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[174,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[177,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[190,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[193,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[208,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[223,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[226,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[238,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[260,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[275,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[278,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(completed.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[290,53] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[313,43] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(submitted.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[43,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[57,52] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[86,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[100,52] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[131,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[147,52] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[178,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[194,52] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[227,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[279,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(duration.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[41,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[69,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[84,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[114,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[129,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[161,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[176,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[210,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[225,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[262,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[277,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[315,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(running.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[16] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedScheduledExecutorServiceTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[17,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG ='?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[38,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void submitRunnable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[81,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void scheduleRunnable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[126,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void submitCallable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[173,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void scheduleCallable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[222,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void scheduleFixedRateCallable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java:[274,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void scheduleFixedDelayCallable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedThreadFactoryTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedThreadFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java:[61,18] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getFifteenMinuteRate() * 60.0).isCloseTo(ratePerMinute, offset(0.1 * ratePerMinute));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java:[48,18] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getFiveMinuteRate() * 60.0).isCloseTo(ratePerMinute, offset(0.1 * ratePerMinute));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java:[35,18] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getOneMinuteRate() * 60.0).isCloseTo(ratePerMinute, offset(0.1 * ratePerMinute));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java:[12,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MeterApproximationTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[51,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getFifteenMinuteRate()).isCloseTo(0.1988, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[33,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getFifteenMinuteRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[49,51] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getFiveMinuteRate()).isCloseTo(0.1966, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[47,50] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getOneMinuteRate()).isCloseTo(0.1840, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[31,51] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getFiveMinuteRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[29,50] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getOneMinuteRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[27,45] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getMeanRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[45,45] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(meter.getMeanRate()).isCloseTo(0.3, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[23,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[25,37] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getSum()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MeterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java:[13,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricFilterTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricFilterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[77,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[68,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[63,87] Note: [Refaster Rule] AssertJMapRules.AbstractMapAssertContainsExactlyInAnyOrderEntriesOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJMapRules#AbstractMapAssertContainsExactlyInAnyOrderEntriesOf)
  Did you mean 'assertThat(MetricName.EMPTY.tagged("foo", "bar", "baz", "biz").getTags()).containsExactlyInAnyOrderEntriesOf(refTags);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[91,59] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(b.resolve("key").compareTo(b)).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[92,56] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNegative)
  Did you mean 'assertThat(b.compareTo(b.resolve("key"))).isNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[100,56] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNegative)
  Did you mean 'assertThat(MetricName.EMPTY.compareTo(a)).isNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[101,56] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNegative)
  Did you mean 'assertThat(MetricName.EMPTY.compareTo(b)).isNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[14,4] Note: [Refaster Rule] AssertJStringRules.AbstractStringAssertStringIsEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJStringRules#AbstractStringAssertStringIsEmpty)
  Did you mean 'assertThat(MetricName.EMPTY.getKey()).isEmpty();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[55,41] Note: [Refaster Rule] AssertJMapRules.AbstractMapAssertContainsExactlyInAnyOrderEntriesOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJMapRules#AbstractMapAssertContainsExactlyInAnyOrderEntriesOf)
  Did you mean 'assertThat(test2.getTags()).containsExactlyInAnyOrderEntriesOf(refTags);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[52,40] Note: [Refaster Rule] AssertJMapRules.AbstractMapAssertContainsExactlyInAnyOrderEntriesOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJMapRules#AbstractMapAssertContainsExactlyInAnyOrderEntriesOf)
  Did you mean 'assertThat(test.getTags()).containsExactlyInAnyOrderEntriesOf(refTags);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[90,44] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(b.compareTo(a)).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[103,44] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(b.compareTo(a)).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[89,41] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNegative)
  Did you mean 'assertThat(a.compareTo(b)).isNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[102,41] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNegative)
  Did you mean 'assertThat(a.compareTo(b)).isNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricNameTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void empty() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[21,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void emptyResolve() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[27,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void resolveToEmpty() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[33,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void resolve() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[39,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void resolveBothEmpty() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[45,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addTagsVarious() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[59,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void taggedMoreArguments() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[67,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void taggedNotPairs() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[76,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void taggedNotPairs2() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[85,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void compareTo() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[96,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void compareTo2() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricRegistryListenerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java:[11,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java:[12,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java:[13,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java:[14,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[504,18] Note: [Refaster Rule] AssertJRules.AssertThatSetsAreEqual: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetsAreEqual)
  Did you mean 'assertThat(parentMetrics).hasSameElementsAs(childMetrics.stream()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[525,18] Note: [Refaster Rule] AssertJRules.AssertThatSetsAreEqual: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetsAreEqual)
  Did you mean 'assertThat(parentMetrics).hasSameElementsAs(childMetrics.stream()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[551,18] Note: [Refaster Rule] AssertJRules.AssertThatSetsAreEqual: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetsAreEqual)
  Did you mean 'assertThat(parentMetrics).hasSameElementsAs(childMetrics.stream()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[581,18] Note: [Refaster Rule] AssertJRules.AssertThatSetsAreEqual: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetsAreEqual)
  Did you mean 'assertThat(parentMetrics).hasSameElementsAs(childMetrics.stream()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[607,18] Note: [Refaster Rule] AssertJRules.AssertThatSetsAreEqual: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetsAreEqual)
  Did you mean 'assertThat(parentMetrics).hasSameElementsAs(childMetrics.stream()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[636,18] Note: [Refaster Rule] AssertJRules.AssertThatSetsAreEqual: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetsAreEqual)
  Did you mean 'assertThat(parentMetrics).hasSameElementsAs(childMetrics.stream()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[428,48] Note: [Refaster Rule] AssertJRules.AssertThatSetContainsExactlyOneElement: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetContainsExactlyOneElement)
  Did you mean 'assertThat(registry.getNames()).containsExactly(MetricName.build("nested.gauge"));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[562,49] Note: [Refaster Rule] AssertJRules.AssertThatIterableHasSize: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatIterableHasSize)
  Did you mean 'assertThat(deepChildMetrics).hasSize(3);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[649,49] Note: [Refaster Rule] AssertJRules.AssertThatIterableHasSize: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatIterableHasSize)
  Did you mean 'assertThat(deepChildMetrics).hasSize(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[563,45] Note: [Refaster Rule] AssertJRules.AssertThatIterableHasSize: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatIterableHasSize)
  Did you mean 'assertThat(childMetrics).hasSize(5);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[650,45] Note: [Refaster Rule] AssertJRules.AssertThatIterableHasSize: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatIterableHasSize)
  Did you mean 'assertThat(childMetrics).hasSize(3);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[18] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricRegistryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[40,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistryListener listener = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[44,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[45,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[46,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[47,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[294,45] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistryListener other = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[507,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[507,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[528,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[528,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[554,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[554,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[560,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[560,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[584,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[584,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[610,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[610,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[639,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[639,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[645,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[645,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[496,20] Note: [Refaster Rule] AssertJThrowingCallableRules.AssertThatThrownByNullPointerExceptionHasMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules#AssertThatThrownByNullPointerExceptionHasMessage)
  Did you mean 'assertThatThrownBy(() -> registry.register(MetricName.build("any_name"), null)).isInstanceOf(NullPointerException.class).hasMessage("metric == null");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class NoopMetricRegistryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[18,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistryListener listener = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[21,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[22,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[23,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[24,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[223,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("rawtypes")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java:[245,45] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistryListener other = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/RatioGaugeTest.java:[12,42] Note: [Refaster Rule] AssertJObjectRules.AssertThatHasToString: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJObjectRules#AssertThatHasToString)
  Did you mean 'assertThat(ratio).hasToString("100.0:200.0");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/RatioGaugeTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class RatioGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[205,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[195,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[185,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[110,10] Note: [Refaster Rule] JUnitToAssertJRules.FailWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#FailWithMessage)
  Did you mean 'Assertions.fail("NullPointerException must be thrown !!!");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[234,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(customExecutor.isTerminated()).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[241,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsFalse: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsFalse)
  Did you mean 'assertThat(mockExecutor.isTerminated()).isFalse();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[242,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsFalse: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsFalse)
  Did you mean 'assertThat(mockExecutor.isShutdown()).isFalse();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[148,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutor)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[309,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(reporter)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[28] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ScheduledReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[30,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[31,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[32,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[33,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[35,60] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ScheduledExecutorService mockExecutor = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java:[84,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(exception.getMessage().contains("Default metric registry name is already set.")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java:[63,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(exception.getMessage().contains("Default registry name has not been set.")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java:[31,59] Note: [Refaster Rule] AssertJRules.AssertThatSetContainsExactlyOneElement: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetContainsExactlyOneElement)
  Did you mean 'assertThat(SharedMetricRegistries.names()).containsExactly("one");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SharedMetricRegistriesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SimpleSettableGaugeTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SimpleSettableGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[6] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[23] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class Slf4jReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[25,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Logger logger = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[26,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Marker marker = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[27,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[82,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[90,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[107,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[110,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[127,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java:[137,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java:[102,55] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(clock.getTick() * 256).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingTimeWindowArrayReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java:[19,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java:[33,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java:[85,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getTickOverflow() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java:[45,62] Note: [Refaster Rule] TimeRules.EpochInstant: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/TimeRules#EpochInstant)
  Did you mean 'assertThat(stwm.calculateIndexOfTick(Instant.EPOCH)).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java:[63,79] Note: [Refaster Rule] TimeRules.EpochInstant: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/TimeRules#EpochInstant)
  Did you mean 'assertThat(movingAverages.oldestBucketTime).isEqualTo(Instant.EPOCH);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingTimeWindowMovingAveragesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java:[75,55] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(clock.getTick() * 256).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingTimeWindowReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java:[15,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java:[29,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java:[54,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getTickOverflow() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingWindowReservoirTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingWindowReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[41,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(timer.getFifteenMinuteRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[39,51] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(timer.getFiveMinuteRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[37,50] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(timer.getOneMinuteRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[35,45] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(timer.getMeanRate()).isCloseTo(0.0, offset(0.001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[31,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[46,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[114,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[133,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[140,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[33,37] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getSum()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[47,37] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getSum()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[115,37] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getSum()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[141,37] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(timer.getSum()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class TimerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[16,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Reservoir reservoir = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java:[104,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java:[23,59] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNotNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNotNegative)
  Did you mean 'assertThat(i).isLessThan(1000).isNotNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class UniformReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java:[8,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[30,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[39,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[48,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[141,43] Note: [Refaster Rule] AssertJObjectRules.AssertThatHasToString: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJObjectRules#AssertThatHasToString)
  Did you mean 'assertThat(output).hasToString(String.format("1%n2%n3%n4%n5%n"));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[82,55] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get999thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[62,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[67,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get95thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[72,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get98thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[77,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get99thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[161,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(1.5811, offset(0.0001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[20,48] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getValue(0.0)).isCloseTo(1, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[25,48] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getValue(1.0)).isCloseTo(5, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[57,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getMedian()).isCloseTo(3, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[196,53] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsZero)
  Did you mean 'assertThat(singleItemSnapshot.getStdDev()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[189,48] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getStdDev()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[182,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getMean()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[168,45] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getMin()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[175,45] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getMax()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class UniformSnapshotTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[21,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(values.length == weights.length, "Mismatched lengths: " + values.length + " vs " + weights.length);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[49,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[58,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[67,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[150,43] Note: [Refaster Rule] AssertJObjectRules.AssertThatHasToString: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJObjectRules#AssertThatHasToString)
  Did you mean 'assertThat(output).hasToString(String.format("1%n2%n3%n4%n5%n"));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[101,55] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get999thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[81,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get75thPercentile()).isCloseTo(4.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[86,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get95thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[91,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get98thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[96,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get99thPercentile()).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[170,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(1.2688, offset(0.0001));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[39,48] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getValue(0.0)).isCloseTo(1.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[44,48] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getValue(1.0)).isCloseTo(5.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[76,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getMedian()).isCloseTo(3.0, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[210,53] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsZero)
  Did you mean 'assertThat(singleItemSnapshot.getStdDev()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[202,48] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getStdDev()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[194,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getMean()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[178,45] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getMin()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[186,45] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(emptySnapshot.getMax()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class WeightedSnapshotTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[121,33] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.toArray(any(WeightedSample[].class));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[136,33] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.toArray(any(WeightedSample[].class));'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-core ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-core ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-core:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/metrics-core-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-core ---
[info] Processed 87 files (22 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-benchmarks >--------------
[INFO] Building Benchmarks for Metrics5 5.0.0-rc22                       [6/39]
[INFO]   from metrics-benchmarks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-benchmarks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-benchmarks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-benchmarks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/java/io/dropwizard/metrics5/benchmarks/SlidingTimeWindowReservoirsBenchmark.java:[45,13] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return slidingTime.getSnapshot();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/java/io/dropwizard/metrics5/benchmarks/SlidingTimeWindowReservoirsBenchmark.java:[61,13] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return arrTime.getSnapshot();'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-benchmarks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-benchmarks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-benchmarks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (default) @ metrics-benchmarks ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.37 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:5.0.4 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.6.1 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jmh-core-1.37.jar, jopt-simple-5.0.4.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-benchmarks-5.0.0-rc22.jar, metrics-core-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/benchmarks.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-benchmarks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/java' does not exist, ignoring.
[info] Processed 5 files (1 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-caffeine3 >--------------
[INFO] Building Metrics Integration for Caffeine 3.x 5.0.0-rc22          [7/39]
[INFO]   from metrics-caffeine3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-caffeine3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-caffeine3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-caffeine3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-caffeine3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-caffeine3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-caffeine3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-caffeine3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/metrics-caffeine3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-caffeine3 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-collectd >---------------
[INFO] Building Metrics Integration for Collectd 5.0.0-rc22              [8/39]
[INFO]   from metrics-collectd/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-collectd ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-collectd ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-collectd ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[311,57] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[7] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[10] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[153,8] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(!username.isEmpty(), "username is required for securityLevel: " + securityLevel);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[157,8] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(!password.isEmpty(), "password is required for securityLevel: " + securityLevel);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[84,80] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'private Set<MetricAttribute> disabledMetricAttributes = ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[84,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'private Set<MetricAttribute> disabledMetricAttributes = emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[305,14] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean 'LOG.warn("Failed to process metric '{}': {}", metaData.getPlugin(), e.getMessage());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/Sender.java:[22,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(!isConnected(), "Already connected");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[239,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(iv.length == IV_LENGTH, "Bad initialization vector");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[264,6] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(output.length == SHA1_LENGTH, "Bad SHA1 hash");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[122,36] Note: [Refaster Rule] StringRules.StringIsEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsEmpty)
  Did you mean 'if (val == null || val.isEmpty()) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[67,73] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.username = username != null ? username.getBytes(UTF_8) : null;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[68,73] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.password = password != null ? password.getBytes(UTF_8) : null;'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[127,44] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'buffer.put(val.getBytes(US_ASCII)).put(NULL);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-collectd ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java:[22,20] Note: [Refaster Rule] AssertJThrowingCallableRules.AssertThatThrownByIllegalArgumentExceptionHasMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules#AssertThatThrownByIllegalArgumentExceptionHasMessage)
  Did you mean 'assertThatThrownBy(() ->'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java:[35,20] Note: [Refaster Rule] AssertJThrowingCallableRules.AssertThatThrownByIllegalArgumentExceptionHasMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules#AssertThatThrownByIllegalArgumentExceptionHasMessage)
  Did you mean 'assertThatThrownBy(() ->'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CollectdReporterSecurityTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java:[13,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void unableSetSecurityLevelToSignWithoutUsername() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java:[26,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void unableSetSecurityLevelToSignWithoutPassword() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[248,20] Note: [Refaster Rule] AssertJThrowingCallableRules.AssertThatThrownByIllegalArgumentExceptionHasMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules#AssertThatThrownByIllegalArgumentExceptionHasMessage)
  Did you mean 'assertThatThrownBy(() ->'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[261,20] Note: [Refaster Rule] AssertJThrowingCallableRules.AssertThatThrownByIllegalArgumentExceptionHasMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules#AssertThatThrownByIllegalArgumentExceptionHasMessage)
  Did you mean 'assertThatThrownBy(() ->'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[269,59] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf1: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf1)
  Did you mean 'final Map<MetricName, T> map = ImmutableMap.of(name, metric);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[292,52] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean 'return valueList == null ? ImmutableList.of() : valueList.getValues();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[28,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CollectdReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[99,26] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[114,22] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[133,30] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[134,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[157,22] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[158,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[198,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[205,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[239,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void unableSetSecurityLevelToSignWithoutUsername() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[252,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void unableSetSecurityLevelToSignWithoutPassword() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[265,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySortedMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[269,46] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'final Map<MetricName, T> map = singletonMap(name, metric);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java:[292,42] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return valueList == null ? emptyList() : valueList.getValues();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java:[193,75] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(packet.order(ByteOrder.LITTLE_ENDIAN).getDouble()).isCloseTo(42.0, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class PacketWriterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java:[31,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void signRequest() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java:[77,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void encryptRequest() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/SanitizeTest.java:[7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SanitizeTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-collectd ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-collectd ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-collectd:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/metrics-collectd-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-collectd ---
[info] Processed 12 files (4 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-ehcache >---------------
[INFO] Building Metrics Integration for Ehcache 5.0.0-rc22               [9/39]
[INFO]   from metrics-ehcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-ehcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-ehcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-ehcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-ehcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-ehcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-ehcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedCacheDecoratorFactoryTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedCacheDecoratorFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedEhcacheTest.java:[16] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedEhcacheTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-ehcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-ehcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-ehcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/metrics-ehcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-ehcache ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-graphite >---------------
[INFO] Building Graphite Integration for Metrics5 5.0.0-rc22            [10/39]
[INFO]   from metrics-graphite/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-graphite ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-graphite ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-graphite ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-graphite ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java:[66,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(hostname != null && !hostname.isEmpty(), "hostname must not be null or empty");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java:[70,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(port >= 0 && port <= 65535, "port must be a valid IP port (0-65535)");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java:[119,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(!isConnected(), "Already connected");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java:[32,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(Graphite.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQ.java:[112,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(!isConnected(), "Already connected");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQ.java:[136,53] Note: [RedundantStringConversion] Avoid redundant string conversions when possible
    (see https://error-prone.picnic.tech/bugpatterns/RedundantStringConversion)
  Did you mean 'sanitizedName + ' ' + sanitizedValue + ' ' + timestamp + '\n';'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[7] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[10] Note: [NonStaticImport] Member should not be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/NonStaticImport)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[88,58] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'this.disabledMetricAttributes = ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[88,49] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.disabledMetricAttributes = emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[252,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(GraphiteReporter.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[433,17] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[438,19] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[451,20] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteUDP.java:[46,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(!isConnected(), "Already connected");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteUDP.java:[66,64] Note: [RedundantStringConversion] Avoid redundant string conversions when possible
    (see https://error-prone.picnic.tech/bugpatterns/RedundantStringConversion)
  Did you mean 'String str = sanitize(name) + ' ' + sanitize(value) + ' ' + timestamp + '\n';'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java:[176,4] Note: [Refaster Rule] PreconditionsRules.CheckStateWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckStateWithMessage)
  Did you mean 'checkState(!isConnected(), "Already connected");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java:[252,23] Note: [Refaster Rule] CollectionRules.CollectionIsEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/CollectionRules#CollectionIsEmpty)
  Did you mean 'if (!metrics.isEmpty()) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java:[51,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(PickledGraphite.class);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-graphite ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-graphite ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[98,45] Note: [Refaster Rule] AssertJIntegerRules.AbstractIntegerAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJIntegerRules#AbstractIntegerAssertIsZero)
  Did you mean 'assertThat(graphite.getFailures()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[111,45] Note: [Refaster Rule] AssertJIntegerRules.AbstractIntegerAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJIntegerRules#AbstractIntegerAssertIsZero)
  Did you mean 'assertThat(graphite.getFailures()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[95,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(channel)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[108,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(channel)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[23] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GraphiteRabbitMQTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[24,58] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ConnectionFactory connectionFactory = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[25,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Connection connection = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[26,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Channel channel = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[28,63] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ConnectionFactory bogusConnectionFactory = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[29,49] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Connection bogusConnection = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java:[30,43] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Channel bogusChannel = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[182,58] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean '.disabledMetricAttributes(ImmutableSet.of())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[479,28] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'ImmutableSet.of(),'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[495,54] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean '.disabledMetricAttributes(ImmutableSet.of())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[52,56] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean '.disabledMetricAttributes(ImmutableSet.of())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[62,56] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean '.disabledMetricAttributes(ImmutableSet.of())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[36] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GraphiteReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[42,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[43,40] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Graphite graphite = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[44,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[52,47] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.disabledMetricAttributes(emptySet())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[62,47] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.disabledMetricAttributes(emptySet())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[182,49] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.disabledMetricAttributes(emptySet())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[225,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[241,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[245,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[283,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[309,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[336,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[344,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[413,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[421,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[453,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[479,19] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'emptySet(),'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java:[495,45] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.disabledMetricAttributes(emptySet())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteSanitizeTest.java:[6] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GraphiteSanitizeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java:[87,47] Note: [Refaster Rule] AssertJIntegerRules.AbstractIntegerAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJIntegerRules#AbstractIntegerAssertIsZero)
  Did you mean 'assertThat(graphite.getFailures()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java:[26] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GraphiteTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java:[29,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final SocketFactory socketFactory = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java:[32,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Socket socket = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java:[33,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ByteArrayOutputStream output = spy();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GraphiteUDPTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java:[33,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'DatagramChannel mockDatagramChannel = Mockito.mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java:[33,49] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'DatagramChannel mockDatagramChannel = mock(DatagramChannel.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java:[34] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class PickledGraphiteTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java:[35,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final SocketFactory socketFactory = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java:[39,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Socket socket = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java:[40,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ByteArrayOutputStream output = spy();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-graphite ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-graphite ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-graphite:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/metrics-graphite-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-graphite ---
[info] Processed 13 files (5 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-influxdb >---------------
[INFO] Building InfluxDB integration for Metrics5 5.0.0-rc22            [11/39]
[INFO]   from metrics-influxdb/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-influxdb ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-influxdb ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-influxdb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[81,58] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'this.disabledMetricAttributes = ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[81,49] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.disabledMetricAttributes = emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[199,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(InfluxDbReporter.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[282,17] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[287,19] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpSender.java:[45,26] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.address = requireNonNull(address);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-influxdb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbLineBuilderAssumptionsTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InfluxDbLineBuilderAssumptionsTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[56,56] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean '.disabledMetricAttributes(ImmutableSet.of())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[66,56] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean '.disabledMetricAttributes(ImmutableSet.of())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[39] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InfluxDbReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[45,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[46,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final InfluxDbSender sender = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[48,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[56,47] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.disabledMetricAttributes(emptySet())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[66,47] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.disabledMetricAttributes(emptySet())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[200,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[217,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[221,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[252,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[277,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[303,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[311,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[363,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java:[371,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java:[19] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InfluxDbUdpTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java:[25,62] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final DatagramChannel datagramChannel = Mockito.mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java:[25,57] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'private final DatagramChannel datagramChannel = mock(DatagramChannel.class);'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-influxdb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-influxdb ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-influxdb:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/metrics-influxdb-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-influxdb ---
[info] Processed 8 files (4 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jvm >-----------------
[INFO] Building JVM Integration for Metrics5 5.0.0-rc22                 [12/39]
[INFO]   from metrics-jvm/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jvm ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jvm ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jvm ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 12 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSet.java:[22,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(BufferPoolMetricSet.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSet.java:[50,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(gauges);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSet.java:[62,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(gauges);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java:[56,31] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'return ImmutableSet.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java:[43,44] Note: [RedundantStringConversion] Avoid redundant string conversions when possible
    (see https://error-prone.picnic.tech/bugpatterns/RedundantStringConversion)
  Did you mean 'stackTrace.append("\t at ").append(element).append(String.format("%n"));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java:[47,25] Note: [RedundantStringConversion] Avoid redundant string conversions when possible
    (see https://error-prone.picnic.tech/bugpatterns/RedundantStringConversion)
  Did you mean 'stackTrace));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java:[54,24] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSet(deadlocks);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java:[56,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return emptySet();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSet.java:[46,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(gauges);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSet.java:[50,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(gauges);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSet.java:[142,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(gauges);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jvm ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[56,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[65,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[74,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[83,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[92,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[101,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[16] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class BufferPoolMetricSetTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[27,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MBeanServer mBeanServer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ClassLoadingGaugeSetTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ClassLoadingGaugeSetTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ClassLoadingGaugeSetTest.java:[16,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ClassLoadingMXBean cl = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java:[21,44] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat((double) clockTick).isCloseTo(systemTick, offset(1000000.0));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java:[17,44] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat((double) clockTime).isCloseTo(systemTime, offset(200.0));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CpuTimeClockTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[37,31] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNotNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNotNegative)
  Did you mean 'Assertions.assertThat(new FileDescriptorRatioGauge().getValue()).isNotNegative()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class FileDescriptorRatioGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[16,51] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final UnixOperatingSystemMXBean os = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[28,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(gauge.getValue()).isEqualTo(0.1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[36,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(new FileDescriptorRatioGauge().getValue())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[43,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java:[49,80] Note: [Refaster Rule] AssertJMapRules.AssertThatMapIsNotEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJMapRules#AssertThatMapIsNotEmpty)
  Did you mean 'assertThat(new GarbageCollectorMetricSet().getMetrics()).isNotEmpty();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java:[18,61] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf1: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf1)
  Did you mean 'new GarbageCollectorMetricSet(ImmutableList.of(gc));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GarbageCollectorMetricSetTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java:[16,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final GarbageCollectorMXBean gc = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java:[18,47] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'new GarbageCollectorMetricSet(singletonList(gc));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JmxAttributeGaugeTest.java:[56,56] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat((Integer) gauge.getValue()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JmxAttributeGaugeTest.java:[16] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class JmxAttributeGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSetTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class JvmAttributeGaugeSetTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSetTest.java:[15,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final RuntimeMXBean runtime = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[299,74] Note: [Refaster Rule] AssertJMapRules.AssertThatMapIsNotEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJMapRules#AssertThatMapIsNotEmpty)
  Did you mean 'assertThat(new MemoryUsageGaugeSet().getMetrics()).isNotEmpty();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MemoryUsageGaugeSetTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[18,39] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryUsage heap = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[19,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryUsage nonHeap = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[20,39] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryUsage pool = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[21,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryUsage weirdPool = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[22,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryUsage weirdCollection = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[23,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryMXBean mxBean = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[24,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryPoolMXBean memoryPool = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[25,55] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MemoryPoolMXBean weirdMemoryPool = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[162,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void hasAGaugeForTotalMaxWhenNonHeapMaxUndefined() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java:[241,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void hasAGaugeForNonHeapUsageWhenNonHeapMaxUndefined() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ThreadDeadlockDetectorTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java:[15,43] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadMXBean threads = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java:[27,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ThreadInfo thread1 = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java:[38,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ThreadInfo thread2 = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java:[43,18] Note: [Refaster Rule] AssertJObjectRules.AssertThatHasToString: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJObjectRules#AssertThatHasToString)
  Did you mean 'assertThat(output).hasToString(String.format('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ThreadDumpTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java:[18,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadMXBean threadMXBean = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java:[21,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo runnable = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ThreadStatesGaugeSetTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[18,43] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadMXBean threads = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[19,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadDeadlockDetector detector = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[23,43] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo newThread = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[24,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo runnableThread = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[25,47] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo blockedThread = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[26,47] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo waitingThread = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[27,52] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo timedWaitingThread = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[28,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ThreadInfo terminatedThread = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java:[90,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(((Gauge<?>) gauges.getMetrics().get(NEW_COUNT)).getValue()).isEqualTo(1);'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jvm ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jvm ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jvm:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/metrics-jvm-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jvm ---
[info] Processed 23 files (10 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-healthchecks >-------------
[INFO] Building Metrics5 Health Checks 5.0.0-rc22                       [13/39]
[INFO]   from metrics-healthchecks/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java:[80,4] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(expression, message);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java:[35,44] Note: [Refaster Rule] EqualityRules.EnumReferenceEquality: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/EqualityRules#EnumReferenceEquality)
  Did you mean 'if (Async.ScheduleType.FIXED_RATE == async.scheduleType()) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java:[32,41] Note: [Refaster Rule] EqualityRules.EnumReferenceEquality: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/EqualityRules#EnumReferenceEquality)
  Did you mean 'Async.InitialState.HEALTHY == async.initialState()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java:[165,59] Note: [Refaster Rule] TimeRules.InstantAtZone: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/TimeRules#InstantAtZone)
  Did you mean 'ZonedDateTime zonedDateTime = currentInstant.atZone(ZoneId.systemDefault());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java:[126,57] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.details = details == null ? null : unmodifiableMap(details);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java:[221,6] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return PRIME * result + (Long.hashCode(time));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java:[240,55] Note: [RedundantStringConversion] Avoid redundant string conversions when possible
    (see https://error-prone.picnic.tech/bugpatterns/RedundantStringConversion)
  Did you mean 'builder.append(e.getKey()).append("=").append(e.getValue());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java:[95,6] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(!healthChecks.containsKey(name), "A health check named " + name + " already exists");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java:[30,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(HealthCheckRegistry.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java:[131,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedSet(new TreeSet<>(healthChecks.keySet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java:[183,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedMap(results);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java:[225,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedMap(results);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[85,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[67,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[76,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[58,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[40,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[49,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[100,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[112,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[139,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[158,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[181,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[198,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[217,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[235,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockExecutorService)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[141,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(mockFuture).cancel(eq(true));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[19] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class AsyncHealthCheckDecoratorTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[32,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck mockHealthCheck = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[33,67] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ScheduledExecutorService mockExecutorService = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[36,49] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ScheduledFuture mockFuture = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[127,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[141,39] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'verify(mockFuture, times(1)).cancel(true);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[144,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java:[168,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckFilterTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HealthCheckFilterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[77,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[26] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HealthCheckRegistryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[27,63] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ScheduledExecutorService executorService = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[29,59] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheckRegistryListener listener = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[31,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck hc1 = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[32,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck hc2 = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[34,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck.Result r1 = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[35,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck.Result r2 = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[37,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck.Result ar = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[41,41] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ScheduledFuture af = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[104,47] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'HealthCheckRegistryListener listener = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java:[118,47] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'HealthCheckRegistryListener listener = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[184,59] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsNotNegative: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsNotNegative)
  Did you mean 'assertThat(actual.getDuration()).isNotNegative();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HealthCheckTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[32,45] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final HealthCheck underlying = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[92,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final RuntimeException e = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[147,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final RuntimeException e = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[164,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final HealthCheck.Result result = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[174,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final RuntimeException e = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[189,46] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[203,46] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java:[88,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(exception.getMessage().contains("Default health check registry is already set.")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java:[100,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(exception.getMessage().contains("Default health check registry is already set.")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java:[61,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(exception.getMessage().contains("Default registry name has not been set.")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java:[31,64] Note: [Refaster Rule] AssertJRules.AssertThatSetContainsExactlyOneElement: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJRules#AssertThatSetContainsExactlyOneElement)
  Did you mean 'assertThat(SharedHealthCheckRegistries.names()).containsExactly("db");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SharedHealthCheckRegistriesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[21,73] Note: [Refaster Rule] ImmutableSetRules.ImmutableSetOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableSetRules#ImmutableSetOf)
  Did you mean 'when(detector.getDeadlockedThreads()).thenReturn(ImmutableSet.of());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ThreadDeadlockHealthCheckTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[18,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ThreadDeadlockDetector detector = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[21,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'when(detector.getDeadlockedThreads()).thenReturn(emptySet());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[23,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(healthCheck.execute().isHealthy()).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[32,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ThreadDeadlockDetector detector = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java:[47,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(healthCheck.execute().isHealthy()).isTrue();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-healthchecks ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-healthchecks:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/metrics-healthchecks-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-healthchecks ---
[info] Processed 14 files (6 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient >--------------
[INFO] Building Metrics Integration for Apache HttpClient 5.0.0-rc22    [14/39]
[INFO]   from metrics-httpclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManager.java:[114,8] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java:[124,22] [deprecation] rewriteURI(URI,HttpHost,boolean) in URIUtils has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HttpClientMetricNameStrategiesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java:[50,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(argumentCaptor.getValue().getKey().contains("some-other-name")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpClientConnectionManagerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java:[40,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry registry = Mockito.mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java:[40,43] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'final MetricRegistry registry = mock(MetricRegistry.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java:[49,11] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'verify(registry, Mockito.atLeast(1)).registerGauge(argumentCaptor.capture(), any());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java:[49,36] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'Mockito.verify(registry, atLeast(1)).registerGauge(argumentCaptor.capture(), any());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java:[70,10] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java:[25] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpClientsTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java:[27,10] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java:[28,62] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistryListener registryListener = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/metrics-httpclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient ---
[info] Processed 8 files (2 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient5 >-------------
[INFO] Building Metrics Integration for Apache HttpClient 5.x 5.0.0-rc22 [15/39]
[INFO]   from metrics-httpclient5/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient5 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient5 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient5 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[14,40] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[15,40] [deprecation] PlainConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[16,37] [deprecation] SSLConnectionSocketFactory in org.apache.hc.client5.http.ssl has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManager.java:[29,62] [deprecation] getDefault() in DefaultClientTlsStrategy has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[30,28] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[31,28] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[32,37] [deprecation] PlainConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[33,38] [deprecation] SSLConnectionSocketFactory in org.apache.hc.client5.http.ssl has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[96,21] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[116,50] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[160,12] [deprecation] DefaultHttpClientConnectionOperator(Lookup<ConnectionSocketFactory>,SchemePortResolver,DnsResolver) in DefaultHttpClientConnectionOperator has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpRequestExecutor.java:[49,4] [deprecation] HttpRequestExecutor(Timeout,ConnectionReuseStrategy,Http1StreamListener) in HttpRequestExecutor has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient5 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[47,10] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[69,12] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/HttpClientMetricNameStrategiesTest.java:[19] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HttpClientMetricNameStrategiesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java:[57,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(argumentCaptor.getValue().getKey().contains("some-other-name")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedAsyncClientConnectionManagerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java:[47,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry registry = Mockito.mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java:[47,43] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'final MetricRegistry registry = mock(MetricRegistry.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java:[56,11] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'verify(registry, Mockito.atLeast(1)).registerGauge(argumentCaptor.capture(), any());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java:[56,36] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'Mockito.verify(registry, atLeast(1)).registerGauge(argumentCaptor.capture(), any());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[104,20] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[109,20] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[147,22] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[157,22] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[163,10] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[214,22] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[219,22] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[42] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpAsyncClientsTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[86,75] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'exchange.getResponseBody().write("TEST".getBytes(US_ASCII));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[196,77] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'exchange.getResponseBody().write("TEST".getBytes(US_ASCII));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java:[55,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatIsTrue: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatIsTrue)
  Did you mean 'assertThat(argumentCaptor.getValue().getKey().contains("some-other-name")).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpClientConnectionManagerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java:[45,48] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry registry = Mockito.mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java:[45,43] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'final MetricRegistry registry = mock(MetricRegistry.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java:[54,11] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'verify(registry, Mockito.atLeast(1)).registerGauge(argumentCaptor.capture(), any());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java:[54,36] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'Mockito.verify(registry, atLeast(1)).registerGauge(argumentCaptor.capture(), any());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[70,10] Note: [Refaster Rule] JUnitToAssertJRules.Fail: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#Fail)
  Did you mean 'Assertions.fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[25] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpClientsTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[27,10] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[28,62] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistryListener registryListener = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient5 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient5 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient5:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/metrics-httpclient5-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient5 ---
[info] Processed 13 files (4 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-httpasyncclient >-----------
[INFO] Building Metrics Integration for Apache HttpAsyncClient 5.0.0-rc22 [16/39]
[INFO]   from metrics-httpasyncclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpasyncclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpasyncclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpasyncclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedNClientConnManager.java:[40,8] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpasyncclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTest.java:[25] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpClientsTest extends HttpClientTestBase {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[121,10] Note: [Refaster Rule] JUnitToAssertJRules.FailWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#FailWithMessage)
  Did you mean 'Assertions.fail("This should fail as the client should not be able to connect");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[32] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[49,22] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[75,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[81,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'FutureCallback<HttpResponse> futureCallback = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[102,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("unchecked")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[109,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'FutureCallback<HttpResponse> futureCallback = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpasyncclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpasyncclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpasyncclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/metrics-httpasyncclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpasyncclient ---
[info] Processed 5 files (1 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-jakarta-servlet >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 5.0.0-rc22     [17/39]
[INFO]   from metrics-jakarta-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java:[67,27] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (Strings.isNullOrEmpty(metricName)) {'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedFilterContextListenerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[13,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[24,39] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext context = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[26,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContextEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/metrics-jakarta-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlet6 >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 6.x 5.0.0-rc22 [18/39]
[INFO]   from metrics-jakarta-servlet6/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet6 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet6 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet6 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/main/java/io/dropwizard/metrics5/servlet6/AbstractInstrumentedFilter.java:[67,27] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (Strings.isNullOrEmpty(metricName)) {'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet6 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedFilterContextListenerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java:[13,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java:[24,39] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext context = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java:[26,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContextEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet6 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet6 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet6:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/metrics-jakarta-servlet6-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet6 ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-json >-----------------
[INFO] Building Jackson Integration for Metrics5 5.0.0-rc22             [19/39]
[INFO]   from metrics-json/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-json ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-json ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-json ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/java/io/dropwizard/metrics5/json/MetricsModule.java:[189,31] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java:[83,55] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf1: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf1)
  Did you mean 'new SimpleSerializers(ImmutableList.of(new HealthCheckResultSerializer())));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java:[83,41] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'new SimpleSerializers(singletonList(new HealthCheckResultSerializer())));'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-json ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[13] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HealthCheckModuleTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[20,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"healthy\":true,\"duration\":0,\"timestamp\":\"%s\"}", result.getTimestamp());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[28,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"healthy\":true,\"message\":\"yay for me\",\"duration\":0,\"timestamp\":\"%s\"}", result.getTimestamp());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[43,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"healthy\":false,\"message\":\"boo\",\"duration\":0,\"timestamp\":\"%s\"}", result.getTimestamp());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[62,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"healthy\":false,\"message\":\"oh no\",\"error\":{\"type\":\"java.lang.RuntimeException\",\"message\":\"oh no\",\"stack\":[\"Blah.bloo(Blah.java:100)\"]},\"duration\":0,\"timestamp\":\"%s\"}", result.getTimestamp());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[90,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"healthy\":false,\"message\":\"oh well\",\"error\":{\"type\":\"java.lang.RuntimeException\",\"message\":\"oh well\",\"stack\":[\"Blah.blee(Blah.java:150)\"],\"cause\":{\"type\":\"java.lang.RuntimeException\",\"message\":\"oh no\",\"stack\":[\"Blah.bloo(Blah.java:100)\"]}},\"duration\":0,\"timestamp\":\"%s\"}", result.getTimestamp());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java:[131,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"healthy\":true,\"duration\":0,\"boolean\":true,\"integer\":1,\"long\":2,\"float\":3.546,\"double\":4.567,\"BigInteger\":12345,\"BigDecimal\":12345.56789,\"String\":\"string\",\"complex\":{\"field\":\"value\"},\"timestamp\":\"%s\"}", result.getTimestamp());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[19] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricsModuleTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[45,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[53,36] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[56,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[110,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[130,28] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java:[137,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot snapshot = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-json ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-json ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-json:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/metrics-json-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-json ---
[info] Processed 4 files (2 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty11 >---------------
[INFO] Building Metrics Integration for Jetty 11.x and higher 5.0.0-rc22 [20/39]
[INFO]   from metrics-jetty11/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty11 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty11 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty11 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java:[256,44] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean 'this.responses = ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java:[176,34] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java:[176,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java:[191,21] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java:[256,34] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.responses = emptyList();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java:[146,35] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean ': ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java:[135,34] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java:[135,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java:[138,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '? unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java:[146,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyList();'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty11 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactoryTest.java:[24] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedConnectionFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[161,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[165,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(registry.getTimers().get(metricName().resolve("requests")).getSnapshot().getMedian()).isPositive()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[153,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(registry.getMeters().get(metricName().resolve("200-responses")).getCount()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[31] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHandlerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[121,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[131,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[140,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@Disabled("flaky on virtual machines")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java:[228,91] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '"some content from the async\n".getBytes(UTF_8));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListenerTest.java:[25] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpChannelListenerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListenerTest.java:[191,89] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '"some content from the async".getBytes(UTF_8));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedQueuedThreadPoolTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedQueuedThreadPoolTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty11 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty11 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty11:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/metrics-jetty11-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty11 ---
[info] Processed 8 files (4 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlets >-----------
[INFO] Building Metrics5 Utility Jakarta Servlets 5.0.0-rc22            [21/39]
[INFO]   from metrics-jakarta-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/CpuProfileServlet.java:[23,21] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java:[102,13] Note: [Refaster Rule] NullRules.IsNull: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/NullRules#IsNull)
  Did you mean 'if (registry == null) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java:[134,13] Note: [Refaster Rule] NullRules.IsNull: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/NullRules#IsNull)
  Did you mean 'if (registry == null) {'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletExclusionTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class AdminServletExclusionTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class AdminServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class AdminServletUriTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CpuProfileServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[231,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[225,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletContext).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[208,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[224,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[30] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HealthCheckServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[32,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[97,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}", EXPECTED_TIMESTAMP);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[113,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}", EXPECTED_TIMESTAMP);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[170,25] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{%n  \"fun\" : {%n    \"healthy\" : true,%n    \"message\" : \"foo bar 123\",%n    \"duration\" : 0,%n    \"timestamp\" : \"%s\"%n  }%n}", EXPECTED_TIMESTAMP));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[200,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final HealthCheckRegistry healthCheckRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[201,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[202,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[214,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final HealthCheckRegistry healthCheckRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[215,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[216,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[234,52] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[235,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[248,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[249,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricsServletContextListenerTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java:[21,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[258,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[252,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletContext).getAttribute(eq(MetricsServlet.METRICS_REGISTRY));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[235,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[251,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[28] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricsServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[29,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[132,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"%s({\"version\":\"5.0.0\",\"gauges\":{\"g1\":{\"value\":100}},\"counters\":{\"c\":{\"count\":1}},\"histograms\":{\"h\":{\"count\":1,\"max\":1,\"mean\":1.0,\"min\":1,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0}},\"meters\":{\"m\":{\"count\":1,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":3333333.3333333335,\"units\":\"events/second\"}},\"timers\":{\"t\":{\"count\":1,\"max\":1.0,\"mean\":1.0,\"min\":1.0,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":1.0E7,\"duration_units\":\"seconds\",\"rate_units\":\"calls/second\"}}})", callbackParamVal);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[227,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry metricRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[228,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[229,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[236,48] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'verify(servletContext, never()).getAttribute(MetricsServlet.METRICS_REGISTRY);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[241,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry metricRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[242,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[243,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[245,36] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[252,49] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'verify(servletContext, times(1)).getAttribute(MetricsServlet.METRICS_REGISTRY);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[261,52] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[262,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[264,42] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class PingServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ThreadDumpServletTest extends AbstractServletTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/metrics-jakarta-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlets ---
[info] Processed 17 files (2 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jcache >----------------
[INFO] Building Metrics Integration for JCache 5.0.0-rc22               [22/39]
[INFO]   from metrics-jcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/java/io/dropwizard/metrics5/jcache/JCacheGaugeSet.java:[36,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(JCacheGaugeSet.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/java/io/dropwizard/metrics5/jcache/JCacheGaugeSet.java:[55,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(gauges);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/test/java/JCacheGaugeSetTest.java:[74,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat((Float) registry.getGauges().get(myCache.resolve("average-remove-time")).getValue()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/test/java/JCacheGaugeSetTest.java:[70,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat((Float) registry.getGauges().get(myCache.resolve("average-get-time")).getValue()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/test/java/JCacheGaugeSetTest.java:[72,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat((Float) registry.getGauges().get(myCache.resolve("average-put-time")).getValue()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/test/java/JCacheGaugeSetTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class JCacheGaugeSetTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/metrics-jcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcache ---
[info] Processed 2 files (2 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-jdbi3 >----------------
[INFO] Building Metrics Integration for JDBI3 5.0.0-rc22                [23/39]
[INFO]   from metrics-jdbi3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jdbi3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jdbi3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jdbi3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 9 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/InstrumentedTimingCollector.java:[10,33] [deprecation] TimingCollector in org.jdbi.v3.core.statement has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/strategies/DefaultNameStrategy.java:[16,28] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'return Strings.isNullOrEmpty(rawSql) ? MetricName.build("sql.empty") : null;'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jdbi3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[9,35] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[18,10] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[24,20] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/BasicSqlNameStrategyTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class BasicSqlNameStrategyTest extends AbstractStrategyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedSqlLoggerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[18,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry mockRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[19,55] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final StatementNameStrategy mockNameStrategy = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[22,45] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final StatementContext mockContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[23,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer mockTimer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[40,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry mockRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[41,55] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final StatementNameStrategy mockNameStrategy = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[44,45] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final StatementContext mockContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java:[45,32] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Timer mockTimer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/NaiveNameStrategyTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class NaiveNameStrategyTest extends AbstractStrategyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[15] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SmartNameStrategyTest extends AbstractStrategyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[47,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void annotationOnMethod() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[57,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void annotationOnMethodWithCustomName() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[67,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void annotationOnMethodWithCustomAbsoluteName() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[75,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void annotationOnClass() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[85,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void annotationOnMethodAndClassWithCustomNames() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[94,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void noAnnotations() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java:[101,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void noMethod() {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jdbi3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jdbi3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jdbi3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/metrics-jdbi3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jdbi3 ---
[info] Processed 15 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey2 >---------------
[INFO] Building Metrics Integration for Jersey 2.x 5.0.0-rc22           [24/39]
[INFO]   from metrics-jersey2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[310,50] Note: [Refaster Rule] ClassRules.ClassIsInstance: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#ClassIsInstance)
  Did you mean '&& metric.cause.isInstance(event.getException().getCause()))) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[308,43] Note: [Refaster Rule] ClassRules.ClassIsInstance: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#ClassIsInstance)
  Did you mean 'if (metric.cause.isInstance(event.getException())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[546,29] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (!Strings.isNullOrEmpty(explicitName)) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[170,37] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean ': ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[174,36] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[162,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '? unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[170,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyList();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[174,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[421,31] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return new ChainedRequestEventListener('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java:[607,6] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return 31 * result + method.hashCode();'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/CustomReservoirImplementationTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CustomReservoirImplementationTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonFilterMetricsJerseyTest.java:[21] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonFilterMetricsJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonFilterMetricsJerseyTest.java:[37,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(new InstrumentedFilteredResource(testClock));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[53,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[78,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[23] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[37,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceExceptionMeteredPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[95,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[98,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter4xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[101,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter5xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[70,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[27] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[40,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResource.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java:[110,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void resourceNotFound() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java:[34,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceMeteredPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[112,10] Note: [Refaster Rule] JUnitToAssertJRules.FailWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#FailWithMessage)
  Did you mean 'Assertions.fail("expected RuntimeException");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[22] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[37,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(new TestExceptionMapper());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsTimedPerClassJerseyTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsTimedPerClassJerseyTest.java:[34,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceTimedPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java:[20,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java:[28,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java:[36,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java:[52,4] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[23,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[37,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@ExceptionMetered(cause = IOException.class)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[48,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[56,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[64,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[72,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[79,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java:[86,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedSubResource.java:[12,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/metrics-jersey2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey2 ---
[info] Processed 24 files (7 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey3 >---------------
[INFO] Building Metrics Integration for Jersey 3.0.x 5.0.0-rc22         [25/39]
[INFO]   from metrics-jersey3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[311,50] Note: [Refaster Rule] ClassRules.ClassIsInstance: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#ClassIsInstance)
  Did you mean '&& metric.cause.isInstance(event.getException().getCause()))) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[309,43] Note: [Refaster Rule] ClassRules.ClassIsInstance: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#ClassIsInstance)
  Did you mean 'if (metric.cause.isInstance(event.getException())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[547,29] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (!Strings.isNullOrEmpty(explicitName)) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[171,37] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean ': ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[175,36] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[163,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '? unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[171,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyList();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[175,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[422,31] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return new ChainedRequestEventListener('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java:[605,6] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return 31 * result + method.hashCode();'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/CustomReservoirImplementationTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CustomReservoirImplementationTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonFilterMetricsJerseyTest.java:[22] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonFilterMetricsJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonFilterMetricsJerseyTest.java:[38,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(new InstrumentedFilteredResource(testClock));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[54,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[79,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[24] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[38,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceExceptionMeteredPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[92,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[95,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter4xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[98,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter5xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[118,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[119,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[120,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter201.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[130,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[142,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[143,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[131,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[132,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter201.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[146,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[147,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[70,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[28] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[41,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResource.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[136,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void responseMeteredMethodsAreMeteredWithAllLevel() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java:[151,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void resourceNotFound() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsMeteredPerClassJerseyTest.java:[21] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsMeteredPerClassJerseyTest.java:[35,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceMeteredPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[143,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[144,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[157,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[158,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[113,10] Note: [Refaster Rule] JUnitToAssertJRules.FailWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#FailWithMessage)
  Did you mean 'Assertions.fail("expected RuntimeException");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[23] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[38,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(new TestExceptionMapper());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsTimedPerClassJerseyTest.java:[21] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsTimedPerClassJerseyTest.java:[35,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceTimedPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java:[20,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java:[28,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java:[36,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java:[52,4] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[23,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[37,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@ExceptionMetered(cause = IOException.class)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[48,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[56,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[64,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[72,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[79,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java:[86,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedSubResource.java:[12,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/metrics-jersey3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey3 ---
[info] Processed 24 files (7 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jersey31 >---------------
[INFO] Building Metrics Integration for Jersey 3.1.x 5.0.0-rc22         [26/39]
[INFO]   from metrics-jersey31/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey31 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey31 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey31 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[311,50] Note: [Refaster Rule] ClassRules.ClassIsInstance: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#ClassIsInstance)
  Did you mean '&& metric.cause.isInstance(event.getException().getCause()))) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[309,43] Note: [Refaster Rule] ClassRules.ClassIsInstance: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ClassRules#ClassIsInstance)
  Did you mean 'if (metric.cause.isInstance(event.getException())'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[547,29] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (!Strings.isNullOrEmpty(explicitName)) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[171,37] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean ': ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[175,36] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[163,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '? unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[171,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyList();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[175,27] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[422,31] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return new ChainedRequestEventListener('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java:[605,6] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return 31 * result + method.hashCode();'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey31 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/CustomReservoirImplementationTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CustomReservoirImplementationTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonFilterMetricsJerseyTest.java:[22] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonFilterMetricsJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonFilterMetricsJerseyTest.java:[38,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(new InstrumentedFilteredResource(testClock));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[54,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[79,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[24] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java:[38,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceExceptionMeteredPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[92,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[95,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter4xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[98,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter5xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[109,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[110,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[114,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[129,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[130,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[131,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter201.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[141,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[153,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[154,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[113,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[142,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[143,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter201.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[157,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[158,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[70,39] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[28] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[41,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResource.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[103,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void responseMeteredMethodsAreMeteredWithCoarseLevel() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[118,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void responseMeteredMethodsAreMeteredWithDetailedLevel() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[147,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void responseMeteredMethodsAreMeteredWithAllLevel() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java:[162,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void resourceNotFound() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsMeteredPerClassJerseyTest.java:[21] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsMeteredPerClassJerseyTest.java:[35,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceMeteredPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[143,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[144,42] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsZero: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsZero)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(0);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[149,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter2xx.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[150,41] Note: [Refaster Rule] AssertJLongRules.AbstractLongAssertIsOne: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJLongRules#AbstractLongAssertIsOne)
  Did you mean 'assertThat(meter200.getCount()).isEqualTo(1);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[113,10] Note: [Refaster Rule] JUnitToAssertJRules.FailWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#FailWithMessage)
  Did you mean 'Assertions.fail("expected RuntimeException");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[23] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[38,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(new TestExceptionMapper());'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsTimedPerClassJerseyTest.java:[21] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsTimedPerClassJerseyTest.java:[35,4] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return config.register(InstrumentedResourceTimedPerClass.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java:[20,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java:[28,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java:[36,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java:[52,4] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[23,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[37,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@ExceptionMetered(cause = IOException.class)'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[48,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[56,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[64,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[72,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[79,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java:[86,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedSubResource.java:[12,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@GET'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey31 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey31 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey31:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/metrics-jersey31-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey31 ---
[info] Processed 24 files (7 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty10 >---------------
[INFO] Building Metrics Integration for Jetty 10.x and higher 5.0.0-rc22 [27/39]
[INFO]   from metrics-jetty10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java:[256,44] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean 'this.responses = ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java:[176,34] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java:[176,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java:[191,21] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java:[256,34] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.responses = emptyList();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java:[146,35] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean ': ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java:[135,34] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java:[135,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java:[138,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '? unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java:[146,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyList();'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactoryTest.java:[24] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedConnectionFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[161,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[165,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(registry.getTimers().get(metricName().resolve("requests")).getSnapshot().getMedian()).isPositive()'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[153,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(registry.getMeters().get(metricName().resolve("200-responses")).getCount()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[31] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHandlerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[121,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[131,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[140,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@Disabled("flaky on virtual machines")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java:[228,91] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '"some content from the async\n".getBytes(UTF_8));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListenerTest.java:[25] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedHttpChannelListenerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListenerTest.java:[191,89] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '"some content from the async".getBytes(UTF_8));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedQueuedThreadPoolTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedQueuedThreadPoolTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/metrics-jetty10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty10 ---
[info] Processed 8 files (4 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-log4j2 >----------------
[INFO] Building Metrics Integration for Log4j 2.x 5.0.0-rc22            [28/39]
[INFO]   from metrics-log4j2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-log4j2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-log4j2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-log4j2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-log4j2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/java/io/dropwizard/metrics5/log4j2/InstrumentedAppender.java:[85,4] [deprecation] AbstractAppender(String,Filter,Layout<? extends Serializable>,boolean) in AbstractAppender has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/java/io/dropwizard/metrics5/log4j2/InstrumentedAppender.java:[96,4] [deprecation] AbstractAppender(String,Filter,Layout<? extends Serializable>,boolean) in AbstractAppender has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-log4j2 ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-log4j2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/apache/logging/log4j/log4j-core/2.24.1/log4j-core-2.24.1.jar(/org/apache/logging/log4j/core/LoggerContext.class): warning: Cannot find annotation method 'value()' in type 'SuppressFBWarnings': class file for edu.umd.cs.findbugs.annotations.SuppressFBWarnings not found
/home/rick/.m2/repository/org/apache/logging/log4j/log4j-core/2.24.1/log4j-core-2.24.1.jar(/org/apache/logging/log4j/core/LoggerContext.class): warning: Cannot find annotation method 'justification()' in type 'SuppressFBWarnings'
/home/rick/.m2/repository/org/apache/logging/log4j/log4j-core/2.24.1/log4j-core-2.24.1.jar(/org/apache/logging/log4j/core/config/ConfigurationSource.class): warning: Cannot find annotation method 'value()' in type 'SuppressFBWarnings'
/home/rick/.m2/repository/org/apache/logging/log4j/log4j-core/2.24.1/log4j-core-2.24.1.jar(/org/apache/logging/log4j/core/config/ConfigurationSource.class): warning: Cannot find annotation method 'justification()' in type 'SuppressFBWarnings'
/home/rick/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.1/log4j-api-2.24.1.jar(/org/apache/logging/log4j/Level.class): warning: Cannot find annotation method 'value()' in type 'BaselineIgnore': class file for aQute.bnd.annotation.baseline.BaselineIgnore not found
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderConfigTest.java:[15,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedAppenderConfigTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderTest.java:[15,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedAppenderTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderTest.java:[21,37] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final LogEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-log4j2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-log4j2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-log4j2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/metrics-log4j2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-log4j2 ---
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback13 >--------------
[INFO] Building Metrics Integration for Logback 1.3.x 5.0.0-rc22        [29/39]
[INFO]   from metrics-logback13/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback13 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback13 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback13 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/java/io/dropwizard/metrics/logback13/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback13 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/java/io/dropwizard/metrics/logback13/InstrumentedAppenderTest.java:[15,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedAppenderTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/java/io/dropwizard/metrics/logback13/InstrumentedAppenderTest.java:[21,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ILoggingEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback13 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback13 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback13:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/metrics-logback13-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback13 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback14 >--------------
[INFO] Building Metrics Integration for Logback 1.4.x 5.0.0-rc22        [30/39]
[INFO]   from metrics-logback14/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback14 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback14 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback14 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/java/io/dropwizard/metrics/logback14/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback14 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/java/io/dropwizard/metrics/logback14/InstrumentedAppenderTest.java:[15,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedAppenderTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/java/io/dropwizard/metrics/logback14/InstrumentedAppenderTest.java:[21,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ILoggingEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback14 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback14 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback14:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/metrics-logback14-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback14 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback15 >--------------
[INFO] Building Metrics Integration for Logback 1.5.x 5.0.0-rc22        [31/39]
[INFO]   from metrics-logback15/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback15 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback15 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback15 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/java/io/dropwizard/metrics5/logback15/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback15 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/java/io/dropwizard/metrics5/logback15/InstrumentedAppenderTest.java:[15,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedAppenderTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/java/io/dropwizard/metrics5/logback15/InstrumentedAppenderTest.java:[21,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ILoggingEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback15 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback15 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback15:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/metrics-logback15-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback15 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-servlet >---------------
[INFO] Building Metrics Integration for Servlets 5.0.0-rc22             [32/39]
[INFO]   from metrics-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java:[67,27] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (Strings.isNullOrEmpty(metricName)) {'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedFilterContextListenerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[13,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final MetricRegistry registry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[24,39] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext context = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java:[26,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContextEvent event = mock();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/metrics-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-servlets >---------------
[INFO] Building Metrics5 Utility Servlets 5.0.0-rc22                    [33/39]
[INFO]   from metrics-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/CpuProfileServlet.java:[23,21] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java:[102,13] Note: [Refaster Rule] NullRules.IsNull: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/NullRules#IsNull)
  Did you mean 'if (registry == null) {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java:[134,13] Note: [Refaster Rule] NullRules.IsNull: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/NullRules#IsNull)
  Did you mean 'if (registry == null) {'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 10 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class AdminServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class AdminServletUriTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CpuProfileServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[231,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[225,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletContext).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[208,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[224,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[30] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HealthCheckServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[32,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[97,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}", EXPECTED_TIMESTAMP);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[113,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}", EXPECTED_TIMESTAMP);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[170,25] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"{%n  \"fun\" : {%n    \"healthy\" : true,%n    \"message\" : \"foo bar 123\",%n    \"duration\" : 0,%n    \"timestamp\" : \"%s\"%n  }%n}", EXPECTED_TIMESTAMP));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[200,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final HealthCheckRegistry healthCheckRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[201,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[202,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[214,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final HealthCheckRegistry healthCheckRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[215,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[216,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[234,52] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[235,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[248,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[249,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricsServletContextListenerTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java:[21,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[258,4] Note: [Refaster Rule] JUnitToAssertJRules.AssertThatThrownByIsInstanceOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules#AssertThatThrownByIsInstanceOf)
  Did you mean 'assertThatThrownBy(() -> {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[252,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletContext).getAttribute(eq(MetricsServlet.METRICS_REGISTRY));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[235,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[251,10] Note: [Refaster Rule] MockitoRules.VerifyOnce: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/MockitoRules#VerifyOnce)
  Did you mean 'verify(servletConfig).getServletContext();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[28] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricsServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[29,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Clock clock = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[132,18] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"%s({\"version\":\"5.0.0\",\"gauges\":{\"g1\":{\"value\":100}},\"counters\":{\"c\":{\"count\":1}},\"histograms\":{\"h\":{\"count\":1,\"max\":1,\"mean\":1.0,\"min\":1,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0}},\"meters\":{\"m\":{\"count\":1,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":3333333.3333333335,\"units\":\"events/second\"}},\"timers\":{\"t\":{\"count\":1,\"max\":1.0,\"mean\":1.0,\"min\":1.0,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":1.0E7,\"duration_units\":\"seconds\",\"rate_units\":\"calls/second\"}}})", callbackParamVal);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[227,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry metricRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[228,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[229,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[236,48] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'verify(servletContext, never()).getAttribute(MetricsServlet.METRICS_REGISTRY);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[241,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final MetricRegistry metricRegistry = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[242,46] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[243,44] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[245,36] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[252,49] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'verify(servletContext, times(1)).getAttribute(MetricsServlet.METRICS_REGISTRY);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[261,52] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[262,50] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[264,42] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class PingServletTest extends AbstractServletTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ThreadDumpServletTest extends AbstractServletTest {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/metrics-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlets ---
[info] Processed 16 files (2 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jcstress >---------------
[INFO] Building Metrics5 JCStress tests 5.0.0-rc22                      [34/39]
[INFO]   from metrics-jcstress/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcstress ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcstress ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcstress ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcstress ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcstress ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-jcstress ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (main) @ metrics-jcstress ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jcstress:jcstress-core:jar:0.16 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including net.java.dev.jna:jna:jar:5.8.0 in the shaded jar.
[INFO] Including net.java.dev.jna:jna-platform:jar:5.8.0 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] guava-33.3.1-jre.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] checker-qual-3.43.0.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] checker-qual-3.43.0.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jcstress-core-0.16.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar, jopt-simple-4.6.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-core-5.0.0-rc22.jar, metrics-jcstress-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] jna-5.8.0.jar, jna-platform-5.8.0.jar define 2 overlapping resources: 
[WARNING]   - META-INF/AL2.0
[WARNING]   - META-INF/LGPL2.1
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jcstress.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcstress ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/java' does not exist, ignoring.
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jmx >-----------------
[INFO] Building Metrics Integration with JMX 5.0.0-rc22                 [35/39]
[INFO]   from metrics-jmx/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jmx ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jmx ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jmx ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactory.java:[13,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(DefaultObjectNameFactory.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactory.java:[41,6] Note: [DirectReturn] Variable assignment is redundant; value can be returned directly
    (see https://error-prone.picnic.tech/bugpatterns/DirectReturn)
  Did you mean 'return new ObjectName(domain, properties);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[91,6] Note: [Refaster Rule] PreconditionsRules.CheckArgumentWithMessage: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/PreconditionsRules#CheckArgumentWithMessage)
  Did you mean 'checkArgument(onFactory != null, "null objectNameFactory");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[64,55] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean 'this.specificDurationUnits = ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[65,51] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean 'this.specificRateUnits = ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[64,46] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.specificDurationUnits = emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[65,42] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.specificRateUnits = emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[132,46] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.specificDurationUnits = unmodifiableMap(specificDurationUnits);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[143,42] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.specificRateUnits = unmodifiableMap(specificRateUnits);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java:[162,30] [Slf4jLoggerDeclaration] SLF4J logger declarations should follow established best-practices
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLoggerDeclaration)
  Did you mean 'private static final Logger LOG = LoggerFactory.getLogger(JmxReporter.class);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jmx ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactoryTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class DefaultObjectNameFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[38] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class JmxReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[40,34] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'private final String name = randomUUID().toString().replaceAll("[{\\-}]", "");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[52,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Gauge gauge = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[53,38] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Counter counter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[54,42] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Histogram histogram = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[55,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Meter meter = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[56,34] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final Timer timer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[57,62] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private final ObjectNameFactory mockObjectNameFactory = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[69,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot hSnapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[98,35] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final Snapshot tSnapshot = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[288,40] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'MBeanServer mockedMBeanServer = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java:[313,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void jmxMetricNameWithAsterisk() {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jmx ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jmx ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jmx:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/metrics-jmx-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jmx ---
[info] Processed 5 files (3 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-legacy-adapter >------------
[INFO] Building Metrics5 Adapter to Metrics 3/4 API 5.0.0-rc22          [36/39]
[INFO]   from metrics-legacy-adapter/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 36 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,49] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,9] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[110,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[114,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/ScheduledReporter.java:[118,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedMap(items);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[107,31] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toCollection(TreeSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[163,22] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableSortedMap(items);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricSet.java:[27,26] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(items);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricSet.java:[51,24] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'return unmodifiableMap(items);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 24 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[50,4] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[367,22] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CachedGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void create() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java:[24,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWothClock() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java:[13,45] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(clock.getTick()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java:[19,45] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(clock.getTick()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ClockTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java:[11,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void defaultClockCanBeUsed() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java:[17,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void userTimeClockCanBeUsed() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java:[23,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void customTimeClockCanBeUsed() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java:[20] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ConsoleReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java:[38,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createConsoleReporter() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java:[75,79] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(new String(byteArrayOutputStream.toByteArray(), UTF_8))'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class CounterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java:[14,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void incrementCounter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java:[21,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void incrementCounterOnManyPoints() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java:[28,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void decrementCounter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java:[35,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void decrementCounterOnManyPoints() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class DerivativeGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java:[11,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void calculate() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[25,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(32.62, Offset.offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ExponentiallyDecayingReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createReservoir() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[25,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isEqualTo(32.62, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[34,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createReservoirWithCustomSizeAndAlpha() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[41,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createReservoirWithCustomSizeAlphaAndClock() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/FixedNameCsvFileProviderTest.java:[13] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class FixedNameCsvFileProviderTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/GaugeTest.java:[8] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class GaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/GaugeTest.java:[13,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getValue() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java:[26,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(32.62, Offset.offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class HistogramTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void create() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java:[26,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isEqualTo(32.62, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java:[12] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedExecutorServiceTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java:[15,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void create() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java:[13] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedScheduledExecutorServiceTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java:[22,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void create() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedThreadFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java:[14,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void factory() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java:[12,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@SuppressWarnings("DoNotCall")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MeterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createMeteer() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java:[18,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createMeterWithCustomClock() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java:[31,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void mark() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[14] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class MetricRegistryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[19,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void registerMetric() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[26,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void registerAll() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[43,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void registerGauge() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[49,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createCustomGauge() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[55,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createCounter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[62,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createCustomCounter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[76,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createHistogram() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[86,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createCustomHistogram() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[98,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createMeter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[107,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createCustomMeter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[122,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createTimer() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[132,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createCustomTimer() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[148,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void removeMetric() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[159,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void removeMatching() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[171,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addListenerForGauge() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[200,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addListenerForCounter() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[228,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addListenerForHistogram() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[257,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addListenerForMeter() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[286,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addListenerForTimer() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[315,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void removeListener() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[334,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getNames() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[345,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getGauges() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[372,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getGaugesWithFilter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[401,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getHistograms() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[414,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getHistogramsWithFilter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[427,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getCounters() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[440,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getCountersWithFilter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[453,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getMeters() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[467,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getMetersWithFilter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[481,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getTimers() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[494,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getTimersWithFilter() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[507,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getMetrics() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java:[21,58] Note: [Refaster Rule] AssertJObjectRules.AssertThatHasToString: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJObjectRules#AssertThatHasToString)
  Did you mean 'assertThat(ratioGauge.getRatio()).hasToString("1.0:3.0");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class RatioGaugeTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java:[20,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void viewRatin() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java:[25,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void calculateRatio() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java:[26,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(ratioGauge.getValue()).isCloseTo(0.33, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java:[13] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class ScheduledReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java:[54,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void report() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java:[64,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void start() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java:[74,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void startWithoutDelay() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[52,48] Note: [Refaster Rule] AssertJThrowingCallableRules.AssertThatThrownByIllegalStateException: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules#AssertThatThrownByIllegalStateException)
  Did you mean 'assertThatThrownBy(SharedMetricRegistries::getDefault).isInstanceOf(IllegalStateException.class);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SharedMetricRegistriesTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[18,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getOrCreateMetricRegistry() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[26,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void addMetricRegistry() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[36,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void names() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[46,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void tryGetDefaultRegistry() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java:[51,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void getDefaultRegistry() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java:[17] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class Slf4jReporterTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java:[20,30] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private Logger logger = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java:[21,30] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'private Marker marker = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java:[34,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void report() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingTimeWindowArrayReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java:[13,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithWindow() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java:[21,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(reservoir.getSnapshot().getMean()).isCloseTo(110, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java:[25,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithWindowAndClock() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java:[32,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(reservoir.getSnapshot().getMean()).isCloseTo(350, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java:[10] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingTimeWindowReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java:[13,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithWindow() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java:[20,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(reservoir.getSnapshot().getMean()).isCloseTo(110, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java:[24,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithWindowAndClock() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java:[31,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(reservoir.getSnapshot().getMean()).isCloseTo(350, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SlidingWindowReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithBigWindow() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java:[19,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(reservoir.getSnapshot().getMean()).isCloseTo(150, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java:[23,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithLowWindow() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java:[31,71] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(reservoir.getSnapshot().getMean()).isCloseTo(120, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[23,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[27,55] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get999thPercentile()).isCloseTo(5, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[24,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get95thPercentile()).isCloseTo(5, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[25,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get98thPercentile()).isCloseTo(5, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[26,54] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.get99thPercentile()).isCloseTo(5, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[21,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(1.58, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[22,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getMedian()).isCloseTo(3, Offset.offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class SnapshotTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[14,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createSnapshot() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[21,59] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isEqualTo(1.58, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[22,56] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getMedian()).isEqualTo(3, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[23,66] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get75thPercentile()).isEqualTo(4.5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[24,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get95thPercentile()).isEqualTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[25,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get98thPercentile()).isEqualTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[26,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get99thPercentile()).isEqualTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[27,65] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get999thPercentile()).isEqualTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[11] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class TimerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[29,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void create() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[38,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithCustomReservoir() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[47,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createWithCustomReservoirAndClock() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[56,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void timerContext() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[64,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void timerRunnable() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[75,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void timerCallable() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[85,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void timerSupplier() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java:[95,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void updateDuration() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java:[25,46] Note: [Refaster Rule] AssertJDoubleRules.AbstractDoubleAssertIsCloseToWithOffset: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules#AbstractDoubleAssertIsCloseToWithOffset)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(36.47, Offset.offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java:[9] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class UniformReservoirTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java:[12,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createReservoir() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java:[25,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isEqualTo(36.47, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java:[34,7] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createReservoirWithCustomSize() {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/metrics-legacy-adapter-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter ---
[info] Processed 60 files (13 reformatted).
[INFO] 
[INFO] -----< io.dropwizard.metrics5:metrics-legacy-adapter-healthchecks >-----
[INFO] Building Metrics5 Health Checks Adapter to Metrics 3/4 API 5.0.0-rc22 [37/39]
[INFO]   from metrics-legacy-adapter-healthchecks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter-healthchecks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter-healthchecks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/metrics-legacy-adapter-healthchecks-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter-healthchecks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/java' does not exist, ignoring.
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty12 >---------------
[INFO] Building Metrics Integration for Jetty 12.x and higher 5.0.0-rc22 [38/39]
[INFO]   from metrics-jetty12/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java:[247,44] Note: [Refaster Rule] ImmutableListRules.ImmutableListOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableListRules#ImmutableListOf)
  Did you mean 'this.responses = ImmutableList.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java:[167,34] Note: [Refaster Rule] ImmutableMapRules.ImmutableMapOf: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/ImmutableMapRules#ImmutableMapOf)
  Did you mean ': ImmutableMap.of();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java:[167,25] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean ': emptyMap();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java:[182,21] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'unmodifiableList('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java:[247,34] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'this.responses = emptyList();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/12.0.14/jetty-server-12.0.14.jar(/org/eclipse/jetty/server/HttpConnectionFactory.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/12.0.14/jetty-server-12.0.14.jar(/org/eclipse/jetty/server/HttpConnectionFactory.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/12.0.14/jetty-server-12.0.14.jar(/org/eclipse/jetty/server/HttpConnectionFactory.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/12.0.14/jetty-server-12.0.14.jar(/org/eclipse/jetty/server/HttpConnectionFactory.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/ssl/SslContextFactory.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/ssl/SslContextFactory.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/ssl/SslContextFactory.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/ssl/SslContextFactory.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java:[22,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedConnectionFactoryTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java:[35,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void setUp() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java:[53,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void tearDown() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java:[59,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void instrumentsConnectionTimes() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java:[73,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void instrumentsActiveConnections() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java:[10,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedQueuedThreadPoolTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java:[17,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void setUp() {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java:[23,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void customMetricsPrefix() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java:[38,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void metricsPrefixBackwardCompatible() throws Exception {'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/metrics-jetty12-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12 ---
[info] Processed 5 files (1 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-jetty12-ee10 >-------------
[INFO] Building Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 5.0.0-rc22 [39/39]
[INFO]   from metrics-jetty12-ee10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12-ee10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12-ee10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12-ee10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12-ee10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/ee10/jetty-ee10-servlet/12.0.14/jetty-ee10-servlet-12.0.14.jar(/org/eclipse/jetty/ee10/servlet/DefaultServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/ee10/jetty-ee10-servlet/12.0.14/jetty-ee10-servlet-12.0.14.jar(/org/eclipse/jetty/ee10/servlet/ServletContextHandler.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/ee10/jetty-ee10-servlet/12.0.14/jetty-ee10-servlet-12.0.14.jar(/org/eclipse/jetty/ee10/servlet/ServletContextHandler.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[180,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[185,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat('?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[172,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(registry.getMeters().get(metricName().resolve(".200-responses")).getCount()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[170,22] Note: [Refaster Rule] AssertJNumberRules.NumberAssertIsPositive: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJNumberRules#NumberAssertIsPositive)
  Did you mean 'assertThat(registry.getMeters().get(metricName().resolve("2xx-responses")).getCount()).isPositive();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[35,7] Note: [JUnitClassModifiers] Non-abstract JUnit test classes should be declared package-private and final
    (see https://error-prone.picnic.tech/bugpatterns/JUnitClassModifiers)
  Did you mean 'final class InstrumentedEE10HandlerTest {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[43,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void setUp() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[65,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void tearDown() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[71,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void hasAName() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[76,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void createsAndRemovesMetricsForTheHandler() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[120,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void responseTimesAreRecordedForBlockingResponses() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[118,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@Disabled("flaky on virtual machines")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[130,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void doStopDoesNotThrowNPE() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[138,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[148,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[159,14] Note: [JUnitMethodDeclaration] JUnit method declaration can likely be improved
    (see https://error-prone.picnic.tech/bugpatterns/JUnitMethodDeclaration)
  Did you mean 'void responseTimesAreRecordedForAsyncResponses() throws Exception {'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[157,2] Note: [LexicographicalAnnotationListing] Sort annotations lexicographically where possible
    (see https://error-prone.picnic.tech/bugpatterns/LexicographicalAnnotationListing)
  Did you mean '@Disabled("flaky on virtual machines")'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java:[253,91] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '"some content from the async\n".getBytes(UTF_8));'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12-ee10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12-ee10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12-ee10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/metrics-jetty12-ee10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12-ee10 ---
[info] Processed 2 files (1 reformatted).
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Metrics5 Parent 5.0.0-rc22:
[INFO] 
[INFO] Metrics5 Parent .................................... SUCCESS [  0.348 s]
[INFO] Metrics5 Documentation ............................. SUCCESS [  1.412 s]
[INFO] Metrics5 BOM ....................................... SUCCESS [  0.009 s]
[INFO] Annotations for Metrics5 ........................... SUCCESS [  4.564 s]
[INFO] Metrics5 Core ...................................... SUCCESS [ 27.676 s]
[INFO] Benchmarks for Metrics5 ............................ SUCCESS [  5.998 s]
[INFO] Metrics Integration for Caffeine 3.x ............... SUCCESS [  8.001 s]
[INFO] Metrics Integration for Collectd ................... SUCCESS [ 14.076 s]
[INFO] Metrics Integration for Ehcache .................... SUCCESS [  8.093 s]
[INFO] Graphite Integration for Metrics5 .................. SUCCESS [ 14.205 s]
[INFO] InfluxDB integration for Metrics5 .................. SUCCESS [ 11.589 s]
[INFO] JVM Integration for Metrics5 ....................... SUCCESS [ 11.988 s]
[INFO] Metrics5 Health Checks ............................. SUCCESS [ 11.640 s]
[INFO] Metrics Integration for Apache HttpClient .......... SUCCESS [  9.543 s]
[INFO] Metrics Integration for Apache HttpClient 5.x ...... SUCCESS [ 10.951 s]
[INFO] Metrics Integration for Apache HttpAsyncClient ..... SUCCESS [  8.025 s]
[INFO] Metrics Integration for Jakarta Servlets ........... SUCCESS [  7.862 s]
[INFO] Metrics Integration for Jakarta Servlets 6.x ....... SUCCESS [  7.217 s]
[INFO] Jackson Integration for Metrics5 ................... SUCCESS [  8.924 s]
[INFO] Metrics Integration for Jetty 11.x and higher ...... SUCCESS [ 11.442 s]
[INFO] Metrics5 Utility Jakarta Servlets .................. SUCCESS [ 11.180 s]
[INFO] Metrics Integration for JCache ..................... SUCCESS [  7.736 s]
[INFO] Metrics Integration for JDBI3 ...................... SUCCESS [  9.524 s]
[INFO] Metrics Integration for Jersey 2.x ................. SUCCESS [ 12.614 s]
[INFO] Metrics Integration for Jersey 3.0.x ............... SUCCESS [ 14.470 s]
[INFO] Metrics Integration for Jersey 3.1.x ............... SUCCESS [ 16.701 s]
[INFO] Metrics Integration for Jetty 10.x and higher ...... SUCCESS [ 13.086 s]
[INFO] Metrics Integration for Log4j 2.x .................. SUCCESS [  7.669 s]
[INFO] Metrics Integration for Logback 1.3.x .............. SUCCESS [  7.401 s]
[INFO] Metrics Integration for Logback 1.4.x .............. SUCCESS [  7.500 s]
[INFO] Metrics Integration for Logback 1.5.x .............. SUCCESS [  9.950 s]
[INFO] Metrics Integration for Servlets ................... SUCCESS [  7.850 s]
[INFO] Metrics5 Utility Servlets .......................... SUCCESS [ 11.958 s]
[INFO] Metrics5 JCStress tests ............................ SUCCESS [  5.342 s]
[INFO] Metrics Integration with JMX ....................... SUCCESS [ 10.732 s]
[INFO] Metrics5 Adapter to Metrics 3/4 API ................ SUCCESS [ 15.020 s]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API .. SUCCESS [  4.963 s]
[INFO] Metrics Integration for Jetty 12.x and higher ...... SUCCESS [  9.111 s]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 SUCCESS [  8.927 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  06:16 min
[INFO] Finished at: 2024-11-18T12:51:22+01:00
[INFO] ------------------------------------------------------------------------
diff --git a/metrics-benchmarks/src/main/java/io/dropwizard/metrics5/benchmarks/SlidingTimeWindowReservoirsBenchmark.java b/metrics-benchmarks/src/main/java/io/dropwizard/metrics5/benchmarks/SlidingTimeWindowReservoirsBenchmark.java
index 72f85e8..13f3b2c 100644
--- a/metrics-benchmarks/src/main/java/io/dropwizard/metrics5/benchmarks/SlidingTimeWindowReservoirsBenchmark.java
+++ b/metrics-benchmarks/src/main/java/io/dropwizard/metrics5/benchmarks/SlidingTimeWindowReservoirsBenchmark.java
@@ -2,7 +2,6 @@ package io.dropwizard.metrics5.benchmarks;
 
 import io.dropwizard.metrics5.SlidingTimeWindowArrayReservoir;
 import io.dropwizard.metrics5.SlidingTimeWindowReservoir;
-import io.dropwizard.metrics5.Snapshot;
 import java.util.concurrent.TimeUnit;
 import org.openjdk.jmh.annotations.Benchmark;
 import org.openjdk.jmh.annotations.Group;
@@ -42,8 +41,7 @@ public class SlidingTimeWindowReservoirsBenchmark {
   @Group("slidingTime")
   @GroupThreads(1)
   public Object slidingTimeRead() {
-    Snapshot snapshot = slidingTime.getSnapshot();
-    return snapshot;
+    return slidingTime.getSnapshot();
   }
 
   @Benchmark
@@ -58,8 +56,7 @@ public class SlidingTimeWindowReservoirsBenchmark {
   @Group("arrTime")
   @GroupThreads(1)
   public Object arrTimeRead() {
-    Snapshot snapshot = arrTime.getSnapshot();
-    return snapshot;
+    return arrTime.getSnapshot();
   }
 
   public static void main(String[] args) throws RunnerException {
diff --git a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java
index 9ea691f..7b54d0b 100644
--- a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java
+++ b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java
@@ -1,13 +1,12 @@
 package io.dropwizard.metrics5.collectd;
 
+import static com.google.common.base.Preconditions.checkArgument;
 import static io.dropwizard.metrics5.MetricAttribute.COUNT;
 import static io.dropwizard.metrics5.MetricAttribute.M15_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.M1_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.M5_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MAX;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MIN;
 import static io.dropwizard.metrics5.MetricAttribute.P50;
 import static io.dropwizard.metrics5.MetricAttribute.P75;
 import static io.dropwizard.metrics5.MetricAttribute.P95;
@@ -16,6 +15,7 @@ import static io.dropwizard.metrics5.MetricAttribute.P99;
 import static io.dropwizard.metrics5.MetricAttribute.P999;
 import static io.dropwizard.metrics5.MetricAttribute.STDDEV;
 
+import com.google.common.collect.ImmutableSet;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Gauge;
@@ -30,7 +30,6 @@ import io.dropwizard.metrics5.Snapshot;
 import io.dropwizard.metrics5.Timer;
 import java.io.IOException;
 import java.net.InetAddress;
-import java.util.Collections;
 import java.util.Map;
 import java.util.Set;
 import java.util.SortedMap;
@@ -81,7 +80,7 @@ public class CollectdReporter extends ScheduledReporter {
     private SecurityLevel securityLevel = SecurityLevel.NONE;
     private String username = "";
     private String password = "";
-    private Set<MetricAttribute> disabledMetricAttributes = Collections.emptySet();
+    private Set<MetricAttribute> disabledMetricAttributes = ImmutableSet.of();
     private int maxLength = Sanitize.DEFAULT_MAX_LENGTH;
 
     private Builder(MetricRegistry registry) {
@@ -150,14 +149,10 @@ public class CollectdReporter extends ScheduledReporter {
 
     public CollectdReporter build(Sender sender) {
       if (securityLevel != SecurityLevel.NONE) {
-        if (username.isEmpty()) {
-          throw new IllegalArgumentException(
-              "username is required for securityLevel: " + securityLevel);
-        }
-        if (password.isEmpty()) {
-          throw new IllegalArgumentException(
-              "password is required for securityLevel: " + securityLevel);
-        }
+        checkArgument(
+            !username.isEmpty(), "username is required for securityLevel: " + securityLevel);
+        checkArgument(
+            !password.isEmpty(), "password is required for securityLevel: " + securityLevel);
       }
       return new CollectdReporter(
           registry,
@@ -302,7 +297,7 @@ public class CollectdReporter extends ScheduledReporter {
     try {
       writer.write(metaData, value);
     } catch (RuntimeException e) {
-      LOG.warn("Failed to process metric '" + metaData.getPlugin() + "': " + e.getMessage());
+      LOG.warn("Failed to process metric '{}': {}", metaData.getPlugin(), e.getMessage());
     } catch (IOException e) {
       LOG.error("Failed to send metric to collectd", e);
     }
@@ -336,9 +331,9 @@ public class CollectdReporter extends ScheduledReporter {
   private void serializeHistogram(MetaData.Builder metaData, Histogram metric) {
     final Snapshot snapshot = metric.getSnapshot();
     writeValue(metaData, COUNT, (double) metric.getCount());
-    writeValue(metaData, MAX, (double) snapshot.getMax());
+    writeValue(metaData, MetricAttribute.MAX, (double) snapshot.getMax());
     writeValue(metaData, MEAN, snapshot.getMean());
-    writeValue(metaData, MIN, (double) snapshot.getMin());
+    writeValue(metaData, MetricAttribute.MIN, (double) snapshot.getMin());
     writeValue(metaData, STDDEV, snapshot.getStdDev());
     writeValue(metaData, P50, snapshot.getMedian());
     writeValue(metaData, P75, snapshot.get75thPercentile());
@@ -351,9 +346,9 @@ public class CollectdReporter extends ScheduledReporter {
   private void serializeTimer(MetaData.Builder metaData, Timer metric) {
     final Snapshot snapshot = metric.getSnapshot();
     writeValue(metaData, COUNT, (double) metric.getCount());
-    writeDuration(metaData, MAX, (double) snapshot.getMax());
+    writeDuration(metaData, MetricAttribute.MAX, (double) snapshot.getMax());
     writeDuration(metaData, MEAN, snapshot.getMean());
-    writeDuration(metaData, MIN, (double) snapshot.getMin());
+    writeDuration(metaData, MetricAttribute.MIN, (double) snapshot.getMin());
     writeDuration(metaData, STDDEV, snapshot.getStdDev());
     writeDuration(metaData, P50, snapshot.getMedian());
     writeDuration(metaData, P75, snapshot.get75thPercentile());
diff --git a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java
index 4c5716e..764b5f8 100644
--- a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java
+++ b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java
@@ -1,10 +1,13 @@
 package io.dropwizard.metrics5.collectd;
 
+import static com.google.common.base.Preconditions.checkState;
+import static java.nio.charset.StandardCharsets.US_ASCII;
+import static java.nio.charset.StandardCharsets.UTF_8;
+
 import java.io.IOException;
 import java.nio.BufferOverflowException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
-import java.nio.charset.StandardCharsets;
 import java.security.InvalidKeyException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
@@ -64,8 +67,8 @@ class PacketWriter {
   PacketWriter(Sender sender, String username, String password, SecurityLevel securityLevel) {
     this.sender = sender;
     this.securityLevel = securityLevel;
-    this.username = username != null ? username.getBytes(StandardCharsets.UTF_8) : null;
-    this.password = password != null ? password.getBytes(StandardCharsets.UTF_8) : null;
+    this.username = username != null ? username.getBytes(UTF_8) : null;
+    this.password = password != null ? password.getBytes(UTF_8) : null;
   }
 
   void write(MetaData metaData, Number... values) throws BufferOverflowException, IOException {
@@ -119,12 +122,12 @@ class PacketWriter {
   }
 
   private void writeString(ByteBuffer buffer, int type, String val) {
-    if (val == null || val.length() == 0) {
+    if (val == null || val.isEmpty()) {
       return;
     }
     int len = HEADER_LEN + val.length() + 1;
     writeHeader(buffer, type, len);
-    buffer.put(val.getBytes(StandardCharsets.US_ASCII)).put(NULL);
+    buffer.put(val.getBytes(US_ASCII)).put(NULL);
   }
 
   private void writeNumber(ByteBuffer buffer, int type, long val) {
@@ -236,9 +239,7 @@ class PacketWriter {
     } catch (InvalidParameterSpecException e) {
       throw new RuntimeException(e);
     }
-    if (iv.length != IV_LENGTH) {
-      throw new IllegalStateException("Bad initialization vector");
-    }
+    checkState(iv.length == IV_LENGTH, "Bad initialization vector");
     final ByteBuffer output = ByteBuffer.allocate(input.remaining() * 2);
     try {
       cipher.doFinal(input, output);
@@ -261,9 +262,7 @@ class PacketWriter {
       final MessageDigest digest = MessageDigest.getInstance(SHA_1_ALGORITHM);
       digest.update(input);
       final byte[] output = digest.digest();
-      if (output.length != SHA1_LENGTH) {
-        throw new IllegalStateException("Bad SHA1 hash");
-      }
+      checkState(output.length == SHA1_LENGTH, "Bad SHA1 hash");
       return output;
     } catch (NoSuchAlgorithmException e) {
       throw new RuntimeException(e);
diff --git a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/Sender.java b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/Sender.java
index 271e31b..4a99ab6 100644
--- a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/Sender.java
+++ b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/Sender.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.collectd;
 
+import static com.google.common.base.Preconditions.checkState;
+
 import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.nio.ByteBuffer;
@@ -19,9 +21,7 @@ public class Sender {
   }
 
   public void connect() throws IOException {
-    if (isConnected()) {
-      throw new IllegalStateException("Already connected");
-    }
+    checkState(!isConnected(), "Already connected");
     if (host != null) {
       address = new InetSocketAddress(host, port);
     }
diff --git a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java
index 4d62df2..c666135 100644
--- a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java
+++ b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterSecurityTest.java
@@ -1,37 +1,37 @@
 package io.dropwizard.metrics5.collectd;
 
-import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 
 import io.dropwizard.metrics5.MetricRegistry;
 import org.junit.jupiter.api.Test;
 
-class CollectdReporterSecurityTest {
+final class CollectdReporterSecurityTest {
 
   private final MetricRegistry registry = new MetricRegistry();
 
   @Test
-  void testUnableSetSecurityLevelToSignWithoutUsername() {
-    assertThatIllegalArgumentException()
-        .isThrownBy(
+  void unableSetSecurityLevelToSignWithoutUsername() {
+    assertThatThrownBy(
             () ->
                 CollectdReporter.forRegistry(registry)
                     .withHostName("eddie")
                     .withSecurityLevel(SecurityLevel.SIGN)
                     .withPassword("t1_g3r")
                     .build(new Sender("localhost", 25826)))
-        .withMessage("username is required for securityLevel: SIGN");
+        .isInstanceOf(IllegalArgumentException.class)
+        .hasMessage("username is required for securityLevel: SIGN");
   }
 
   @Test
-  void testUnableSetSecurityLevelToSignWithoutPassword() {
-    assertThatIllegalArgumentException()
-        .isThrownBy(
+  void unableSetSecurityLevelToSignWithoutPassword() {
+    assertThatThrownBy(
             () ->
                 CollectdReporter.forRegistry(registry)
                     .withHostName("eddie")
                     .withSecurityLevel(SecurityLevel.SIGN)
                     .withUsername("scott")
                     .build(new Sender("localhost", 25826)))
-        .withMessage("password is required for securityLevel: SIGN");
+        .isInstanceOf(IllegalArgumentException.class)
+        .hasMessage("password is required for securityLevel: SIGN");
   }
 }
diff --git a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java
index 6213497..2dd98c8 100644
--- a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java
+++ b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/CollectdReporterTest.java
@@ -1,11 +1,14 @@
 package io.dropwizard.metrics5.collectd;
 
+import static java.util.Collections.emptySortedMap;
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.assertj.core.api.Assertions.assertThatIllegalArgumentException;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Histogram;
 import io.dropwizard.metrics5.Meter;
@@ -14,7 +17,6 @@ import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import io.dropwizard.metrics5.Snapshot;
 import io.dropwizard.metrics5.Timer;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -25,7 +27,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.extension.RegisterExtension;
 
-public class CollectdReporterTest {
+final class CollectdReporterTest {
   @RegisterExtension public static Receiver receiver = new Receiver(25826);
 
   private final MetricRegistry registry = new MetricRegistry();
@@ -96,7 +98,7 @@ public class CollectdReporterTest {
 
   @Test
   void reportsCounters() throws Exception {
-    Counter counter = mock(Counter.class);
+    Counter counter = mock();
     when(counter.getCount()).thenReturn(42L);
 
     reporter.report(
@@ -111,7 +113,7 @@ public class CollectdReporterTest {
 
   @Test
   void reportsMeters() throws Exception {
-    Meter meter = mock(Meter.class);
+    Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
     when(meter.getFiveMinuteRate()).thenReturn(3.0);
@@ -130,8 +132,8 @@ public class CollectdReporterTest {
 
   @Test
   void reportsHistograms() throws Exception {
-    Histogram histogram = mock(Histogram.class);
-    Snapshot snapshot = mock(Snapshot.class);
+    Histogram histogram = mock();
+    Snapshot snapshot = mock();
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSnapshot()).thenReturn(snapshot);
     when(snapshot.getMax()).thenReturn(2L);
@@ -154,8 +156,8 @@ public class CollectdReporterTest {
 
   @Test
   void reportsTimers() throws Exception {
-    Timer timer = mock(Timer.class);
-    Snapshot snapshot = mock(Snapshot.class);
+    Timer timer = mock();
+    Snapshot snapshot = mock();
     when(timer.getSnapshot()).thenReturn(snapshot);
     when(timer.getCount()).thenReturn(1L);
     when(timer.getSnapshot()).thenReturn(snapshot);
@@ -195,14 +197,14 @@ public class CollectdReporterTest {
 
   @Test
   void doesNotReportDisabledMetricAttributes() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
     when(meter.getFiveMinuteRate()).thenReturn(3.0);
     when(meter.getFifteenMinuteRate()).thenReturn(4.0);
     when(meter.getMeanRate()).thenReturn(5.0);
 
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(11L);
 
     CollectdReporter reporter =
@@ -236,37 +238,37 @@ public class CollectdReporterTest {
   }
 
   @Test
-  void testUnableSetSecurityLevelToSignWithoutUsername() {
-    assertThatIllegalArgumentException()
-        .isThrownBy(
+  void unableSetSecurityLevelToSignWithoutUsername() {
+    assertThatThrownBy(
             () ->
                 CollectdReporter.forRegistry(registry)
                     .withHostName("eddie")
                     .withSecurityLevel(SecurityLevel.SIGN)
                     .withPassword("t1_g3r")
                     .build(new Sender("localhost", 25826)))
-        .withMessage("username is required for securityLevel: SIGN");
+        .isInstanceOf(IllegalArgumentException.class)
+        .hasMessage("username is required for securityLevel: SIGN");
   }
 
   @Test
-  void testUnableSetSecurityLevelToSignWithoutPassword() {
-    assertThatIllegalArgumentException()
-        .isThrownBy(
+  void unableSetSecurityLevelToSignWithoutPassword() {
+    assertThatThrownBy(
             () ->
                 CollectdReporter.forRegistry(registry)
                     .withHostName("eddie")
                     .withSecurityLevel(SecurityLevel.SIGN)
                     .withUsername("scott")
                     .build(new Sender("localhost", 25826)))
-        .withMessage("password is required for securityLevel: SIGN");
+        .isInstanceOf(IllegalArgumentException.class)
+        .hasMessage("password is required for securityLevel: SIGN");
   }
 
   private <T> SortedMap<MetricName, T> map() {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   private <T> SortedMap<MetricName, T> map(MetricName name, T metric) {
-    final Map<MetricName, T> map = Collections.singletonMap(name, metric);
+    final Map<MetricName, T> map = ImmutableMap.of(name, metric);
     return new TreeMap<>(map);
   }
 
@@ -289,6 +291,6 @@ public class CollectdReporterTest {
 
   private List<Number> nextValues(Receiver receiver) throws Exception {
     final ValueList valueList = receiver.next();
-    return valueList == null ? Collections.emptyList() : valueList.getValues();
+    return valueList == null ? ImmutableList.of() : valueList.getValues();
   }
 }
diff --git a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java
index 27d6b2f..53749ca 100644
--- a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java
+++ b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/PacketWriterTest.java
@@ -17,7 +17,7 @@ import javax.crypto.spec.IvParameterSpec;
 import javax.crypto.spec.SecretKeySpec;
 import org.junit.jupiter.api.Test;
 
-class PacketWriterTest {
+final class PacketWriterTest {
 
   private MetaData metaData =
       new MetaData.Builder("nw-1.alpine.example.com", 1520961345L, 100)
@@ -28,7 +28,7 @@ class PacketWriterTest {
   private String password = "t1_g$r";
 
   @Test
-  void testSignRequest() throws Exception {
+  void signRequest() throws Exception {
     AtomicBoolean packetVerified = new AtomicBoolean();
     Sender sender =
         new Sender("localhost", 4009) {
@@ -74,7 +74,7 @@ class PacketWriterTest {
   }
 
   @Test
-  void testEncryptRequest() throws Exception {
+  void encryptRequest() throws Exception {
     AtomicBoolean packetVerified = new AtomicBoolean();
     Sender sender =
         new Sender("localhost", 4009) {
@@ -190,6 +190,6 @@ class PacketWriterTest {
     assertThat(amountOfValues).isEqualTo((short) 1);
     byte dataType = packet.get();
     assertThat(dataType).isEqualTo((byte) 1);
-    assertThat(packet.order(ByteOrder.LITTLE_ENDIAN).getDouble()).isEqualTo(42.0, offset(0.01));
+    assertThat(packet.order(ByteOrder.LITTLE_ENDIAN).getDouble()).isCloseTo(42.0, offset(0.01));
   }
 }
diff --git a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/SanitizeTest.java b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/SanitizeTest.java
index 365d6bd..52ee6cc 100644
--- a/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/SanitizeTest.java
+++ b/metrics-collectd/src/test/java/io/dropwizard/metrics5/collectd/SanitizeTest.java
@@ -4,7 +4,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class SanitizeTest {
+final class SanitizeTest {
 
   private Sanitize sanitize = new Sanitize(Sanitize.DEFAULT_MAX_LENGTH);
 
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java b/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java
index 22c8d4c..6e22c83 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java
@@ -1,8 +1,9 @@
 package io.dropwizard.metrics5;
 
+
+import com.google.common.collect.ImmutableSet;
 import java.io.PrintStream;
 import java.text.DateFormat;
-import java.util.Collections;
 import java.util.Date;
 import java.util.Locale;
 import java.util.Map;
@@ -53,7 +54,7 @@ public class ConsoleReporter extends ScheduledReporter {
       this.filter = MetricFilter.ALL;
       this.executor = null;
       this.shutdownExecutorOnStop = true;
-      disabledMetricAttributes = Collections.emptySet();
+      disabledMetricAttributes = ImmutableSet.of();
     }
 
     /**
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java b/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java
index cff228f..6f77ff9 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java
@@ -179,7 +179,7 @@ public class CsvReporter extends ScheduledReporter {
     }
   }
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(CsvReporter.class);
+  private static final Logger LOG = LoggerFactory.getLogger(CsvReporter.class);
 
   private final File directory;
   private final Locale locale;
@@ -391,7 +391,7 @@ public class CsvReporter extends ScheduledReporter {
         }
       }
     } catch (IOException e) {
-      LOGGER.warn("Error writing to {}", name, e);
+      LOG.warn("Error writing to {}", name, e);
     }
   }
 
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/ExponentialMovingAverages.java b/metrics-core/src/main/java/io/dropwizard/metrics5/ExponentialMovingAverages.java
index 4770275..6e9741a 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/ExponentialMovingAverages.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/ExponentialMovingAverages.java
@@ -17,9 +17,9 @@ public class ExponentialMovingAverages implements MovingAverages {
    * If ticking would reduce even Long.MAX_VALUE in the 15 minute EWMA below this target then don't
    * bother ticking in a loop and instead reset all the EWMAs.
    */
-  private static final double maxTickZeroTarget = 0.0001;
+  private static final double MAX_TICK_ZERO_TARGET = 0.0001;
 
-  private static final int maxTicks;
+  private static final int MAX_TICKS;
   private static final long TICK_INTERVAL = TimeUnit.SECONDS.toNanos(5);
 
   static {
@@ -29,8 +29,8 @@ public class ExponentialMovingAverages implements MovingAverages {
     do {
       m3.tick();
       m3Ticks++;
-    } while (m3.getRate(TimeUnit.SECONDS) > maxTickZeroTarget);
-    maxTicks = m3Ticks;
+    } while (m3.getRate(TimeUnit.SECONDS) > MAX_TICK_ZERO_TARGET);
+    MAX_TICKS = m3Ticks;
   }
 
   private final EWMA m1Rate = EWMA.oneMinuteEWMA();
@@ -69,7 +69,7 @@ public class ExponentialMovingAverages implements MovingAverages {
       if (lastTick.compareAndSet(oldTick, newIntervalStartTick)) {
         sum.add(age);
         final long requiredTicks = age / TICK_INTERVAL;
-        if (requiredTicks >= maxTicks) {
+        if (requiredTicks >= MAX_TICKS) {
           m1Rate.reset();
           m5Rate.reset();
           m15Rate.reset();
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java b/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java
index 6c0a2ff..43690af 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java
@@ -1,8 +1,10 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.base.Preconditions.checkArgument;
+import static java.util.Objects.requireNonNull;
+
 import io.dropwizard.metrics5.WeightedSnapshot.WeightedSample;
 import java.time.Duration;
-import java.util.Objects;
 import java.util.concurrent.ConcurrentSkipListMap;
 import java.util.concurrent.ThreadLocalRandom;
 import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
@@ -41,7 +43,7 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
 
   private static final double SECONDS_PER_NANO = .000_000_001D;
   private static final AtomicReferenceFieldUpdater<LockFreeExponentiallyDecayingReservoir, State>
-      stateUpdater =
+      STATE_UPDATER =
           AtomicReferenceFieldUpdater.newUpdater(
               LockFreeExponentiallyDecayingReservoir.class, State.class, "state");
 
@@ -53,7 +55,7 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
 
   private static final class State {
 
-    private static final AtomicIntegerFieldUpdater<State> countUpdater =
+    private static final AtomicIntegerFieldUpdater<State> COUNT_UPDATER =
         AtomicIntegerFieldUpdater.newUpdater(State.class, "count");
 
     private final double alphaNanos;
@@ -89,7 +91,7 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
     private void addSample(
         double priority, long value, double itemWeight, boolean bypassIncrement) {
       if (values.putIfAbsent(priority, new WeightedSample(value, itemWeight)) == null
-          && (bypassIncrement || countUpdater.incrementAndGet(this) > size)) {
+          && (bypassIncrement || COUNT_UPDATER.incrementAndGet(this) > size)) {
         values.pollFirstEntry();
       }
     }
@@ -126,7 +128,7 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
       // It's possible that more values were added while the map was scanned, those with the
       // minimum priorities are removed.
       while (newCount > size) {
-        Objects.requireNonNull(newValues.pollFirstEntry(), "Expected an entry");
+        requireNonNull(newValues.pollFirstEntry(), "Expected an entry");
         newCount--;
       }
       return new State(alphaNanos, size, newTick, newCount, newValues);
@@ -193,7 +195,7 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
 
   private State doRescale(long currentTick, State stateSnapshot) {
     State newState = stateSnapshot.rescale(currentTick);
-    if (stateUpdater.compareAndSet(this, stateSnapshot, newState)) {
+    if (STATE_UPDATER.compareAndSet(this, stateSnapshot, newState)) {
       // newState successfully installed
       return newState;
     }
@@ -235,10 +237,8 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
      * are replaced (based on weight, with some amount of random jitter).
      */
     public Builder size(int value) {
-      if (value <= 0) {
-        throw new IllegalArgumentException(
-            "LockFreeExponentiallyDecayingReservoir size must be positive: " + value);
-      }
+      checkArgument(
+          value > 0, "LockFreeExponentiallyDecayingReservoir size must be positive: " + value);
       this.size = value;
       return this;
     }
@@ -254,13 +254,13 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
 
     /** Interval at which this reservoir is rescaled. */
     public Builder rescaleThreshold(Duration value) {
-      this.rescaleThreshold = Objects.requireNonNull(value, "rescaleThreshold is required");
+      this.rescaleThreshold = requireNonNull(value, "rescaleThreshold is required");
       return this;
     }
 
     /** Clock instance used for decay. */
     public Builder clock(Clock value) {
-      this.clock = Objects.requireNonNull(value, "clock is required");
+      this.clock = requireNonNull(value, "clock is required");
       return this;
     }
 
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java b/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java
index 5779398..e3ac43a 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/MetricName.java
@@ -1,13 +1,19 @@
 package io.dropwizard.metrics5;
 
-import java.util.Collections;
-import java.util.Comparator;
+import static com.google.common.base.Preconditions.checkArgument;
+import static java.util.Collections.unmodifiableMap;
+import static java.util.Map.Entry.comparingByKey;
+import static java.util.Objects.requireNonNull;
+import static java.util.stream.Collectors.joining;
+
+import com.google.common.base.Strings;
+import com.google.common.collect.ImmutableMap;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Objects;
-import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
 /**
@@ -17,7 +23,7 @@ import java.util.stream.Stream;
 public class MetricName implements Comparable<MetricName> {
 
   private static final String SEPARATOR = ".";
-  private static final Map<String, String> EMPTY_TAGS = Collections.emptyMap();
+  private static final Map<String, String> EMPTY_TAGS = ImmutableMap.of();
   static final MetricName EMPTY = new MetricName("", EMPTY_TAGS);
 
   /**
@@ -33,7 +39,7 @@ public class MetricName implements Comparable<MetricName> {
   private final Map<String, String> tags;
 
   public MetricName(String key, Map<String, String> tags) {
-    this.key = Objects.requireNonNull(key);
+    this.key = requireNonNull(key);
     this.tags = tags.isEmpty() ? EMPTY_TAGS : unmodifiableSortedCopy(tags);
   }
 
@@ -63,9 +69,9 @@ public class MetricName implements Comparable<MetricName> {
     }
 
     String newKey =
-        Stream.concat(Stream.of(key), Stream.of(parts))
-            .filter(s -> s != null && !s.isEmpty())
-            .collect(Collectors.joining(SEPARATOR));
+        Stream.concat(Stream.of(key), Arrays.stream(parts))
+            .filter(s -> !Strings.isNullOrEmpty(s))
+            .collect(joining(SEPARATOR));
     return new MetricName(newKey, tags);
   }
 
@@ -94,9 +100,7 @@ public class MetricName implements Comparable<MetricName> {
       return this;
     }
 
-    if (pairs.length % 2 != 0) {
-      throw new IllegalArgumentException("Argument count must be even");
-    }
+    checkArgument(pairs.length % 2 == 0, "Argument count must be even");
 
     final Map<String, String> add = new HashMap<>();
     for (int i = 0; i < pairs.length; i += 2) {
@@ -201,8 +205,8 @@ public class MetricName implements Comparable<MetricName> {
   private static <K extends Comparable<K>, V> Map<K, V> unmodifiableSortedCopy(Map<K, V> map) {
     LinkedHashMap<K, V> sorted = new LinkedHashMap<>();
     map.entrySet().stream()
-        .sorted(Comparator.comparing(Map.Entry::getKey))
+        .sorted(comparingByKey())
         .forEach(e -> sorted.put(e.getKey(), e.getValue()));
-    return Collections.unmodifiableMap(sorted);
+    return unmodifiableMap(sorted);
   }
 }
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java b/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java
index 806cef0..d30ac87 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java
@@ -1,6 +1,10 @@
 package io.dropwizard.metrics5;
 
-import java.util.Collections;
+import static java.util.Collections.unmodifiableMap;
+import static java.util.Collections.unmodifiableSortedMap;
+import static java.util.Collections.unmodifiableSortedSet;
+import static java.util.Objects.requireNonNull;
+
 import java.util.List;
 import java.util.Map;
 import java.util.SortedMap;
@@ -91,9 +95,7 @@ public class MetricRegistry implements MetricSet {
    * @throws IllegalArgumentException if the name is already registered or metric variable is null
    */
   public <T extends Metric> T register(MetricName name, T metric) throws IllegalArgumentException {
-    if (metric == null) {
-      throw new NullPointerException("metric == null");
-    }
+    requireNonNull(metric, "metric == null");
 
     if (metric instanceof MetricRegistry) {
       final MetricRegistry childRegistry = (MetricRegistry) metric;
@@ -213,7 +215,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Counter.class.isInstance(metric);
+            return metric instanceof Counter;
           }
         });
   }
@@ -253,7 +255,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Histogram.class.isInstance(metric);
+            return metric instanceof Histogram;
           }
         });
   }
@@ -293,7 +295,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Meter.class.isInstance(metric);
+            return metric instanceof Meter;
           }
         });
   }
@@ -328,7 +330,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Timer.class.isInstance(metric);
+            return metric instanceof Timer;
           }
         });
   }
@@ -366,7 +368,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Gauge.class.isInstance(metric);
+            return metric instanceof Gauge;
           }
         });
   }
@@ -430,7 +432,7 @@ public class MetricRegistry implements MetricSet {
    * @return the names of all the metrics
    */
   public SortedSet<MetricName> getNames() {
-    return Collections.unmodifiableSortedSet(new TreeSet<>(metrics.keySet()));
+    return unmodifiableSortedSet(new TreeSet<>(metrics.keySet()));
   }
 
   /**
@@ -455,7 +457,7 @@ public class MetricRegistry implements MetricSet {
         timers.put(entry.getKey(), (Gauge<?>) entry.getValue());
       }
     }
-    return Collections.unmodifiableSortedMap(timers);
+    return unmodifiableSortedMap(timers);
   }
 
   /**
@@ -562,7 +564,7 @@ public class MetricRegistry implements MetricSet {
         timers.put(entry.getKey(), (T) entry.getValue());
       }
     }
-    return Collections.unmodifiableSortedMap(timers);
+    return unmodifiableSortedMap(timers);
   }
 
   private void onMetricAdded(MetricName name, Metric metric) {
@@ -627,7 +629,7 @@ public class MetricRegistry implements MetricSet {
 
   @Override
   public Map<MetricName, Metric> getMetrics() {
-    return Collections.unmodifiableMap(metrics);
+    return unmodifiableMap(metrics);
   }
 
   @FunctionalInterface
@@ -646,7 +648,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Counter.class.isInstance(metric);
+            return metric instanceof Counter;
           }
         };
 
@@ -659,7 +661,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Histogram.class.isInstance(metric);
+            return metric instanceof Histogram;
           }
         };
 
@@ -672,7 +674,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Meter.class.isInstance(metric);
+            return metric instanceof Meter;
           }
         };
 
@@ -685,7 +687,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Timer.class.isInstance(metric);
+            return metric instanceof Timer;
           }
         };
 
@@ -699,7 +701,7 @@ public class MetricRegistry implements MetricSet {
 
           @Override
           public boolean isInstance(Metric metric) {
-            return Gauge.class.isInstance(metric);
+            return metric instanceof Gauge;
           }
         };
 
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java b/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java
index 79d3683..7630290 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/NoopMetricRegistry.java
@@ -1,11 +1,14 @@
 package io.dropwizard.metrics5;
 
+import static java.util.Collections.emptySortedMap;
+import static java.util.Collections.emptySortedSet;
 import static java.util.Objects.requireNonNull;
 
+import com.google.common.collect.ImmutableMap;
+import com.google.common.collect.ImmutableSet;
 import java.io.OutputStream;
 import java.time.Duration;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.Map;
 import java.util.Set;
 import java.util.SortedMap;
@@ -158,67 +161,67 @@ public final class NoopMetricRegistry extends MetricRegistry {
   /** {@inheritDoc} */
   @Override
   public SortedSet<MetricName> getNames() {
-    return Collections.emptySortedSet();
+    return emptySortedSet();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Gauge<?>> getGauges() {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Gauge<?>> getGauges(MetricFilter filter) {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Counter> getCounters() {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Counter> getCounters(MetricFilter filter) {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Histogram> getHistograms() {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Histogram> getHistograms(MetricFilter filter) {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Meter> getMeters() {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Meter> getMeters(MetricFilter filter) {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Timer> getTimers() {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
   @Override
   public SortedMap<MetricName, Timer> getTimers(MetricFilter filter) {
-    return Collections.emptySortedMap();
+    return emptySortedMap();
   }
 
   /** {@inheritDoc} */
@@ -236,7 +239,7 @@ public final class NoopMetricRegistry extends MetricRegistry {
   /** {@inheritDoc} */
   @Override
   public Map<MetricName, Metric> getMetrics() {
-    return Collections.emptyMap();
+    return ImmutableMap.of();
   }
 
   static final class NoopMetric implements Metric {
@@ -630,19 +633,19 @@ public final class NoopMetricRegistry extends MetricRegistry {
     /** {@inheritDoc} */
     @Override
     public Set<K> keySet() {
-      return Collections.emptySet();
+      return ImmutableSet.of();
     }
 
     /** {@inheritDoc} */
     @Override
     public Collection<V> values() {
-      return Collections.emptySet();
+      return ImmutableSet.of();
     }
 
     /** {@inheritDoc} */
     @Override
     public Set<Entry<K, V>> entrySet() {
-      return Collections.emptySet();
+      return ImmutableSet.of();
     }
   }
 }
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java b/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java
index 9269921..0b6827d 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/ScheduledReporter.java
@@ -1,7 +1,10 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.base.Preconditions.checkArgument;
+import static java.util.Objects.requireNonNull;
+
+import com.google.common.collect.ImmutableSet;
 import java.io.Closeable;
-import java.util.Collections;
 import java.util.Locale;
 import java.util.Set;
 import java.util.SortedMap;
@@ -128,7 +131,7 @@ public abstract class ScheduledReporter implements Closeable, Reporter {
         durationUnit,
         executor,
         shutdownExecutorOnStop,
-        Collections.emptySet());
+        ImmutableSet.of());
   }
 
   protected ScheduledReporter(
@@ -141,9 +144,7 @@ public abstract class ScheduledReporter implements Closeable, Reporter {
       boolean shutdownExecutorOnStop,
       Set<MetricAttribute> disabledMetricAttributes) {
 
-    if (registry == null) {
-      throw new NullPointerException("registry == null");
-    }
+    requireNonNull(registry, "registry == null");
 
     this.registry = registry;
     this.filter = filter;
@@ -154,7 +155,7 @@ public abstract class ScheduledReporter implements Closeable, Reporter {
     this.durationFactor = durationUnit.toNanos(1);
     this.durationUnit = durationUnit.toString().toLowerCase(Locale.US);
     this.disabledMetricAttributes =
-        disabledMetricAttributes != null ? disabledMetricAttributes : Collections.emptySet();
+        disabledMetricAttributes != null ? disabledMetricAttributes : ImmutableSet.of();
   }
 
   /**
@@ -172,9 +173,7 @@ public abstract class ScheduledReporter implements Closeable, Reporter {
    * for testing.
    */
   synchronized void start(long initialDelay, long period, TimeUnit unit, Runnable runnable) {
-    if (this.scheduledFuture != null) {
-      throw new IllegalArgumentException("Reporter already started");
-    }
+    checkArgument(this.scheduledFuture == null, "Reporter already started");
 
     this.scheduledFuture = getScheduledFuture(initialDelay, period, unit, runnable);
   }
@@ -185,8 +184,8 @@ public abstract class ScheduledReporter implements Closeable, Reporter {
    * @deprecated Use {@link #getScheduledFuture(long, long, TimeUnit, Runnable,
    *     ScheduledExecutorService)} instead.
    */
-  @SuppressWarnings("DeprecatedIsStillUsed")
   @Deprecated
+  @SuppressWarnings("DeprecatedIsStillUsed")
   protected ScheduledFuture<?> getScheduledFuture(
       long initialDelay, long period, TimeUnit unit, Runnable runnable) {
     return getScheduledFuture(initialDelay, period, unit, runnable, this.executor);
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/SharedMetricRegistries.java b/metrics-core/src/main/java/io/dropwizard/metrics5/SharedMetricRegistries.java
index a36606a..9787356 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/SharedMetricRegistries.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/SharedMetricRegistries.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.base.Preconditions.checkState;
+
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
@@ -84,9 +86,7 @@ public class SharedMetricRegistries {
    */
   public static MetricRegistry getDefault() {
     MetricRegistry metricRegistry = tryGetDefault();
-    if (metricRegistry == null) {
-      throw new IllegalStateException("Default registry name has not been set.");
-    }
+    checkState(metricRegistry != null, "Default registry name has not been set.");
     return metricRegistry;
   }
 
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java b/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java
index 9ab54ba..06dfa94 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/Slf4jReporter.java
@@ -4,10 +4,8 @@ import static io.dropwizard.metrics5.MetricAttribute.COUNT;
 import static io.dropwizard.metrics5.MetricAttribute.M15_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.M1_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.M5_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MAX;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MIN;
 import static io.dropwizard.metrics5.MetricAttribute.P50;
 import static io.dropwizard.metrics5.MetricAttribute.P75;
 import static io.dropwizard.metrics5.MetricAttribute.P95;
@@ -16,7 +14,7 @@ import static io.dropwizard.metrics5.MetricAttribute.P99;
 import static io.dropwizard.metrics5.MetricAttribute.P999;
 import static io.dropwizard.metrics5.MetricAttribute.STDDEV;
 
-import java.util.Collections;
+import com.google.common.collect.ImmutableSet;
 import java.util.Map.Entry;
 import java.util.Set;
 import java.util.SortedMap;
@@ -81,7 +79,7 @@ public class Slf4jReporter extends ScheduledReporter {
       this.loggingLevel = LoggingLevel.INFO;
       this.executor = null;
       this.shutdownExecutorOnStop = true;
-      this.disabledMetricAttributes = Collections.emptySet();
+      this.disabledMetricAttributes = ImmutableSet.of();
     }
 
     /**
@@ -306,8 +304,8 @@ public class Slf4jReporter extends ScheduledReporter {
     b.append("type=TIMER");
     append(b, "name", prefix(name));
     appendCountIfEnabled(b, timer);
-    appendLongDurationIfEnabled(b, MIN, snapshot::getMin);
-    appendLongDurationIfEnabled(b, MAX, snapshot::getMax);
+    appendLongDurationIfEnabled(b, MetricAttribute.MIN, snapshot::getMin);
+    appendLongDurationIfEnabled(b, MetricAttribute.MAX, snapshot::getMax);
     appendDoubleDurationIfEnabled(b, MEAN, snapshot::getMean);
     appendDoubleDurationIfEnabled(b, STDDEV, snapshot::getStdDev);
     appendDoubleDurationIfEnabled(b, P50, snapshot::getMedian);
@@ -338,8 +336,8 @@ public class Slf4jReporter extends ScheduledReporter {
     b.append("type=HISTOGRAM");
     append(b, "name", prefix(name));
     appendCountIfEnabled(b, histogram);
-    appendLongIfEnabled(b, MIN, snapshot::getMin);
-    appendLongIfEnabled(b, MAX, snapshot::getMax);
+    appendLongIfEnabled(b, MetricAttribute.MIN, snapshot::getMin);
+    appendLongIfEnabled(b, MetricAttribute.MAX, snapshot::getMax);
     appendDoubleIfEnabled(b, MEAN, snapshot::getMean);
     appendDoubleIfEnabled(b, STDDEV, snapshot::getStdDev);
     appendDoubleIfEnabled(b, P50, snapshot::getMedian);
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAverages.java b/metrics-core/src/main/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAverages.java
index e70b020..cccf48a 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAverages.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAverages.java
@@ -186,8 +186,7 @@ public class SlidingTimeWindowMovingAverages implements MovingAverages {
       buckets.stream().limit(toIndex).mapToLong(LongAdder::longValue).forEach(adder::add);
       buckets.stream().skip(fromIndex).mapToLong(LongAdder::longValue).forEach(adder::add);
     }
-    long retval = adder.longValue();
-    return retval;
+    return adder.longValue();
   }
 
   @Override
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java b/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java
index 3416ecf..28c6a60 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.base.Preconditions.checkArgument;
 import static java.lang.Math.floor;
 import static java.nio.charset.StandardCharsets.UTF_8;
 
@@ -47,9 +48,9 @@ public class UniformSnapshot extends Snapshot {
    */
   @Override
   public double getValue(double quantile) {
-    if (quantile < 0.0 || quantile > 1.0 || Double.isNaN(quantile)) {
-      throw new IllegalArgumentException(quantile + " is not in [0..1]");
-    }
+    checkArgument(
+        quantile >= 0.0 && quantile <= 1.0 && !Double.isNaN(quantile),
+        quantile + " is not in [0..1]");
 
     if (values.length == 0) {
       return 0.0;
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java b/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java
index 9ef6212..156bd3c 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java
@@ -1,13 +1,14 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.base.Preconditions.checkArgument;
 import static java.nio.charset.StandardCharsets.UTF_8;
+import static java.util.Comparator.comparingLong;
 
 import java.io.OutputStream;
 import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.Comparator;
 
 /** A statistical snapshot of a {@link WeightedSnapshot}. */
 public class WeightedSnapshot extends Snapshot {
@@ -35,7 +36,7 @@ public class WeightedSnapshot extends Snapshot {
   public WeightedSnapshot(Collection<WeightedSample> values) {
     final WeightedSample[] copy = values.toArray(new WeightedSample[] {});
 
-    Arrays.sort(copy, Comparator.comparingLong(w -> w.value));
+    Arrays.sort(copy, comparingLong(w -> w.value));
 
     this.values = new long[copy.length];
     this.normWeights = new double[copy.length];
@@ -64,9 +65,9 @@ public class WeightedSnapshot extends Snapshot {
    */
   @Override
   public double getValue(double quantile) {
-    if (quantile < 0.0 || quantile > 1.0 || Double.isNaN(quantile)) {
-      throw new IllegalArgumentException(quantile + " is not in [0..1]");
-    }
+    checkArgument(
+        quantile >= 0.0 && quantile <= 1.0 && !Double.isNaN(quantile),
+        quantile + " is not in [0..1]");
 
     if (values.length == 0) {
       return 0.0;
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java
index ba6975e..356b1a5 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java
@@ -1,7 +1,6 @@
 package io.dropwizard.metrics5;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -15,8 +14,8 @@ import org.junit.jupiter.api.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-class CachedGaugeTest {
-  private static final Logger LOGGER = LoggerFactory.getLogger(CachedGaugeTest.class);
+final class CachedGaugeTest {
+  private static final Logger LOG = LoggerFactory.getLogger(CachedGaugeTest.class);
   private static final int THREAD_COUNT = 10;
   private static final long RUNNING_TIME_MILLIS = TimeUnit.SECONDS.toMillis(10);
 
@@ -100,12 +99,12 @@ class CachedGaugeTest {
                   Integer newValue = shortTimeoutGauge.getValue();
 
                   if (newValue == null) {
-                    LOGGER.warn("Cached gauge returned null value");
+                    LOG.warn("Cached gauge returned null value");
                     return false;
                   }
 
                   if (newValue < lastValue) {
-                    LOGGER.error(
+                    LOG.error(
                         "Cached gauge returned stale value, last: {}, new: {}",
                         lastValue,
                         newValue);
@@ -122,7 +121,7 @@ class CachedGaugeTest {
     }
 
     for (int i = 0; i < futures.size(); i++) {
-      assertTrue(futures.get(i).get(), "Future " + i + " failed");
+      assertThat(futures.get(i).get()).withFailMessage("Future " + i + " failed").isTrue();
     }
 
     executor.shutdown();
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ChunkedAssociativeLongArrayTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ChunkedAssociativeLongArrayTest.java
index 7b1f2a0..c95bb23 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ChunkedAssociativeLongArrayTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ChunkedAssociativeLongArrayTest.java
@@ -4,10 +4,10 @@ import static org.assertj.core.api.BDDAssertions.then;
 
 import org.junit.jupiter.api.Test;
 
-class ChunkedAssociativeLongArrayTest {
+final class ChunkedAssociativeLongArrayTest {
 
   @Test
-  void testTrim() {
+  void trim() {
     ChunkedAssociativeLongArray array = new ChunkedAssociativeLongArray(3);
     array.put(-3, 3);
     array.put(-2, 1);
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ClassMetadataTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ClassMetadataTest.java
index 0cf31e2..3f0840f 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ClassMetadataTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ClassMetadataTest.java
@@ -4,9 +4,9 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-public class ClassMetadataTest {
+final class ClassMetadataTest {
   @Test
-  public void testParameterMetadataIsAvailable() throws NoSuchMethodException {
+  void parameterMetadataIsAvailable() throws NoSuchMethodException {
     assertThat(DefaultSettableGauge.class.getConstructor(Object.class).getParameters())
         .allSatisfy(parameter -> assertThat(parameter.isNamePresent()).isTrue());
   }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java
index 3d35a89..bb669f9 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ClockTest.java
@@ -5,15 +5,15 @@ import static org.assertj.core.api.Assertions.offset;
 
 import org.junit.jupiter.api.Test;
 
-class ClockTest {
+final class ClockTest {
 
   @Test
   void userTimeClock() {
     final Clock.UserTimeClock clock = new Clock.UserTimeClock();
 
-    assertThat((double) clock.getTime()).isEqualTo(System.currentTimeMillis(), offset(100.0));
+    assertThat((double) clock.getTime()).isCloseTo(System.currentTimeMillis(), offset(100.0));
 
-    assertThat((double) clock.getTick()).isEqualTo(System.nanoTime(), offset(1000000.0));
+    assertThat((double) clock.getTick()).isCloseTo(System.nanoTime(), offset(1000000.0));
   }
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java
index 2544152..f6d1b2e 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ConsoleReporterTest.java
@@ -19,12 +19,12 @@ import org.apache.commons.lang3.SystemUtils;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class ConsoleReporterTest {
+final class ConsoleReporterTest {
   private final Locale locale = Locale.US;
   private final TimeZone timeZone = TimeZone.getTimeZone("America/Los_Angeles");
 
-  private final MetricRegistry registry = mock(MetricRegistry.class);
-  private final Clock clock = mock(Clock.class);
+  private final MetricRegistry registry = mock();
+  private final Clock clock = mock();
   private final ByteArrayOutputStream bytes = new ByteArrayOutputStream();
   private final PrintStream output = new PrintStream(bytes);
   private final ConsoleReporter reporter =
@@ -74,7 +74,7 @@ class ConsoleReporterTest {
 
   @Test
   void reportsCounterValues() throws Exception {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
 
     reporter.report(map(), map(MetricName.build("test.counter"), counter), map(), map(), map());
@@ -93,11 +93,11 @@ class ConsoleReporterTest {
 
   @Test
   void reportsHistogramValues() throws Exception {
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSum()).thenReturn(4L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
@@ -138,7 +138,7 @@ class ConsoleReporterTest {
 
   @Test
   void reportsMeterValues() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(3L);
     when(meter.getMeanRate()).thenReturn(2.0);
@@ -167,7 +167,7 @@ class ConsoleReporterTest {
 
   @Test
   void reportsTimerValues() throws Exception {
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
     when(timer.getSum()).thenReturn(TimeUnit.MILLISECONDS.toNanos(5));
     when(timer.getMeanRate()).thenReturn(2.0);
@@ -175,7 +175,7 @@ class ConsoleReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -239,7 +239,7 @@ class ConsoleReporterTest {
             .disabledMetricAttributes(disabledMetricAttributes)
             .build();
 
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(5L);
     when(meter.getMeanRate()).thenReturn(2.0);
@@ -283,7 +283,7 @@ class ConsoleReporterTest {
             .disabledMetricAttributes(disabledMetricAttributes)
             .build();
 
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
     when(timer.getSum()).thenReturn(TimeUnit.MILLISECONDS.toNanos(6));
     when(timer.getMeanRate()).thenReturn(2.0);
@@ -291,7 +291,7 @@ class ConsoleReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -349,11 +349,11 @@ class ConsoleReporterTest {
             .disabledMetricAttributes(disabledMetricAttributes)
             .build();
 
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSum()).thenReturn(5L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/CounterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/CounterTest.java
index cbff53e..6f4778a 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/CounterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/CounterTest.java
@@ -4,12 +4,12 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class CounterTest {
+final class CounterTest {
   private final Counter counter = new Counter();
 
   @Test
   void startsAtZero() {
-    assertThat(counter.getCount()).isZero();
+    assertThat(counter.getCount()).isEqualTo(0);
   }
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java
index bebc00e..63b9baf 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/CsvReporterTest.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5;
 
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
@@ -7,7 +8,6 @@ import static org.mockito.Mockito.when;
 
 import java.io.File;
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.util.Locale;
 import java.util.SortedMap;
@@ -17,11 +17,11 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.io.TempDir;
 
-public class CsvReporterTest {
+final class CsvReporterTest {
   @TempDir public File folder;
 
-  private final MetricRegistry registry = mock(MetricRegistry.class);
-  private final Clock clock = mock(Clock.class);
+  private final MetricRegistry registry = mock();
+  private final Clock clock = mock();
 
   private File dataDirectory;
   private CsvReporter reporter;
@@ -53,7 +53,7 @@ public class CsvReporterTest {
 
   @Test
   void reportsCounterValues() throws Exception {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
 
     reporter.report(map(), map(MetricName.build("test.counter"), counter), map(), map(), map());
@@ -63,11 +63,11 @@ public class CsvReporterTest {
 
   @Test
   void reportsHistogramValues() throws Exception {
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSum()).thenReturn(12L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
@@ -105,7 +105,7 @@ public class CsvReporterTest {
 
   @Test
   void reportsTimerValues() throws Exception {
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
     when(timer.getSum()).thenReturn(TimeUnit.MILLISECONDS.toNanos(6));
     when(timer.getMeanRate()).thenReturn(2.0);
@@ -113,7 +113,7 @@ public class CsvReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -137,8 +137,8 @@ public class CsvReporterTest {
   }
 
   @Test
-  void testCsvFileProviderIsUsed() {
-    CsvFileProvider fileProvider = mock(CsvFileProvider.class);
+  void csvFileProviderIsUsed() {
+    CsvFileProvider fileProvider = mock();
     when(fileProvider.getFile(dataDirectory, "gauge"))
         .thenReturn(new File(dataDirectory, "guage.csv"));
 
@@ -177,7 +177,7 @@ public class CsvReporterTest {
   }
 
   private Meter mockMeter() {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getMeanRate()).thenReturn(2.0);
@@ -198,8 +198,7 @@ public class CsvReporterTest {
 
   @SuppressWarnings("FilesReadStringWithCharset")
   private String fileContents(String filename) throws IOException {
-    return new String(
-        Files.readAllBytes(new File(dataDirectory, filename).toPath()), StandardCharsets.UTF_8);
+    return new String(Files.readAllBytes(new File(dataDirectory, filename).toPath()), UTF_8);
   }
 
   private <T> SortedMap<MetricName, T> map() {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/DefaultSettableGaugeTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/DefaultSettableGaugeTest.java
index d5fdf29..70b5c03 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/DefaultSettableGaugeTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/DefaultSettableGaugeTest.java
@@ -4,7 +4,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class DefaultSettableGaugeTest {
+final class DefaultSettableGaugeTest {
   @Test
   void newSettableGaugeWithoutDefaultReturnsNull() {
     DefaultSettableGauge<String> gauge = new DefaultSettableGauge<>();
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/DerivativeGaugeTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/DerivativeGaugeTest.java
index 9b09b3c..557ac5c 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/DerivativeGaugeTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/DerivativeGaugeTest.java
@@ -4,7 +4,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class DerivativeGaugeTest {
+final class DerivativeGaugeTest {
   private final Gauge<String> gauge1 = () -> "woo";
   private final Gauge<Integer> gauge2 =
       new DerivativeGauge<String, Integer>(gauge1) {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java
index a373839..e4318b9 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/EWMATest.java
@@ -6,74 +6,74 @@ import static org.assertj.core.api.Assertions.offset;
 import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
-class EWMATest {
+final class EWMATest {
   @Test
   void aOneMinuteEWMAWithAValueOfThree() {
     final EWMA ewma = EWMA.oneMinuteEWMA();
     ewma.update(3);
     ewma.tick();
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.6, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.6, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.22072766, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.22072766, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.08120117, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.08120117, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.02987224, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.02987224, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.01098938, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.01098938, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00404277, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00404277, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00148725, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00148725, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00054713, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00054713, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00020128, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00020128, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00007405, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00007405, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00002724, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00002724, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00001002, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00001002, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00000369, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000369, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00000136, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000136, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00000050, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000050, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.00000018, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.00000018, offset(0.000001));
   }
 
   @Test
@@ -82,67 +82,67 @@ class EWMATest {
     ewma.update(3);
     ewma.tick();
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.6, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.6, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.49123845, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.49123845, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.40219203, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.40219203, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.32928698, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.32928698, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.26959738, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.26959738, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.22072766, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.22072766, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.18071653, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.18071653, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.14795818, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.14795818, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.12113791, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.12113791, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.09917933, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.09917933, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.08120117, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.08120117, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.06648190, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.06648190, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.05443077, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.05443077, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.04456415, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.04456415, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.03648604, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.03648604, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.02987224, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.02987224, offset(0.000001));
   }
 
   @Test
@@ -151,67 +151,67 @@ class EWMATest {
     ewma.update(3);
     ewma.tick();
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.6, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.6, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.56130419, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.56130419, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.52510399, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.52510399, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.49123845, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.49123845, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.45955700, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.45955700, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.42991879, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.42991879, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.40219203, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.40219203, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.37625345, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.37625345, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.35198773, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.35198773, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.32928698, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.32928698, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.30805027, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.30805027, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.28818318, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.28818318, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.26959738, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.26959738, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.25221023, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.25221023, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.23594443, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.23594443, offset(0.000001));
 
     elapseMinute(ewma);
 
-    assertThat(ewma.getRate(TimeUnit.SECONDS)).isEqualTo(0.22072766, offset(0.000001));
+    assertThat(ewma.getRate(TimeUnit.SECONDS)).isCloseTo(0.22072766, offset(0.000001));
   }
 
   private void elapseMinute(EWMA ewma) {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java
index 2a21820..c1f8a8c 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentialMovingAveragesTest.java
@@ -7,10 +7,10 @@ import static org.mockito.Mockito.when;
 import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
-public class ExponentialMovingAveragesTest {
+final class ExponentialMovingAveragesTest {
   @Test
-  public void testMaxTicks() {
-    final Clock clock = mock(Clock.class);
+  void maxTicks() {
+    final Clock clock = mock();
     when(clock.getTick()).thenReturn(0L, Long.MAX_VALUE);
     final ExponentialMovingAverages ema = new ExponentialMovingAverages(clock);
     ema.update(Long.MAX_VALUE);
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java
index 5985e81..151ccbc 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ExponentiallyDecayingReservoirTest.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.collect.ImmutableList.toImmutableList;
 import static org.assertj.core.api.Assertions.assertThat;
 
 import java.util.Arrays;
@@ -7,11 +8,10 @@ import java.util.Collection;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicInteger;
-import java.util.stream.Collectors;
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.MethodSource;
 
-public class ExponentiallyDecayingReservoirTest {
+final class ExponentiallyDecayingReservoirTest {
 
   public enum ReservoirFactory {
     EXPONENTIALLY_DECAYING() {
@@ -42,7 +42,7 @@ public class ExponentiallyDecayingReservoirTest {
   public static Collection<Object[]> reservoirs() {
     return Arrays.stream(ReservoirFactory.values())
         .map(value -> new Object[] {value})
-        .collect(Collectors.toList());
+        .collect(toImmutableList());
   }
 
   private ReservoirFactory reservoirFactory;
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java
index c0a9f6b..5b003df 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/FixedNameCsvFileProviderTest.java
@@ -8,7 +8,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.io.TempDir;
 
-public class FixedNameCsvFileProviderTest {
+final class FixedNameCsvFileProviderTest {
   @TempDir public File folder;
 
   private File dataDirectory;
@@ -19,7 +19,7 @@ public class FixedNameCsvFileProviderTest {
   }
 
   @Test
-  void testGetFile() {
+  void getFile() {
     FixedNameCsvFileProvider provider = new FixedNameCsvFileProvider();
     File file = provider.getFile(dataDirectory, "test");
     assertThat(file.getParentFile()).isEqualTo(dataDirectory);
@@ -27,7 +27,7 @@ public class FixedNameCsvFileProviderTest {
   }
 
   @Test
-  void testGetFileSanitize() {
+  void getFileSanitize() {
     FixedNameCsvFileProvider provider = new FixedNameCsvFileProvider();
     File file = provider.getFile(dataDirectory, "/myfake/uri");
     assertThat(file.getParentFile()).isEqualTo(dataDirectory);
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java
index 770c53a..ec2901f 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/HistogramTest.java
@@ -7,14 +7,14 @@ import static org.mockito.Mockito.when;
 
 import org.junit.jupiter.api.Test;
 
-class HistogramTest {
-  private final Reservoir reservoir = mock(Reservoir.class);
+final class HistogramTest {
+  private final Reservoir reservoir = mock();
   private final Histogram histogram = new Histogram(reservoir);
 
   @Test
   void updatesTheCountAndSumOnUpdates() {
-    assertThat(histogram.getCount()).isZero();
-    assertThat(histogram.getSum()).isZero();
+    assertThat(histogram.getCount()).isEqualTo(0);
+    assertThat(histogram.getSum()).isEqualTo(0);
 
     histogram.update(1);
     histogram.update(5);
@@ -25,7 +25,7 @@ class HistogramTest {
 
   @Test
   void returnsTheSnapshotFromTheReservoir() {
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(reservoir.getSnapshot()).thenReturn(snapshot);
 
     assertThat(histogram.getSnapshot()).isEqualTo(snapshot);
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java
index 46d7690..cfb2386 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedExecutorServiceTest.java
@@ -19,10 +19,9 @@ import org.junit.jupiter.api.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-class InstrumentedExecutorServiceTest {
+final class InstrumentedExecutorServiceTest {
 
-  private static final Logger LOGGER =
-      LoggerFactory.getLogger(InstrumentedExecutorServiceTest.class);
+  private static final Logger LOG = LoggerFactory.getLogger(InstrumentedExecutorServiceTest.class);
   private ExecutorService executor;
   private MetricRegistry registry;
   private InstrumentedExecutorService instrumentedExecutorService;
@@ -48,7 +47,7 @@ class InstrumentedExecutorServiceTest {
   void tearDown() throws Exception {
     instrumentedExecutorService.shutdown();
     if (!instrumentedExecutorService.awaitTermination(2, TimeUnit.SECONDS)) {
-      LOGGER.error("InstrumentedExecutorService did not terminate.");
+      LOG.error("InstrumentedExecutorService did not terminate.");
     }
   }
 
@@ -115,8 +114,8 @@ class InstrumentedExecutorServiceTest {
     assertThat(idle.getSnapshot().size()).isEqualTo(1);
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void reportsTasksInformationForThreadPoolExecutor() throws Exception {
     executor =
         new ThreadPoolExecutor(4, 16, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(32));
@@ -180,7 +179,7 @@ class InstrumentedExecutorServiceTest {
   }
 
   @Test
-  public void reportsRejectedTasksForThreadPoolExecutor() throws Exception {
+  void reportsRejectedTasksForThreadPoolExecutor() throws Exception {
     executor =
         new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(1));
     instrumentedExecutorService = new InstrumentedExecutorService(executor, registry, "tp");
@@ -207,7 +206,7 @@ class InstrumentedExecutorServiceTest {
   }
 
   @Test
-  public void removesMetricsAfterShutdownForThreadPoolExecutor() {
+  void removesMetricsAfterShutdownForThreadPoolExecutor() {
     executor =
         new ThreadPoolExecutor(4, 16, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(32));
     instrumentedExecutorService = new InstrumentedExecutorService(executor, registry, "stp");
@@ -236,8 +235,8 @@ class InstrumentedExecutorServiceTest {
             MetricRegistry.name("stp", "tasks.capacity"));
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void reportsTasksInformationForForkJoinPool() throws Exception {
     executor = Executors.newWorkStealingPool(4);
     instrumentedExecutorService = new InstrumentedExecutorService(executor, registry, "fjp");
@@ -291,7 +290,7 @@ class InstrumentedExecutorServiceTest {
   }
 
   @Test
-  public void removesMetricsAfterShutdownForForkJoinPool() {
+  void removesMetricsAfterShutdownForForkJoinPool() {
     executor = Executors.newWorkStealingPool(4);
     instrumentedExecutorService = new InstrumentedExecutorService(executor, registry, "sfjp");
 
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java
index fb9cbe9..b85071b 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedScheduledExecutorServiceTest.java
@@ -13,8 +13,8 @@ import org.junit.jupiter.api.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-class InstrumentedScheduledExecutorServiceTest {
-  private static final Logger LOGGER =
+final class InstrumentedScheduledExecutorServiceTest {
+  private static final Logger LOG =
       LoggerFactory.getLogger(InstrumentedScheduledExecutorServiceTest.class);
 
   private final ScheduledExecutorService scheduledExecutor =
@@ -35,17 +35,17 @@ class InstrumentedScheduledExecutorServiceTest {
   private final Histogram percentOfPeriod = registry.histogram("xs.scheduled.percent-of-period");
 
   @Test
-  void testSubmitRunnable() throws Exception {
-    assertThat(submitted.getCount()).isZero();
+  void submitRunnable() throws Exception {
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
-    assertThat(completed.getCount()).isZero();
-    assertThat(duration.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
+    assertThat(completed.getCount()).isEqualTo(0);
+    assertThat(duration.getCount()).isEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
     Future<?> theFuture =
         instrumentedScheduledExecutor.submit(
@@ -53,87 +53,87 @@ class InstrumentedScheduledExecutorServiceTest {
               assertThat(submitted.getCount()).isEqualTo(1);
 
               assertThat(running.getCount()).isEqualTo(1);
-              assertThat(completed.getCount()).isZero();
-              assertThat(duration.getCount()).isZero();
+              assertThat(completed.getCount()).isEqualTo(0);
+              assertThat(duration.getCount()).isEqualTo(0);
 
-              assertThat(scheduledOnce.getCount()).isZero();
-              assertThat(scheduledRepetitively.getCount()).isZero();
-              assertThat(scheduledOverrun.getCount()).isZero();
-              assertThat(percentOfPeriod.getCount()).isZero();
+              assertThat(scheduledOnce.getCount()).isEqualTo(0);
+              assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+              assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+              assertThat(percentOfPeriod.getCount()).isEqualTo(0);
             });
 
     theFuture.get();
 
     assertThat(submitted.getCount()).isEqualTo(1);
 
-    assertThat(running.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
     assertThat(completed.getCount()).isEqualTo(1);
     assertThat(duration.getCount()).isEqualTo(1);
     assertThat(duration.getSnapshot().size()).isEqualTo(1);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
   }
 
   @Test
-  void testScheduleRunnable() throws Exception {
-    assertThat(submitted.getCount()).isZero();
+  void scheduleRunnable() throws Exception {
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
-    assertThat(completed.getCount()).isZero();
-    assertThat(duration.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
+    assertThat(completed.getCount()).isEqualTo(0);
+    assertThat(duration.getCount()).isEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
     ScheduledFuture<?> theFuture =
         instrumentedScheduledExecutor.schedule(
             () -> {
-              assertThat(submitted.getCount()).isZero();
+              assertThat(submitted.getCount()).isEqualTo(0);
 
               assertThat(running.getCount()).isEqualTo(1);
-              assertThat(completed.getCount()).isZero();
-              assertThat(duration.getCount()).isZero();
+              assertThat(completed.getCount()).isEqualTo(0);
+              assertThat(duration.getCount()).isEqualTo(0);
 
               assertThat(scheduledOnce.getCount()).isEqualTo(1);
-              assertThat(scheduledRepetitively.getCount()).isZero();
-              assertThat(scheduledOverrun.getCount()).isZero();
-              assertThat(percentOfPeriod.getCount()).isZero();
+              assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+              assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+              assertThat(percentOfPeriod.getCount()).isEqualTo(0);
             },
             10L,
             TimeUnit.MILLISECONDS);
 
     theFuture.get();
 
-    assertThat(submitted.getCount()).isZero();
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
     assertThat(completed.getCount()).isEqualTo(1);
     assertThat(duration.getCount()).isEqualTo(1);
     assertThat(duration.getSnapshot().size()).isEqualTo(1);
 
     assertThat(scheduledOnce.getCount()).isEqualTo(1);
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
   }
 
   @Test
-  void testSubmitCallable() throws Exception {
-    assertThat(submitted.getCount()).isZero();
+  void submitCallable() throws Exception {
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
-    assertThat(completed.getCount()).isZero();
-    assertThat(duration.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
+    assertThat(completed.getCount()).isEqualTo(0);
+    assertThat(duration.getCount()).isEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
     final Object obj = new Object();
 
@@ -143,13 +143,13 @@ class InstrumentedScheduledExecutorServiceTest {
               assertThat(submitted.getCount()).isEqualTo(1);
 
               assertThat(running.getCount()).isEqualTo(1);
-              assertThat(completed.getCount()).isZero();
-              assertThat(duration.getCount()).isZero();
+              assertThat(completed.getCount()).isEqualTo(0);
+              assertThat(duration.getCount()).isEqualTo(0);
 
-              assertThat(scheduledOnce.getCount()).isZero();
-              assertThat(scheduledRepetitively.getCount()).isZero();
-              assertThat(scheduledOverrun.getCount()).isZero();
-              assertThat(percentOfPeriod.getCount()).isZero();
+              assertThat(scheduledOnce.getCount()).isEqualTo(0);
+              assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+              assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+              assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
               return obj;
             });
@@ -158,45 +158,45 @@ class InstrumentedScheduledExecutorServiceTest {
 
     assertThat(submitted.getCount()).isEqualTo(1);
 
-    assertThat(running.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
     assertThat(completed.getCount()).isEqualTo(1);
     assertThat(duration.getCount()).isEqualTo(1);
     assertThat(duration.getSnapshot().size()).isEqualTo(1);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
   }
 
   @Test
-  void testScheduleCallable() throws Exception {
-    assertThat(submitted.getCount()).isZero();
+  void scheduleCallable() throws Exception {
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
-    assertThat(completed.getCount()).isZero();
-    assertThat(duration.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
+    assertThat(completed.getCount()).isEqualTo(0);
+    assertThat(duration.getCount()).isEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
     final Object obj = new Object();
 
     ScheduledFuture<Object> theFuture =
         instrumentedScheduledExecutor.schedule(
             () -> {
-              assertThat(submitted.getCount()).isZero();
+              assertThat(submitted.getCount()).isEqualTo(0);
 
               assertThat(running.getCount()).isEqualTo(1);
-              assertThat(completed.getCount()).isZero();
-              assertThat(duration.getCount()).isZero();
+              assertThat(completed.getCount()).isEqualTo(0);
+              assertThat(duration.getCount()).isEqualTo(0);
 
               assertThat(scheduledOnce.getCount()).isEqualTo(1);
-              assertThat(scheduledRepetitively.getCount()).isZero();
-              assertThat(scheduledOverrun.getCount()).isZero();
-              assertThat(percentOfPeriod.getCount()).isZero();
+              assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+              assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+              assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
               return obj;
             },
@@ -205,37 +205,37 @@ class InstrumentedScheduledExecutorServiceTest {
 
     assertThat(theFuture.get()).isEqualTo(obj);
 
-    assertThat(submitted.getCount()).isZero();
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
     assertThat(completed.getCount()).isEqualTo(1);
     assertThat(duration.getCount()).isEqualTo(1);
     assertThat(duration.getSnapshot().size()).isEqualTo(1);
 
     assertThat(scheduledOnce.getCount()).isEqualTo(1);
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
   }
 
   @Test
-  void testScheduleFixedRateCallable() throws Exception {
-    assertThat(submitted.getCount()).isZero();
+  void scheduleFixedRateCallable() throws Exception {
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
-    assertThat(completed.getCount()).isZero();
-    assertThat(duration.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
+    assertThat(completed.getCount()).isEqualTo(0);
+    assertThat(duration.getCount()).isEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
     CountDownLatch countDownLatch = new CountDownLatch(1);
     ScheduledFuture<?> theFuture =
         instrumentedScheduledExecutor.scheduleAtFixedRate(
             () -> {
-              assertThat(submitted.getCount()).isZero();
+              assertThat(submitted.getCount()).isEqualTo(0);
 
               assertThat(running.getCount()).isEqualTo(1);
 
@@ -257,37 +257,37 @@ class InstrumentedScheduledExecutorServiceTest {
     theFuture.cancel(true);
     TimeUnit.MILLISECONDS.sleep(200); // Wait while the task is cancelled
 
-    assertThat(submitted.getCount()).isZero();
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
     assertThat(completed.getCount()).isNotEqualTo(0);
     assertThat(duration.getCount()).isNotEqualTo(0);
     assertThat(duration.getSnapshot().size()).isNotEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
     assertThat(scheduledRepetitively.getCount()).isEqualTo(1);
     assertThat(scheduledOverrun.getCount()).isNotEqualTo(0);
     assertThat(percentOfPeriod.getCount()).isNotEqualTo(0);
   }
 
   @Test
-  void testScheduleFixedDelayCallable() throws Exception {
-    assertThat(submitted.getCount()).isZero();
+  void scheduleFixedDelayCallable() throws Exception {
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
-    assertThat(completed.getCount()).isZero();
-    assertThat(duration.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
+    assertThat(completed.getCount()).isEqualTo(0);
+    assertThat(duration.getCount()).isEqualTo(0);
 
-    assertThat(scheduledOnce.getCount()).isZero();
-    assertThat(scheduledRepetitively.getCount()).isZero();
-    assertThat(scheduledOverrun.getCount()).isZero();
-    assertThat(percentOfPeriod.getCount()).isZero();
+    assertThat(scheduledOnce.getCount()).isEqualTo(0);
+    assertThat(scheduledRepetitively.getCount()).isEqualTo(0);
+    assertThat(scheduledOverrun.getCount()).isEqualTo(0);
+    assertThat(percentOfPeriod.getCount()).isEqualTo(0);
 
     CountDownLatch countDownLatch = new CountDownLatch(1);
     ScheduledFuture<?> theFuture =
         instrumentedScheduledExecutor.scheduleWithFixedDelay(
             () -> {
-              assertThat(submitted.getCount()).isZero();
+              assertThat(submitted.getCount()).isEqualTo(0);
 
               assertThat(running.getCount()).isEqualTo(1);
 
@@ -310,9 +310,9 @@ class InstrumentedScheduledExecutorServiceTest {
     theFuture.cancel(true);
     TimeUnit.MILLISECONDS.sleep(200);
 
-    assertThat(submitted.getCount()).isZero();
+    assertThat(submitted.getCount()).isEqualTo(0);
 
-    assertThat(running.getCount()).isZero();
+    assertThat(running.getCount()).isEqualTo(0);
     assertThat(completed.getCount()).isNotEqualTo(0);
     assertThat(duration.getCount()).isNotEqualTo(0);
     assertThat(duration.getSnapshot().size()).isNotEqualTo(0);
@@ -322,7 +322,7 @@ class InstrumentedScheduledExecutorServiceTest {
   void tearDown() throws Exception {
     instrumentedScheduledExecutor.shutdown();
     if (!instrumentedScheduledExecutor.awaitTermination(2, TimeUnit.SECONDS)) {
-      LOGGER.error("InstrumentedScheduledExecutorService did not terminate.");
+      LOG.error("InstrumentedScheduledExecutorService did not terminate.");
     }
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedThreadFactoryTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedThreadFactoryTest.java
index fcd3736..1228864 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedThreadFactoryTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/InstrumentedThreadFactoryTest.java
@@ -11,7 +11,7 @@ import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedThreadFactoryTest {
+final class InstrumentedThreadFactoryTest {
   private static final int THREAD_COUNT = 10;
 
   private final ThreadFactory factory = Executors.defaultThreadFactory();
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java
index 32c2380..e2fe1d8 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MeterApproximationTest.java
@@ -9,7 +9,7 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.MethodSource;
 
-public class MeterApproximationTest {
+final class MeterApproximationTest {
 
   public static Collection<Object[]> ratesPerMinute() {
     Object[][] data = new Object[][] {{15}, {60}, {600}, {6000}};
@@ -32,7 +32,7 @@ public class MeterApproximationTest {
             3, TimeUnit.MINUTES);
 
     assertThat(meter.getOneMinuteRate() * 60.0)
-        .isEqualTo(ratePerMinute, offset(0.1 * ratePerMinute));
+        .isCloseTo(ratePerMinute, offset(0.1 * ratePerMinute));
   }
 
   @MethodSource("ratesPerMinute")
@@ -45,7 +45,7 @@ public class MeterApproximationTest {
             13, TimeUnit.MINUTES);
 
     assertThat(meter.getFiveMinuteRate() * 60.0)
-        .isEqualTo(ratePerMinute, offset(0.1 * ratePerMinute));
+        .isCloseTo(ratePerMinute, offset(0.1 * ratePerMinute));
   }
 
   @MethodSource("ratesPerMinute")
@@ -58,7 +58,7 @@ public class MeterApproximationTest {
             38, TimeUnit.MINUTES);
 
     assertThat(meter.getFifteenMinuteRate() * 60.0)
-        .isEqualTo(ratePerMinute, offset(0.1 * ratePerMinute));
+        .isCloseTo(ratePerMinute, offset(0.1 * ratePerMinute));
   }
 
   private Meter simulateMetronome(
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java
index afddef9..f589811 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MeterTest.java
@@ -9,8 +9,8 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class MeterTest {
-  private final Clock clock = mock(Clock.class);
+final class MeterTest {
+  private final Clock clock = mock();
   private final Meter meter = new Meter(clock);
 
   @BeforeEach
@@ -20,17 +20,17 @@ class MeterTest {
 
   @Test
   void startsOutWithNoRatesOrCount() {
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
-    assertThat(meter.getSum()).isZero();
+    assertThat(meter.getSum()).isEqualTo(0);
 
-    assertThat(meter.getMeanRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(meter.getMeanRate()).isCloseTo(0.0, offset(0.001));
 
-    assertThat(meter.getOneMinuteRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(meter.getOneMinuteRate()).isCloseTo(0.0, offset(0.001));
 
-    assertThat(meter.getFiveMinuteRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(meter.getFiveMinuteRate()).isCloseTo(0.0, offset(0.001));
 
-    assertThat(meter.getFifteenMinuteRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(meter.getFifteenMinuteRate()).isCloseTo(0.0, offset(0.001));
   }
 
   @Test
@@ -42,12 +42,12 @@ class MeterTest {
 
     assertThat(meter.getSum()).isEqualTo(10000000000L);
 
-    assertThat(meter.getMeanRate()).isEqualTo(0.3, offset(0.001));
+    assertThat(meter.getMeanRate()).isCloseTo(0.3, offset(0.001));
 
-    assertThat(meter.getOneMinuteRate()).isEqualTo(0.1840, offset(0.001));
+    assertThat(meter.getOneMinuteRate()).isCloseTo(0.1840, offset(0.001));
 
-    assertThat(meter.getFiveMinuteRate()).isEqualTo(0.1966, offset(0.001));
+    assertThat(meter.getFiveMinuteRate()).isCloseTo(0.1966, offset(0.001));
 
-    assertThat(meter.getFifteenMinuteRate()).isEqualTo(0.1988, offset(0.001));
+    assertThat(meter.getFifteenMinuteRate()).isCloseTo(0.1988, offset(0.001));
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricFilterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricFilterTest.java
index 6152bde..53dfece 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricFilterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricFilterTest.java
@@ -5,7 +5,7 @@ import static org.mockito.Mockito.mock;
 
 import org.junit.jupiter.api.Test;
 
-class MetricFilterTest {
+final class MetricFilterTest {
   @Test
   void theAllFilterMatchesAllMetrics() {
     assertThat(MetricFilter.ALL.matches(MetricName.build(""), mock(Metric.class))).isTrue();
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java
index 490c830..35860d7 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java
@@ -1,105 +1,106 @@
 package io.dropwizard.metrics5;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 
 import java.util.HashMap;
 import java.util.Map;
 import org.junit.jupiter.api.Test;
 
-class MetricNameTest {
+final class MetricNameTest {
   @Test
-  void testEmpty() {
+  void empty() {
     assertThat(MetricName.EMPTY.getTags()).isEmpty();
-    assertThat(MetricName.EMPTY.getKey()).isEqualTo("");
+    assertThat(MetricName.EMPTY.getKey()).isEmpty();
 
     assertThat(MetricName.build()).isEqualTo(MetricName.EMPTY);
     assertThat(MetricName.EMPTY.resolve((String) null)).isEqualTo(MetricName.EMPTY);
   }
 
   @Test
-  void testEmptyResolve() {
+  void emptyResolve() {
     final MetricName name = MetricName.build();
     assertThat(name.resolve("foo")).isEqualTo(MetricName.build("foo"));
   }
 
   @Test
-  void testResolveToEmpty() {
+  void resolveToEmpty() {
     final MetricName name = MetricName.build("foo");
     assertThat(name.resolve((String) null)).isEqualTo(MetricName.build("foo"));
   }
 
   @Test
-  void testResolve() {
+  void resolve() {
     final MetricName name = MetricName.build("foo");
     assertThat(name.resolve("bar")).isEqualTo(MetricName.build("foo.bar"));
   }
 
   @Test
-  void testResolveBothEmpty() {
+  void resolveBothEmpty() {
     final MetricName name = MetricName.build();
     assertThat(name.resolve((String) null)).isEqualTo(MetricName.EMPTY);
   }
 
   @Test
-  void testAddTagsVarious() {
+  void addTagsVarious() {
     final Map<String, String> refTags = new HashMap<String, String>();
     refTags.put("foo", "bar");
     final MetricName test = MetricName.EMPTY.tagged("foo", "bar");
     final MetricName test2 = MetricName.EMPTY.tagged(refTags);
 
     assertThat(test).isEqualTo(new MetricName("", refTags));
-    assertThat(test.getTags()).isEqualTo(refTags);
+    assertThat(test.getTags()).containsExactlyInAnyOrderEntriesOf(refTags);
 
     assertThat(test2).isEqualTo(new MetricName("", refTags));
-    assertThat(test2.getTags()).isEqualTo(refTags);
+    assertThat(test2.getTags()).containsExactlyInAnyOrderEntriesOf(refTags);
   }
 
   @Test
-  void testTaggedMoreArguments() {
+  void taggedMoreArguments() {
     final Map<String, String> refTags = new HashMap<String, String>();
     refTags.put("foo", "bar");
     refTags.put("baz", "biz");
-    assertThat(MetricName.EMPTY.tagged("foo", "bar", "baz", "biz").getTags()).isEqualTo(refTags);
+    assertThat(MetricName.EMPTY.tagged("foo", "bar", "baz", "biz").getTags())
+        .containsExactlyInAnyOrderEntriesOf(refTags);
   }
 
   @Test
-  void testTaggedNotPairs() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          MetricName.EMPTY.tagged("foo");
-        });
+  void taggedNotPairs() {
+    assertThatThrownBy(
+            () -> {
+              MetricName.EMPTY.tagged("foo");
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
-  void testTaggedNotPairs2() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          MetricName.EMPTY.tagged("foo", "bar", "baz");
-        });
+  void taggedNotPairs2() {
+    assertThatThrownBy(
+            () -> {
+              MetricName.EMPTY.tagged("foo", "bar", "baz");
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
-  void testCompareTo() {
+  void compareTo() {
     final MetricName a = MetricName.EMPTY.tagged("foo", "bar");
     final MetricName b = MetricName.EMPTY.tagged("foo", "baz");
 
-    assertThat(a.compareTo(b)).isLessThan(0);
-    assertThat(b.compareTo(a)).isGreaterThan(0);
-    assertThat(b.resolve("key").compareTo(b)).isGreaterThan(0);
-    assertThat(b.compareTo(b.resolve("key"))).isLessThan(0);
+    assertThat(a.compareTo(b)).isNegative();
+    assertThat(b.compareTo(a)).isPositive();
+    assertThat(b.resolve("key").compareTo(b)).isPositive();
+    assertThat(b.compareTo(b.resolve("key"))).isNegative();
   }
 
   @Test
-  void testCompareTo2() {
+  void compareTo2() {
     final MetricName a = MetricName.EMPTY.tagged("a", "x");
     final MetricName b = MetricName.EMPTY.tagged("b", "x");
 
-    assertThat(MetricName.EMPTY.compareTo(a)).isLessThan(0);
-    assertThat(MetricName.EMPTY.compareTo(b)).isLessThan(0);
-    assertThat(a.compareTo(b)).isLessThan(0);
-    assertThat(b.compareTo(a)).isGreaterThan(0);
+    assertThat(MetricName.EMPTY.compareTo(a)).isNegative();
+    assertThat(MetricName.EMPTY.compareTo(b)).isNegative();
+    assertThat(a.compareTo(b)).isNegative();
+    assertThat(b.compareTo(a)).isPositive();
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java
index 3f9b427..a32294b 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryListenerTest.java
@@ -5,13 +5,13 @@ import static org.mockito.Mockito.verifyNoInteractions;
 
 import org.junit.jupiter.api.Test;
 
-class MetricRegistryListenerTest {
+final class MetricRegistryListenerTest {
   private static final MetricName BLAH = MetricName.build("blah");
 
-  private final Counter counter = mock(Counter.class);
-  private final Histogram histogram = mock(Histogram.class);
-  private final Meter meter = mock(Meter.class);
-  private final Timer timer = mock(Timer.class);
+  private final Counter counter = mock();
+  private final Histogram histogram = mock();
+  private final Meter meter = mock();
+  private final Timer timer = mock();
   private final MetricRegistryListener listener = new MetricRegistryListener.Base() {};
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java
index 865dfca..d79a191 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.collect.ImmutableSet.toImmutableSet;
 import static io.dropwizard.metrics5.MetricRegistry.name;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.assertThatThrownBy;
@@ -15,7 +16,7 @@ import java.util.stream.Collectors;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class MetricRegistryTest {
+final class MetricRegistryTest {
 
   private static class CustomCounter extends Counter {
 
@@ -37,14 +38,14 @@ class MetricRegistryTest {
   private static final MetricName GAUGE2 = MetricName.build("gauge2");
   private static final MetricName SETTABLE_GAUGE = MetricName.build("settable-gauge");
   private static final MetricName THING = MetricName.build("thing");
-  private final MetricRegistryListener listener = mock(MetricRegistryListener.class);
+  private final MetricRegistryListener listener = mock();
   private final MetricRegistry registry = new MetricRegistry();
   private final Gauge<String> gauge = () -> "";
   private final SettableGauge<String> settableGauge = new DefaultSettableGauge<>("");
-  private final Counter counter = mock(Counter.class);
-  private final Histogram histogram = mock(Histogram.class);
-  private final Meter meter = mock(Meter.class);
-  private final Timer timer = mock(Timer.class);
+  private final Counter counter = mock();
+  private final Histogram histogram = mock();
+  private final Meter meter = mock();
+  private final Timer timer = mock();
 
   @BeforeEach
   void setUp() {
@@ -291,7 +292,7 @@ class MetricRegistryTest {
     registry.register(METER2, meter);
     registry.register(TIMER2, timer);
 
-    final MetricRegistryListener other = mock(MetricRegistryListener.class);
+    final MetricRegistryListener other = mock();
     registry.addListener(other);
 
     verify(other).onGaugeAdded(GAUGE2, gauge);
@@ -425,7 +426,7 @@ class MetricRegistryTest {
     MetricRegistry other = new MetricRegistry();
     other.register(GAUGE, gauge);
     registry.register(MetricName.build("nested"), other);
-    assertThat(registry.getNames()).containsOnly(MetricName.build("nested.gauge"));
+    assertThat(registry.getNames()).containsExactly(MetricName.build("nested.gauge"));
   }
 
   @Test
@@ -501,7 +502,7 @@ class MetricRegistryTest {
     Set<MetricName> childMetrics = child.getMetrics().keySet();
 
     assertThat(parentMetrics)
-        .isEqualTo(
+        .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
                 .collect(Collectors.toSet()));
@@ -522,7 +523,7 @@ class MetricRegistryTest {
     Set<MetricName> childMetrics = child.getMetrics().keySet();
 
     assertThat(parentMetrics)
-        .isEqualTo(
+        .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
                 .collect(Collectors.toSet()));
@@ -548,7 +549,7 @@ class MetricRegistryTest {
     Set<MetricName> deepChildMetrics = deepChild.getMetrics().keySet();
 
     assertThat(parentMetrics)
-        .isEqualTo(
+        .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
                 .collect(Collectors.toSet()));
@@ -557,10 +558,10 @@ class MetricRegistryTest {
         .containsAll(
             deepChildMetrics.stream()
                 .map(m -> MetricName.build("deep-child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
 
-    assertThat(deepChildMetrics.size()).isEqualTo(3);
-    assertThat(childMetrics.size()).isEqualTo(5);
+    assertThat(deepChildMetrics).hasSize(3);
+    assertThat(childMetrics).hasSize(5);
   }
 
   @Test
@@ -578,7 +579,7 @@ class MetricRegistryTest {
     Set<MetricName> childMetrics = child.getMetrics().keySet();
 
     assertThat(parentMetrics)
-        .isEqualTo(
+        .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
                 .collect(Collectors.toSet()));
@@ -604,7 +605,7 @@ class MetricRegistryTest {
     Set<MetricName> childMetrics = child.getMetrics().keySet();
 
     assertThat(parentMetrics)
-        .isEqualTo(
+        .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
                 .collect(Collectors.toSet()));
@@ -633,7 +634,7 @@ class MetricRegistryTest {
     Set<MetricName> deepChildMetrics = deepChild.getMetrics().keySet();
 
     assertThat(parentMetrics)
-        .isEqualTo(
+        .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
                 .collect(Collectors.toSet()));
@@ -642,12 +643,12 @@ class MetricRegistryTest {
         .containsAll(
             deepChildMetrics.stream()
                 .map(m -> MetricName.build("deep-child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
 
     assertThat(deepChildMetrics).doesNotContain(MetricName.build("test-2"));
 
-    assertThat(deepChildMetrics.size()).isEqualTo(1);
-    assertThat(childMetrics.size()).isEqualTo(3);
+    assertThat(deepChildMetrics).hasSize(1);
+    assertThat(childMetrics).hasSize(3);
   }
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java
index 657462d..0dc6e29 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/NoopMetricRegistryTest.java
@@ -1,7 +1,7 @@
 package io.dropwizard.metrics5;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.assertj.core.api.Assertions.assertThatNullPointerException;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
@@ -12,16 +12,16 @@ import java.util.Set;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class NoopMetricRegistryTest {
+final class NoopMetricRegistryTest {
   private static final MetricName METRIC_THING = MetricName.build("thing");
 
-  private final MetricRegistryListener listener = mock(MetricRegistryListener.class);
+  private final MetricRegistryListener listener = mock();
   private final NoopMetricRegistry registry = new NoopMetricRegistry();
   private final Gauge<String> gauge = () -> "";
-  private final Counter counter = mock(Counter.class);
-  private final Histogram histogram = mock(Histogram.class);
-  private final Meter meter = mock(Meter.class);
-  private final Timer timer = mock(Timer.class);
+  private final Counter counter = mock();
+  private final Histogram histogram = mock();
+  private final Meter meter = mock();
+  private final Timer timer = mock();
 
   @BeforeEach
   void setUp() {
@@ -220,8 +220,8 @@ class NoopMetricRegistryTest {
     verify(listener, never()).onGaugeAdded(METRIC_THING, gauge1);
   }
 
-  @Test
   @SuppressWarnings("rawtypes")
+  @Test
   void accessingACustomGaugeRegistersAndReusesIt() {
     final MetricRegistry.MetricSupplier<Gauge<String>> supplier = () -> gauge;
     final Gauge gauge1 = registry.gauge(METRIC_THING, supplier);
@@ -242,7 +242,7 @@ class NoopMetricRegistryTest {
     registry.register(MetricName.build("meter"), meter);
     registry.register(MetricName.build("timer"), timer);
 
-    final MetricRegistryListener other = mock(MetricRegistryListener.class);
+    final MetricRegistryListener other = mock();
     registry.addListener(other);
 
     verify(other, never()).onGaugeAdded(MetricName.build("gauge"), gauge);
@@ -491,8 +491,8 @@ class NoopMetricRegistryTest {
   @Test
   void registerNullMetric() {
     MetricRegistry registry = new NoopMetricRegistry();
-    assertThatNullPointerException()
-        .isThrownBy(() -> registry.register(MetricName.build("any_name"), null))
-        .withMessage("metric == null");
+    assertThatThrownBy(() -> registry.register(MetricName.build("any_name"), null))
+        .isInstanceOf(NullPointerException.class)
+        .hasMessage("metric == null");
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/RatioGaugeTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/RatioGaugeTest.java
index 15ea461..e181635 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/RatioGaugeTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/RatioGaugeTest.java
@@ -4,12 +4,12 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class RatioGaugeTest {
+final class RatioGaugeTest {
   @Test
   void ratiosAreHumanReadable() {
     final RatioGauge.Ratio ratio = RatioGauge.Ratio.of(100, 200);
 
-    assertThat(ratio.toString()).isEqualTo("100.0:200.0");
+    assertThat(ratio).hasToString("100.0:200.0");
   }
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java
index 5f2f8ad..a3e7329 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java
@@ -1,10 +1,8 @@
 package io.dropwizard.metrics5;
 
+import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.Mockito.any;
 import static org.mockito.Mockito.eq;
 import static org.mockito.Mockito.mock;
@@ -21,18 +19,19 @@ import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 import java.util.concurrent.atomic.AtomicInteger;
+import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class ScheduledReporterTest {
+final class ScheduledReporterTest {
   private final Gauge<String> gauge = () -> "";
-  private final Counter counter = mock(Counter.class);
-  private final Histogram histogram = mock(Histogram.class);
-  private final Meter meter = mock(Meter.class);
-  private final Timer timer = mock(Timer.class);
+  private final Counter counter = mock();
+  private final Histogram histogram = mock();
+  private final Meter meter = mock();
+  private final Timer timer = mock();
 
-  private final ScheduledExecutorService mockExecutor = mock(ScheduledExecutorService.class);
+  private final ScheduledExecutorService mockExecutor = mock();
   private final ScheduledExecutorService customExecutor =
       Executors.newSingleThreadScheduledExecutor();
   private final ScheduledExecutorService externalExecutor =
@@ -107,7 +106,7 @@ class ScheduledReporterTest {
       r =
           new DummyReporter(
               null, "example", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, executor);
-      fail("NullPointerException must be thrown !!!");
+      Assertions.fail("NullPointerException must be thrown !!!");
     } catch (NullPointerException e) {
       assertEquals("registry == null", e.getMessage());
     } finally {
@@ -145,7 +144,7 @@ class ScheduledReporterTest {
   void shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise() throws Exception {
     reporterWithCustomMockExecutor.start(200, TimeUnit.MILLISECONDS);
 
-    verify(mockExecutor, times(1))
+    verify(mockExecutor)
         .scheduleWithFixedDelay(any(Runnable.class), eq(200L), eq(200L), eq(TimeUnit.MILLISECONDS));
   }
 
@@ -182,32 +181,32 @@ class ScheduledReporterTest {
 
   @Test
   void shouldDisallowToStartReportingMultiple() throws Exception {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          reporter.start(200, TimeUnit.MILLISECONDS);
-          reporter.start(200, TimeUnit.MILLISECONDS);
-        });
+    assertThatThrownBy(
+            () -> {
+              reporter.start(200, TimeUnit.MILLISECONDS);
+              reporter.start(200, TimeUnit.MILLISECONDS);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void shouldDisallowToStartReportingMultipleTimesOnCustomExecutor() throws Exception {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          reporterWithCustomExecutor.start(200, TimeUnit.MILLISECONDS);
-          reporterWithCustomExecutor.start(200, TimeUnit.MILLISECONDS);
-        });
+    assertThatThrownBy(
+            () -> {
+              reporterWithCustomExecutor.start(200, TimeUnit.MILLISECONDS);
+              reporterWithCustomExecutor.start(200, TimeUnit.MILLISECONDS);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void shouldDisallowToStartReportingMultipleTimesOnExternallyManagedExecutor() throws Exception {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          reporterWithExternallyManagedExecutor.start(200, TimeUnit.MILLISECONDS);
-          reporterWithExternallyManagedExecutor.start(200, TimeUnit.MILLISECONDS);
-        });
+    assertThatThrownBy(
+            () -> {
+              reporterWithExternallyManagedExecutor.start(200, TimeUnit.MILLISECONDS);
+              reporterWithExternallyManagedExecutor.start(200, TimeUnit.MILLISECONDS);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
@@ -231,15 +230,15 @@ class ScheduledReporterTest {
   void shouldShutdownExecutorOnStopByDefault() {
     reporterWithCustomExecutor.start(200, TimeUnit.MILLISECONDS);
     reporterWithCustomExecutor.stop();
-    assertTrue(customExecutor.isTerminated());
+    assertThat(customExecutor.isTerminated()).isTrue();
   }
 
   @Test
   void shouldNotShutdownExternallyManagedExecutorOnStop() {
     reporterWithExternallyManagedExecutor.start(200, TimeUnit.MILLISECONDS);
     reporterWithExternallyManagedExecutor.stop();
-    assertFalse(mockExecutor.isTerminated());
-    assertFalse(mockExecutor.isShutdown());
+    assertThat(mockExecutor.isTerminated()).isFalse();
+    assertThat(mockExecutor.isShutdown()).isFalse();
   }
 
   @Test
@@ -306,7 +305,7 @@ class ScheduledReporterTest {
 
     Thread.sleep(1_000);
 
-    verify(reporter, times(1))
+    verify(reporter)
         .report(
             map(MetricName.build("gauge"), gauge),
             map(MetricName.build("counter"), counter),
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java
index 9bdc888..9d0a08b 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/SharedMetricRegistriesTest.java
@@ -2,13 +2,12 @@ package io.dropwizard.metrics5;
 
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 
 import java.util.concurrent.atomic.AtomicReference;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class SharedMetricRegistriesTest {
+final class SharedMetricRegistriesTest {
 
   @BeforeEach
   void setUp() {
@@ -28,7 +27,7 @@ class SharedMetricRegistriesTest {
   void hasASetOfNames() {
     SharedMetricRegistries.getOrCreate("one");
 
-    assertThat(SharedMetricRegistries.names()).containsOnly("one");
+    assertThat(SharedMetricRegistries.names()).containsExactly("one");
   }
 
   @Test
@@ -60,7 +59,7 @@ class SharedMetricRegistriesTest {
             () -> {
               SharedMetricRegistries.getDefault();
             });
-    assertTrue(exception.getMessage().contains("Default registry name has not been set."));
+    assertThat(exception.getMessage().contains("Default registry name has not been set.")).isTrue();
   }
 
   @Test
@@ -81,7 +80,8 @@ class SharedMetricRegistriesTest {
               SharedMetricRegistries.setDefault("foobah");
               SharedMetricRegistries.setDefault("borg");
             });
-    assertTrue(exception.getMessage().contains("Default metric registry name is already set."));
+    assertThat(exception.getMessage().contains("Default metric registry name is already set."))
+        .isTrue();
   }
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/SimpleSettableGaugeTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/SimpleSettableGaugeTest.java
index 78e54ea..d95e9c8 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/SimpleSettableGaugeTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/SimpleSettableGaugeTest.java
@@ -4,7 +4,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class SimpleSettableGaugeTest {
+final class SimpleSettableGaugeTest {
 
   @Test
   void defaultValue() {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java
index cd5f781..1aa7767 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/Slf4jReporterTest.java
@@ -3,7 +3,6 @@ package io.dropwizard.metrics5;
 import static io.dropwizard.metrics5.MetricAttribute.COUNT;
 import static io.dropwizard.metrics5.MetricAttribute.M1_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MIN;
 import static io.dropwizard.metrics5.MetricAttribute.P50;
 import static io.dropwizard.metrics5.MetricAttribute.P999;
 import static io.dropwizard.metrics5.MetricAttribute.STDDEV;
@@ -20,11 +19,11 @@ import org.junit.jupiter.api.Test;
 import org.slf4j.Logger;
 import org.slf4j.Marker;
 
-class Slf4jReporterTest {
+final class Slf4jReporterTest {
 
-  private final Logger logger = mock(Logger.class);
-  private final Marker marker = mock(Marker.class);
-  private final MetricRegistry registry = mock(MetricRegistry.class);
+  private final Logger logger = mock();
+  private final Marker marker = mock();
+  private final MetricRegistry registry = mock();
 
   /**
    * The set of disabled metric attributes to pass to the Slf4jReporter builder in the default
@@ -79,7 +78,7 @@ class Slf4jReporterTest {
   }
 
   private Timer timer() {
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
 
     when(timer.getMeanRate()).thenReturn(2.0);
@@ -87,7 +86,7 @@ class Slf4jReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -104,10 +103,10 @@ class Slf4jReporterTest {
   }
 
   private Histogram histogram() {
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
@@ -124,7 +123,7 @@ class Slf4jReporterTest {
   }
 
   private Meter meter() {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getMeanRate()).thenReturn(2.0);
     when(meter.getOneMinuteRate()).thenReturn(3.0);
@@ -134,7 +133,7 @@ class Slf4jReporterTest {
   }
 
   private Counter counter() {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
     return counter;
   }
@@ -168,7 +167,7 @@ class Slf4jReporterTest {
 
   @Test
   void reportsHistogramValuesAtErrorWithDisabledMetricAttributes() {
-    disabledMetricAttributes = EnumSet.of(COUNT, MIN, P50);
+    disabledMetricAttributes = EnumSet.of(COUNT, MetricAttribute.MIN, P50);
     reportsHistogramValuesAtError(
         "type=HISTOGRAM, name=test.histogram, max=2, mean=3.0, "
             + "stddev=5.0, p75=7.0, p95=8.0, p98=9.0, p99=10.0, p999=11.0");
@@ -192,7 +191,7 @@ class Slf4jReporterTest {
 
   @Test
   void reportsMeterValuesAtErrorWithDisabledMetricAttributes() {
-    disabledMetricAttributes = EnumSet.of(MIN, P50, M1_RATE);
+    disabledMetricAttributes = EnumSet.of(MetricAttribute.MIN, P50, M1_RATE);
     reportsMeterValuesAtError(
         "type=METER, name=test.meter, count=1, m5_rate=4.0, m15_rate=5.0, "
             + "mean_rate=2.0, rate_unit=events/second");
@@ -218,7 +217,7 @@ class Slf4jReporterTest {
 
   @Test
   void reportsTimerValuesAtErrorWithDisabledMetricAttributes() {
-    disabledMetricAttributes = EnumSet.of(MIN, STDDEV, P999, MEAN_RATE);
+    disabledMetricAttributes = EnumSet.of(MetricAttribute.MIN, STDDEV, P999, MEAN_RATE);
     reportsTimerValuesAtError(
         "type=TIMER, name=test.another.timer, count=1, max=100.0, mean=200.0, "
             + "p50=500.0, p75=600.0, p95=700.0, p98=800.0, p99=900.0, m1_rate=3.0, m5_rate=4.0, m15_rate=5.0, "
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java
index 3063fe2..c6a8b49 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowArrayReservoirTest.java
@@ -12,11 +12,11 @@ import java.util.concurrent.atomic.AtomicLong;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("Duplicates")
-class SlidingTimeWindowArrayReservoirTest {
+final class SlidingTimeWindowArrayReservoirTest {
 
   @Test
   void storesMeasurementsWithDuplicateTicks() {
-    final Clock clock = mock(Clock.class);
+    final Clock clock = mock();
     final SlidingTimeWindowArrayReservoir reservoir =
         new SlidingTimeWindowArrayReservoir(10, NANOSECONDS, clock);
 
@@ -30,7 +30,7 @@ class SlidingTimeWindowArrayReservoirTest {
 
   @Test
   void boundsMeasurementsToATimeWindow() {
-    final Clock clock = mock(Clock.class);
+    final Clock clock = mock();
     final SlidingTimeWindowArrayReservoir reservoir =
         new SlidingTimeWindowArrayReservoir(10, NANOSECONDS, clock);
 
@@ -82,7 +82,7 @@ class SlidingTimeWindowArrayReservoirTest {
   }
 
   @Test
-  void testGetTickOverflow() {
+  void getTickOverflow() {
     final Random random = new Random(0);
     final int window = 128;
     AtomicLong counter = new AtomicLong(0L);
@@ -99,7 +99,7 @@ class SlidingTimeWindowArrayReservoirTest {
         // Set the clock to overflow in (2*window+1)ns
         final ManualClock clock = new ManualClock();
         clock.addNanos(Long.MAX_VALUE / 256 - 2 * window - clock.getTick());
-        assertThat(clock.getTick() * 256).isGreaterThan(0);
+        assertThat(clock.getTick() * 256).isPositive();
 
         // Create the reservoir
         final SlidingTimeWindowArrayReservoir reservoir =
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java
index 1dc69b9..748536b 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowMovingAveragesTest.java
@@ -7,7 +7,7 @@ import java.time.Instant;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class SlidingTimeWindowMovingAveragesTest {
+final class SlidingTimeWindowMovingAveragesTest {
 
   private ManualClock clock;
   private SlidingTimeWindowMovingAverages movingAverages;
@@ -42,7 +42,7 @@ class SlidingTimeWindowMovingAveragesTest {
 
     SlidingTimeWindowMovingAverages stwm = new SlidingTimeWindowMovingAverages(clock);
 
-    assertThat(stwm.calculateIndexOfTick(Instant.ofEpochSecond(0L))).isEqualTo(0);
+    assertThat(stwm.calculateIndexOfTick(Instant.EPOCH)).isEqualTo(0);
     assertThat(stwm.calculateIndexOfTick(Instant.ofEpochSecond(1L))).isEqualTo(1);
   }
 
@@ -60,7 +60,7 @@ class SlidingTimeWindowMovingAveragesTest {
     }
 
     // verify that no cleanup happened yet
-    assertThat(movingAverages.oldestBucketTime).isEqualTo(Instant.ofEpochSecond(0L));
+    assertThat(movingAverages.oldestBucketTime).isEqualTo(Instant.EPOCH);
 
     assertThat(meter.getOneMinuteRate()).isEqualTo(60.0);
     assertThat(meter.getFiveMinuteRate()).isEqualTo(300.0);
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java
index 3677975..0817849 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingTimeWindowReservoirTest.java
@@ -9,10 +9,10 @@ import java.util.Arrays;
 import java.util.Random;
 import org.junit.jupiter.api.Test;
 
-class SlidingTimeWindowReservoirTest {
+final class SlidingTimeWindowReservoirTest {
   @Test
   void storesMeasurementsWithDuplicateTicks() {
-    final Clock clock = mock(Clock.class);
+    final Clock clock = mock();
     final SlidingTimeWindowReservoir reservoir =
         new SlidingTimeWindowReservoir(10, NANOSECONDS, clock);
 
@@ -26,7 +26,7 @@ class SlidingTimeWindowReservoirTest {
 
   @Test
   void boundsMeasurementsToATimeWindow() {
-    final Clock clock = mock(Clock.class);
+    final Clock clock = mock();
     when(clock.getTick()).thenReturn(0L);
 
     final SlidingTimeWindowReservoir reservoir =
@@ -51,7 +51,7 @@ class SlidingTimeWindowReservoirTest {
   }
 
   @Test
-  void testGetTickOverflow() {
+  void getTickOverflow() {
     final Random random = new Random(0);
     final int window = 128;
 
@@ -72,7 +72,7 @@ class SlidingTimeWindowReservoirTest {
 
         // Set the clock to overflow in (2*window+1)ns
         clock.addNanos(Long.MAX_VALUE / 256 - 2 * window - clock.getTick());
-        assertThat(clock.getTick() * 256).isGreaterThan(0);
+        assertThat(clock.getTick() * 256).isPositive();
 
         int updatesAfterThreshold = 0;
         while (true) {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingWindowReservoirTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingWindowReservoirTest.java
index 2f6bbd0..122e7d5 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingWindowReservoirTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/SlidingWindowReservoirTest.java
@@ -4,7 +4,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class SlidingWindowReservoirTest {
+final class SlidingWindowReservoirTest {
   private final SlidingWindowReservoir reservoir = new SlidingWindowReservoir(3);
 
   @Test
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java
index 55eb3e3..7281be4 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/TimerTest.java
@@ -12,8 +12,8 @@ import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
 import org.junit.jupiter.api.Test;
 
-class TimerTest {
-  private final Reservoir reservoir = mock(Reservoir.class);
+final class TimerTest {
+  private final Reservoir reservoir = mock();
   private final Clock clock =
       new Clock() {
         // a mock clock that increments its ticker by 50msec per call
@@ -28,23 +28,23 @@ class TimerTest {
 
   @Test
   void hasRates() {
-    assertThat(timer.getCount()).isZero();
+    assertThat(timer.getCount()).isEqualTo(0);
 
-    assertThat(timer.getSum()).isZero();
+    assertThat(timer.getSum()).isEqualTo(0);
 
-    assertThat(timer.getMeanRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(timer.getMeanRate()).isCloseTo(0.0, offset(0.001));
 
-    assertThat(timer.getOneMinuteRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(timer.getOneMinuteRate()).isCloseTo(0.0, offset(0.001));
 
-    assertThat(timer.getFiveMinuteRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(timer.getFiveMinuteRate()).isCloseTo(0.0, offset(0.001));
 
-    assertThat(timer.getFifteenMinuteRate()).isEqualTo(0.0, offset(0.001));
+    assertThat(timer.getFifteenMinuteRate()).isCloseTo(0.0, offset(0.001));
   }
 
   @Test
   void updatesTheCountAndSumOnUpdates() {
-    assertThat(timer.getCount()).isZero();
-    assertThat(timer.getSum()).isZero();
+    assertThat(timer.getCount()).isEqualTo(0);
+    assertThat(timer.getSum()).isEqualTo(0);
 
     timer.update(1, TimeUnit.SECONDS);
     timer.update(5, TimeUnit.SECONDS);
@@ -101,7 +101,7 @@ class TimerTest {
 
   @Test
   void returnsTheSnapshotFromTheReservoir() {
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(reservoir.getSnapshot()).thenReturn(snapshot);
 
     assertThat(timer.getSnapshot()).isEqualTo(snapshot);
@@ -111,8 +111,8 @@ class TimerTest {
   void ignoresNegativeValues() {
     timer.update(-1, TimeUnit.SECONDS);
 
-    assertThat(timer.getCount()).isZero();
-    assertThat(timer.getSum()).isZero();
+    assertThat(timer.getCount()).isEqualTo(0);
+    assertThat(timer.getSum()).isEqualTo(0);
 
     verifyNoInteractions(reservoir);
   }
@@ -130,15 +130,15 @@ class TimerTest {
   void java8NegativeDuration() {
     timer.update(Duration.ofMillis(-5678));
 
-    assertThat(timer.getCount()).isZero();
+    assertThat(timer.getCount()).isEqualTo(0);
 
     verifyNoInteractions(reservoir);
   }
 
   @Test
   void tryWithResourcesWork() {
-    assertThat(timer.getCount()).isZero();
-    assertThat(timer.getSum()).isZero();
+    assertThat(timer.getCount()).isEqualTo(0);
+    assertThat(timer.getSum()).isEqualTo(0);
 
     int dummy = 0;
     try (Timer.Context context = timer.time()) {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java
index fbab25c..50c682e 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/UniformReservoirTest.java
@@ -4,9 +4,9 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 import org.junit.jupiter.api.Test;
 
-class UniformReservoirTest {
-  @Test
+final class UniformReservoirTest {
   @SuppressWarnings("unchecked")
+  @Test
   void aReservoirOf100OutOf1000Elements() {
     final UniformReservoir reservoir = new UniformReservoir(100);
     for (int i = 0; i < 1000; i++) {
@@ -20,7 +20,7 @@ class UniformReservoirTest {
     assertThat(snapshot.size()).isEqualTo(100);
 
     for (double i : snapshot.getValues()) {
-      assertThat(i).isLessThan(1000).isGreaterThanOrEqualTo(0);
+      assertThat(i).isLessThan(1000).isNotNegative();
     }
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java
index 34ffc56..5db094c 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/UniformSnapshotTest.java
@@ -2,8 +2,8 @@ package io.dropwizard.metrics5;
 
 import static java.util.Arrays.asList;
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.assertj.core.api.Assertions.offset;
-import static org.junit.jupiter.api.Assertions.assertThrows;
 
 import java.io.ByteArrayOutputStream;
 import java.util.Random;
@@ -12,74 +12,74 @@ import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
-class UniformSnapshotTest {
+final class UniformSnapshotTest {
   private final Snapshot snapshot = new UniformSnapshot(new long[] {5, 1, 2, 3, 4});
 
   @Test
   void smallQuantilesAreTheFirstValue() {
-    assertThat(snapshot.getValue(0.0)).isEqualTo(1, offset(0.1));
+    assertThat(snapshot.getValue(0.0)).isCloseTo(1, offset(0.1));
   }
 
   @Test
   void bigQuantilesAreTheLastValue() {
-    assertThat(snapshot.getValue(1.0)).isEqualTo(5, offset(0.1));
+    assertThat(snapshot.getValue(1.0)).isCloseTo(5, offset(0.1));
   }
 
   @Test
   void disallowsNotANumberQuantile() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          snapshot.getValue(Double.NaN);
-        });
+    assertThatThrownBy(
+            () -> {
+              snapshot.getValue(Double.NaN);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void disallowsNegativeQuantile() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          snapshot.getValue(-0.5);
-        });
+    assertThatThrownBy(
+            () -> {
+              snapshot.getValue(-0.5);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void disallowsQuantileOverOne() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          snapshot.getValue(1.5);
-        });
+    assertThatThrownBy(
+            () -> {
+              snapshot.getValue(1.5);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void hasAMedian() {
-    assertThat(snapshot.getMedian()).isEqualTo(3, offset(0.1));
+    assertThat(snapshot.getMedian()).isCloseTo(3, offset(0.1));
   }
 
   @Test
   void hasAp75() {
-    assertThat(snapshot.get75thPercentile()).isEqualTo(4.5, offset(0.1));
+    assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, offset(0.1));
   }
 
   @Test
   void hasAp95() {
-    assertThat(snapshot.get95thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get95thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void hasAp98() {
-    assertThat(snapshot.get98thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get98thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void hasAp99() {
-    assertThat(snapshot.get99thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get99thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void hasAp999() {
-    assertThat(snapshot.get999thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get999thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
@@ -138,7 +138,7 @@ class UniformSnapshotTest {
 
     snapshot.dump(output);
 
-    assertThat(output.toString()).isEqualTo(String.format("1%n2%n3%n4%n5%n"));
+    assertThat(output).hasToString(String.format("1%n2%n3%n4%n5%n"));
   }
 
   @Test
@@ -158,41 +158,41 @@ class UniformSnapshotTest {
 
   @Test
   void calculatesTheStdDev() {
-    assertThat(snapshot.getStdDev()).isEqualTo(1.5811, offset(0.0001));
+    assertThat(snapshot.getStdDev()).isCloseTo(1.5811, offset(0.0001));
   }
 
   @Test
   void calculatesAMinOfZeroForAnEmptySnapshot() {
     final Snapshot emptySnapshot = new UniformSnapshot(new long[] {});
 
-    assertThat(emptySnapshot.getMin()).isZero();
+    assertThat(emptySnapshot.getMin()).isEqualTo(0);
   }
 
   @Test
   void calculatesAMaxOfZeroForAnEmptySnapshot() {
     final Snapshot emptySnapshot = new UniformSnapshot(new long[] {});
 
-    assertThat(emptySnapshot.getMax()).isZero();
+    assertThat(emptySnapshot.getMax()).isEqualTo(0);
   }
 
   @Test
   void calculatesAMeanOfZeroForAnEmptySnapshot() {
     final Snapshot emptySnapshot = new UniformSnapshot(new long[] {});
 
-    assertThat(emptySnapshot.getMean()).isZero();
+    assertThat(emptySnapshot.getMean()).isEqualTo(0);
   }
 
   @Test
   void calculatesAStdDevOfZeroForAnEmptySnapshot() {
     final Snapshot emptySnapshot = new UniformSnapshot(new long[] {});
 
-    assertThat(emptySnapshot.getStdDev()).isZero();
+    assertThat(emptySnapshot.getStdDev()).isEqualTo(0);
   }
 
   @Test
   void calculatesAStdDevOfZeroForASingletonSnapshot() {
     final Snapshot singleItemSnapshot = new UniformSnapshot(new long[] {1});
 
-    assertThat(singleItemSnapshot.getStdDev()).isZero();
+    assertThat(singleItemSnapshot.getStdDev()).isEqualTo(0);
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java
index f53854f..052948c 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java
@@ -1,8 +1,10 @@
 package io.dropwizard.metrics5;
 
+import static com.google.common.base.Preconditions.checkArgument;
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.assertj.core.api.Assertions.offset;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.doReturn;
 import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.when;
@@ -12,16 +14,14 @@ import java.io.ByteArrayOutputStream;
 import java.util.ArrayList;
 import java.util.List;
 import org.junit.jupiter.api.Test;
-import org.mockito.ArgumentMatchers;
 
-class WeightedSnapshotTest {
+final class WeightedSnapshotTest {
 
   private static List<WeightedSnapshot.WeightedSample> weightedArray(
       long[] values, double[] weights) {
-    if (values.length != weights.length) {
-      throw new IllegalArgumentException(
-          "Mismatched lengths: " + values.length + " vs " + weights.length);
-    }
+    checkArgument(
+        values.length == weights.length,
+        "Mismatched lengths: " + values.length + " vs " + weights.length);
 
     final List<WeightedSnapshot.WeightedSample> samples = new ArrayList<>();
     for (int i = 0; i < values.length; i++) {
@@ -36,69 +36,69 @@ class WeightedSnapshotTest {
 
   @Test
   void smallQuantilesAreTheFirstValue() {
-    assertThat(snapshot.getValue(0.0)).isEqualTo(1.0, offset(0.1));
+    assertThat(snapshot.getValue(0.0)).isCloseTo(1.0, offset(0.1));
   }
 
   @Test
   void bigQuantilesAreTheLastValue() {
-    assertThat(snapshot.getValue(1.0)).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.getValue(1.0)).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void disallowsNotANumberQuantile() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          snapshot.getValue(Double.NaN);
-        });
+    assertThatThrownBy(
+            () -> {
+              snapshot.getValue(Double.NaN);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void disallowsNegativeQuantile() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          snapshot.getValue(-0.5);
-        });
+    assertThatThrownBy(
+            () -> {
+              snapshot.getValue(-0.5);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void disallowsQuantileOverOne() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          snapshot.getValue(1.5);
-        });
+    assertThatThrownBy(
+            () -> {
+              snapshot.getValue(1.5);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void hasAMedian() {
-    assertThat(snapshot.getMedian()).isEqualTo(3.0, offset(0.1));
+    assertThat(snapshot.getMedian()).isCloseTo(3.0, offset(0.1));
   }
 
   @Test
   void hasAp75() {
-    assertThat(snapshot.get75thPercentile()).isEqualTo(4.0, offset(0.1));
+    assertThat(snapshot.get75thPercentile()).isCloseTo(4.0, offset(0.1));
   }
 
   @Test
   void hasAp95() {
-    assertThat(snapshot.get95thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get95thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void hasAp98() {
-    assertThat(snapshot.get98thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get98thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void hasAp99() {
-    assertThat(snapshot.get99thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get99thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
   void hasAp999() {
-    assertThat(snapshot.get999thPercentile()).isEqualTo(5.0, offset(0.1));
+    assertThat(snapshot.get999thPercentile()).isCloseTo(5.0, offset(0.1));
   }
 
   @Test
@@ -118,7 +118,7 @@ class WeightedSnapshotTest {
     final List<WeightedSample> spyItems = spy(originalItems);
     doReturn(originalItems.toArray(new WeightedSample[] {}))
         .when(spyItems)
-        .toArray(ArgumentMatchers.any(WeightedSample[].class));
+        .toArray(any(WeightedSample[].class));
     when(spyItems.size()).thenReturn(4, 5);
 
     final Snapshot other = new WeightedSnapshot(spyItems);
@@ -133,7 +133,7 @@ class WeightedSnapshotTest {
     final List<WeightedSample> spyItems = spy(originalItems);
     doReturn(originalItems.toArray(new WeightedSample[] {}))
         .when(spyItems)
-        .toArray(ArgumentMatchers.any(WeightedSample[].class));
+        .toArray(any(WeightedSample[].class));
     when(spyItems.size()).thenReturn(6, 5);
 
     final Snapshot other = new WeightedSnapshot(spyItems);
@@ -147,7 +147,7 @@ class WeightedSnapshotTest {
 
     snapshot.dump(output);
 
-    assertThat(output.toString()).isEqualTo(String.format("1%n2%n3%n4%n5%n"));
+    assertThat(output).hasToString(String.format("1%n2%n3%n4%n5%n"));
   }
 
   @Test
@@ -167,7 +167,7 @@ class WeightedSnapshotTest {
 
   @Test
   void calculatesTheStdDev() {
-    assertThat(snapshot.getStdDev()).isEqualTo(1.2688, offset(0.0001));
+    assertThat(snapshot.getStdDev()).isCloseTo(1.2688, offset(0.0001));
   }
 
   @Test
@@ -175,7 +175,7 @@ class WeightedSnapshotTest {
     final Snapshot emptySnapshot =
         new WeightedSnapshot(weightedArray(new long[] {}, new double[] {}));
 
-    assertThat(emptySnapshot.getMin()).isZero();
+    assertThat(emptySnapshot.getMin()).isEqualTo(0);
   }
 
   @Test
@@ -183,7 +183,7 @@ class WeightedSnapshotTest {
     final Snapshot emptySnapshot =
         new WeightedSnapshot(weightedArray(new long[] {}, new double[] {}));
 
-    assertThat(emptySnapshot.getMax()).isZero();
+    assertThat(emptySnapshot.getMax()).isEqualTo(0);
   }
 
   @Test
@@ -191,7 +191,7 @@ class WeightedSnapshotTest {
     final Snapshot emptySnapshot =
         new WeightedSnapshot(weightedArray(new long[] {}, new double[] {}));
 
-    assertThat(emptySnapshot.getMean()).isZero();
+    assertThat(emptySnapshot.getMean()).isEqualTo(0);
   }
 
   @Test
@@ -199,7 +199,7 @@ class WeightedSnapshotTest {
     final Snapshot emptySnapshot =
         new WeightedSnapshot(weightedArray(new long[] {}, new double[] {}));
 
-    assertThat(emptySnapshot.getStdDev()).isZero();
+    assertThat(emptySnapshot.getStdDev()).isEqualTo(0);
   }
 
   @Test
@@ -207,7 +207,7 @@ class WeightedSnapshotTest {
     final Snapshot singleItemSnapshot =
         new WeightedSnapshot(weightedArray(new long[] {1}, new double[] {1.0}));
 
-    assertThat(singleItemSnapshot.getStdDev()).isZero();
+    assertThat(singleItemSnapshot.getStdDev()).isEqualTo(0);
   }
 
   @Test
diff --git a/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedCacheDecoratorFactoryTest.java b/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedCacheDecoratorFactoryTest.java
index f53b4c2..531ff9e 100644
--- a/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedCacheDecoratorFactoryTest.java
+++ b/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedCacheDecoratorFactoryTest.java
@@ -12,7 +12,7 @@ import net.sf.ehcache.Element;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedCacheDecoratorFactoryTest {
+final class InstrumentedCacheDecoratorFactoryTest {
   private static final CacheManager MANAGER = CacheManager.create();
 
   private MetricRegistry registry;
diff --git a/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedEhcacheTest.java b/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedEhcacheTest.java
index 58bca0c..340cd66 100644
--- a/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedEhcacheTest.java
+++ b/metrics-ehcache/src/test/java/io/dropwizard/metrics5/ehcache/InstrumentedEhcacheTest.java
@@ -13,7 +13,7 @@ import net.sf.ehcache.config.CacheConfiguration;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedEhcacheTest {
+final class InstrumentedEhcacheTest {
   private static final CacheManager MANAGER = CacheManager.create();
 
   private final MetricRegistry registry = new MetricRegistry();
diff --git a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java
index bab371a..8dfe5cf 100644
--- a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java
+++ b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.graphite;
 
+import static com.google.common.base.Preconditions.checkArgument;
+import static com.google.common.base.Preconditions.checkState;
 import static java.nio.charset.StandardCharsets.UTF_8;
 import static java.util.Objects.requireNonNull;
 
@@ -29,7 +31,7 @@ public class Graphite implements GraphiteSender {
   private Writer writer;
   private int failures;
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(Graphite.class);
+  private static final Logger LOG = LoggerFactory.getLogger(Graphite.class);
 
   /**
    * Creates a new client which connects to the given address using the default {@link
@@ -63,13 +65,9 @@ public class Graphite implements GraphiteSender {
    * @param charset the character set used by the server
    */
   public Graphite(String hostname, int port, SocketFactory socketFactory, Charset charset) {
-    if (hostname == null || hostname.isEmpty()) {
-      throw new IllegalArgumentException("hostname must not be null or empty");
-    }
+    checkArgument(hostname != null && !hostname.isEmpty(), "hostname must not be null or empty");
 
-    if (port < 0 || port > 65535) {
-      throw new IllegalArgumentException("port must be a valid IP port (0-65535)");
-    }
+    checkArgument(port >= 0 && port <= 65535, "port must be a valid IP port (0-65535)");
 
     this.hostname = hostname;
     this.port = port;
@@ -116,9 +114,7 @@ public class Graphite implements GraphiteSender {
 
   @Override
   public void connect() throws IllegalStateException, IOException {
-    if (isConnected()) {
-      throw new IllegalStateException("Already connected");
-    }
+    checkState(!isConnected(), "Already connected");
     InetSocketAddress address = this.address;
     // the previous dns retry logic did not work, as address.getAddress would always return the
     // cached value
@@ -178,7 +174,7 @@ public class Graphite implements GraphiteSender {
         writer.close();
       }
     } catch (IOException ex) {
-      LOGGER.debug("Error closing writer", ex);
+      LOG.debug("Error closing writer", ex);
     } finally {
       this.writer = null;
     }
@@ -188,7 +184,7 @@ public class Graphite implements GraphiteSender {
         socket.close();
       }
     } catch (IOException ex) {
-      LOGGER.debug("Error closing socket", ex);
+      LOG.debug("Error closing socket", ex);
     } finally {
       this.socket = null;
     }
diff --git a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQ.java b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQ.java
index fd9ee5f..7532a9f 100644
--- a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQ.java
+++ b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQ.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5.graphite;
 
+import static com.google.common.base.Preconditions.checkState;
 import static java.nio.charset.StandardCharsets.UTF_8;
 
 import com.rabbitmq.client.Channel;
@@ -109,9 +110,7 @@ public class GraphiteRabbitMQ implements GraphiteSender {
 
   @Override
   public void connect() throws IllegalStateException, IOException {
-    if (isConnected()) {
-      throw new IllegalStateException("Already connected");
-    }
+    checkState(!isConnected(), "Already connected");
 
     try {
       connection = connectionFactory.newConnection();
@@ -132,8 +131,7 @@ public class GraphiteRabbitMQ implements GraphiteSender {
       final String sanitizedName = sanitize(name);
       final String sanitizedValue = sanitize(value);
 
-      final String message =
-          sanitizedName + ' ' + sanitizedValue + ' ' + Long.toString(timestamp) + '\n';
+      final String message = sanitizedName + ' ' + sanitizedValue + ' ' + timestamp + '\n';
       channel.basicPublish(exchange, sanitizedName, null, message.getBytes(UTF_8));
     } catch (IOException e) {
       failures++;
diff --git a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java
index 1e14d15..f189ad7 100644
--- a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java
+++ b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java
@@ -4,10 +4,8 @@ import static io.dropwizard.metrics5.MetricAttribute.COUNT;
 import static io.dropwizard.metrics5.MetricAttribute.M15_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.M1_RATE;
 import static io.dropwizard.metrics5.MetricAttribute.M5_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MAX;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN;
 import static io.dropwizard.metrics5.MetricAttribute.MEAN_RATE;
-import static io.dropwizard.metrics5.MetricAttribute.MIN;
 import static io.dropwizard.metrics5.MetricAttribute.P50;
 import static io.dropwizard.metrics5.MetricAttribute.P75;
 import static io.dropwizard.metrics5.MetricAttribute.P95;
@@ -17,6 +15,7 @@ import static io.dropwizard.metrics5.MetricAttribute.P999;
 import static io.dropwizard.metrics5.MetricAttribute.STDDEV;
 import static io.dropwizard.metrics5.MetricAttribute.SUM;
 
+import com.google.common.collect.ImmutableSet;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Gauge;
@@ -31,7 +30,6 @@ import io.dropwizard.metrics5.ScheduledReporter;
 import io.dropwizard.metrics5.Snapshot;
 import io.dropwizard.metrics5.Timer;
 import java.io.IOException;
-import java.util.Collections;
 import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
@@ -85,7 +83,7 @@ public class GraphiteReporter extends ScheduledReporter {
       this.filter = MetricFilter.ALL;
       this.executor = null;
       this.shutdownExecutorOnStop = true;
-      this.disabledMetricAttributes = Collections.emptySet();
+      this.disabledMetricAttributes = ImmutableSet.of();
       this.addMetricAttributesAsTags = false;
       this.floatingPointFormatter = DEFAULT_FP_FORMATTER;
     }
@@ -249,7 +247,7 @@ public class GraphiteReporter extends ScheduledReporter {
     }
   }
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(GraphiteReporter.class);
+  private static final Logger LOG = LoggerFactory.getLogger(GraphiteReporter.class);
   // the Carbon plaintext format is pretty underspecified, but it seems like it just wants
   // US-formatted digits
   private static final DoubleFunction<String> DEFAULT_FP_FORMATTER =
@@ -430,12 +428,12 @@ public class GraphiteReporter extends ScheduledReporter {
       }
       graphite.flush();
     } catch (IOException e) {
-      LOGGER.warn("Unable to report to Graphite", graphite, e);
+      LOG.warn("Unable to report to Graphite", graphite, e);
     } finally {
       try {
         graphite.close();
       } catch (IOException e1) {
-        LOGGER.warn("Error closing Graphite", graphite, e1);
+        LOG.warn("Error closing Graphite", graphite, e1);
       }
     }
   }
@@ -448,16 +446,16 @@ public class GraphiteReporter extends ScheduledReporter {
       try {
         graphite.close();
       } catch (IOException e) {
-        LOGGER.debug("Error disconnecting from Graphite", graphite, e);
+        LOG.debug("Error disconnecting from Graphite", graphite, e);
       }
     }
   }
 
   private void reportTimer(MetricName name, Timer timer, long timestamp) throws IOException {
     final Snapshot snapshot = timer.getSnapshot();
-    sendIfEnabled(MAX, name, convertDuration(snapshot.getMax()), timestamp);
+    sendIfEnabled(MetricAttribute.MAX, name, convertDuration(snapshot.getMax()), timestamp);
     sendIfEnabled(MEAN, name, convertDuration(snapshot.getMean()), timestamp);
-    sendIfEnabled(MIN, name, convertDuration(snapshot.getMin()), timestamp);
+    sendIfEnabled(MetricAttribute.MIN, name, convertDuration(snapshot.getMin()), timestamp);
     sendIfEnabled(STDDEV, name, convertDuration(snapshot.getStdDev()), timestamp);
     sendIfEnabled(P50, name, convertDuration(snapshot.getMedian()), timestamp);
     sendIfEnabled(P75, name, convertDuration(snapshot.get75thPercentile()), timestamp);
@@ -484,9 +482,9 @@ public class GraphiteReporter extends ScheduledReporter {
     final Snapshot snapshot = histogram.getSnapshot();
     sendIfEnabled(COUNT, name, histogram.getCount(), timestamp);
     sendIfEnabled(SUM, name, histogram.getSum(), timestamp);
-    sendIfEnabled(MAX, name, snapshot.getMax(), timestamp);
+    sendIfEnabled(MetricAttribute.MAX, name, snapshot.getMax(), timestamp);
     sendIfEnabled(MEAN, name, snapshot.getMean(), timestamp);
-    sendIfEnabled(MIN, name, snapshot.getMin(), timestamp);
+    sendIfEnabled(MetricAttribute.MIN, name, snapshot.getMin(), timestamp);
     sendIfEnabled(STDDEV, name, snapshot.getStdDev(), timestamp);
     sendIfEnabled(P50, name, snapshot.getMedian(), timestamp);
     sendIfEnabled(P75, name, snapshot.get75thPercentile(), timestamp);
diff --git a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteUDP.java b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteUDP.java
index fc3560d..0466527 100644
--- a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteUDP.java
+++ b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteUDP.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5.graphite;
 
+import static com.google.common.base.Preconditions.checkState;
 import static java.nio.charset.StandardCharsets.UTF_8;
 
 import java.io.IOException;
@@ -43,9 +44,7 @@ public class GraphiteUDP implements GraphiteSender {
 
   @Override
   public void connect() throws IllegalStateException, IOException {
-    if (isConnected()) {
-      throw new IllegalStateException("Already connected");
-    }
+    checkState(!isConnected(), "Already connected");
 
     // Resolve hostname
     if (hostname != null) {
@@ -63,7 +62,7 @@ public class GraphiteUDP implements GraphiteSender {
   @Override
   public void send(String name, String value, long timestamp) throws IOException {
     try {
-      String str = sanitize(name) + ' ' + sanitize(value) + ' ' + Long.toString(timestamp) + '\n';
+      String str = sanitize(name) + ' ' + sanitize(value) + ' ' + timestamp + '\n';
       ByteBuffer byteBuffer = ByteBuffer.wrap(str.getBytes(UTF_8));
       datagramChannel.send(byteBuffer, address);
       this.failures = 0;
diff --git a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java
index 42e72e5..6312111 100644
--- a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java
+++ b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/PickledGraphite.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5.graphite;
 
+import static com.google.common.base.Preconditions.checkState;
 import static java.nio.charset.StandardCharsets.UTF_8;
 
 import java.io.BufferedWriter;
@@ -48,7 +49,7 @@ public class PickledGraphite implements GraphiteSender {
       QUOTE = '\'',
       LF = '\n';
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(PickledGraphite.class);
+  private static final Logger LOG = LoggerFactory.getLogger(PickledGraphite.class);
   private static final int DEFAULT_BATCH_SIZE = 100;
 
   private int batchSize;
@@ -173,9 +174,7 @@ public class PickledGraphite implements GraphiteSender {
 
   @Override
   public void connect() throws IllegalStateException, IOException {
-    if (isConnected()) {
-      throw new IllegalStateException("Already connected");
-    }
+    checkState(!isConnected(), "Already connected");
     InetSocketAddress address = this.address;
     if (address == null) {
       address = new InetSocketAddress(hostname, port);
@@ -249,7 +248,7 @@ public class PickledGraphite implements GraphiteSender {
    * message to graphite 3. Clear out the list of metrics
    */
   private void writeMetrics() throws IOException {
-    if (metrics.size() > 0) {
+    if (!metrics.isEmpty()) {
       try {
         byte[] payload = pickleMetrics(metrics);
         byte[] header = ByteBuffer.allocate(4).putInt(payload.length).array();
@@ -260,8 +259,8 @@ public class PickledGraphite implements GraphiteSender {
         outputStream.write(payload);
         outputStream.flush();
 
-        if (LOGGER.isDebugEnabled()) {
-          LOGGER.debug("Wrote {} metrics", metrics.size());
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Wrote {} metrics", metrics.size());
         }
       } catch (IOException e) {
         this.failures++;
diff --git a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java
index f7f01d6..29eb9ed 100755
--- a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java
+++ b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteRabbitMQTest.java
@@ -8,7 +8,6 @@ import static org.mockito.Mockito.anyString;
 import static org.mockito.Mockito.atMost;
 import static org.mockito.Mockito.doThrow;
 import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -20,14 +19,14 @@ import java.net.UnknownHostException;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class GraphiteRabbitMQTest {
-  private final ConnectionFactory connectionFactory = mock(ConnectionFactory.class);
-  private final Connection connection = mock(Connection.class);
-  private final Channel channel = mock(Channel.class);
+final class GraphiteRabbitMQTest {
+  private final ConnectionFactory connectionFactory = mock();
+  private final Connection connection = mock();
+  private final Channel channel = mock();
 
-  private final ConnectionFactory bogusConnectionFactory = mock(ConnectionFactory.class);
-  private final Connection bogusConnection = mock(Connection.class);
-  private final Channel bogusChannel = mock(Channel.class);
+  private final ConnectionFactory bogusConnectionFactory = mock();
+  private final Connection bogusConnection = mock();
+  private final Channel bogusChannel = mock();
 
   private final GraphiteRabbitMQ graphite = new GraphiteRabbitMQ(connectionFactory, "graphite");
 
@@ -92,10 +91,9 @@ class GraphiteRabbitMQTest {
 
     String expectedMessage = "name value 100\n";
 
-    verify(channel, times(1))
-        .basicPublish("graphite", "name", null, expectedMessage.getBytes(UTF_8));
+    verify(channel).basicPublish("graphite", "name", null, expectedMessage.getBytes(UTF_8));
 
-    assertThat(graphite.getFailures()).isZero();
+    assertThat(graphite.getFailures()).isEqualTo(0);
   }
 
   @Test
@@ -105,10 +103,10 @@ class GraphiteRabbitMQTest {
 
     String expectedMessage = "name-to-sanitize value-to-sanitize 100\n";
 
-    verify(channel, times(1))
+    verify(channel)
         .basicPublish("graphite", "name-to-sanitize", null, expectedMessage.getBytes(UTF_8));
 
-    assertThat(graphite.getFailures()).isZero();
+    assertThat(graphite.getFailures()).isEqualTo(0);
   }
 
   @Test
diff --git a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java
index 934c6a9..0302ddc 100644
--- a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java
+++ b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteReporterTest.java
@@ -8,6 +8,7 @@ import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verifyNoMoreInteractions;
 import static org.mockito.Mockito.when;
 
+import com.google.common.collect.ImmutableSet;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Gauge;
@@ -22,7 +23,6 @@ import io.dropwizard.metrics5.Timer;
 import java.net.UnknownHostException;
 import java.text.DecimalFormat;
 import java.text.DecimalFormatSymbols;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.Locale;
 import java.util.Set;
@@ -33,15 +33,15 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.mockito.InOrder;
 
-class GraphiteReporterTest {
+final class GraphiteReporterTest {
   private static final MetricName GAUGE = MetricName.build("gauge");
   private static final MetricName METER = MetricName.build("meter");
   private static final MetricName COUNTER = MetricName.build("counter");
 
   private final long timestamp = 1000198;
-  private final Clock clock = mock(Clock.class);
-  private final Graphite graphite = mock(Graphite.class);
-  private final MetricRegistry registry = mock(MetricRegistry.class);
+  private final Clock clock = mock();
+  private final Graphite graphite = mock();
+  private final MetricRegistry registry = mock();
   private final GraphiteReporter reporter =
       GraphiteReporter.forRegistry(registry)
           .withClock(clock)
@@ -49,7 +49,7 @@ class GraphiteReporterTest {
           .convertRatesTo(TimeUnit.SECONDS)
           .convertDurationsTo(TimeUnit.MILLISECONDS)
           .filter(MetricFilter.ALL)
-          .disabledMetricAttributes(Collections.emptySet())
+          .disabledMetricAttributes(ImmutableSet.of())
           .build(graphite);
 
   private final GraphiteReporter minuteRateReporter =
@@ -59,7 +59,7 @@ class GraphiteReporterTest {
           .convertRatesTo(TimeUnit.MINUTES)
           .convertDurationsTo(TimeUnit.MILLISECONDS)
           .filter(MetricFilter.ALL)
-          .disabledMetricAttributes(Collections.emptySet())
+          .disabledMetricAttributes(ImmutableSet.of())
           .build(graphite);
 
   @BeforeEach
@@ -179,7 +179,7 @@ class GraphiteReporterTest {
             .convertRatesTo(TimeUnit.SECONDS)
             .convertDurationsTo(TimeUnit.MILLISECONDS)
             .filter(MetricFilter.ALL)
-            .disabledMetricAttributes(Collections.emptySet())
+            .disabledMetricAttributes(ImmutableSet.of())
             .withFloatingPointFormatter(formatter::format)
             .build(graphite)) {
       reportGaugeValue(graphiteReporter, 0.000045322);
@@ -222,7 +222,7 @@ class GraphiteReporterTest {
 
   @Test
   void reportsCounters() throws Exception {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
 
     reporter.report(map(), map(COUNTER, counter), map(), map(), map());
@@ -238,11 +238,11 @@ class GraphiteReporterTest {
 
   @Test
   void reportsHistograms() throws Exception {
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSum()).thenReturn(12L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
@@ -280,7 +280,7 @@ class GraphiteReporterTest {
 
   @Test
   void reportsMeters() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
@@ -306,7 +306,7 @@ class GraphiteReporterTest {
 
   @Test
   void reportsMetersInMinutes() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
@@ -333,7 +333,7 @@ class GraphiteReporterTest {
 
   @Test
   void reportsTimers() throws Exception {
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
     when(timer.getSum()).thenReturn(TimeUnit.MILLISECONDS.toNanos(6));
     when(timer.getMeanRate()).thenReturn(2.0);
@@ -341,7 +341,7 @@ class GraphiteReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -410,7 +410,7 @@ class GraphiteReporterTest {
 
   @Test
   void disabledMetricsAttribute() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
@@ -418,7 +418,7 @@ class GraphiteReporterTest {
     when(meter.getFifteenMinuteRate()).thenReturn(4.0);
     when(meter.getMeanRate()).thenReturn(5.0);
 
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(11L);
 
     Set<MetricAttribute> disabledMetricAttributes =
@@ -450,7 +450,7 @@ class GraphiteReporterTest {
 
   @Test
   void sendsMetricAttributesAsTagsIfEnabled() throws Exception {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
 
     getReporterThatSendsMetricAttributesAsTags()
@@ -476,7 +476,7 @@ class GraphiteReporterTest {
         MetricFilter.ALL,
         null,
         false,
-        Collections.emptySet(),
+        ImmutableSet.of(),
         false) {
       @Override
       protected String format(double v) {
@@ -492,7 +492,7 @@ class GraphiteReporterTest {
         .convertRatesTo(TimeUnit.SECONDS)
         .convertDurationsTo(TimeUnit.MILLISECONDS)
         .filter(MetricFilter.ALL)
-        .disabledMetricAttributes(Collections.emptySet())
+        .disabledMetricAttributes(ImmutableSet.of())
         .addMetricAttributesAsTags(true)
         .build(graphite);
   }
diff --git a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteSanitizeTest.java b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteSanitizeTest.java
index 9cbadb6..edca420 100644
--- a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteSanitizeTest.java
+++ b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteSanitizeTest.java
@@ -3,7 +3,7 @@ package io.dropwizard.metrics5.graphite;
 import org.assertj.core.api.SoftAssertions;
 import org.junit.jupiter.api.Test;
 
-class GraphiteSanitizeTest {
+final class GraphiteSanitizeTest {
   @Test
   void sanitizeGraphiteValues() {
     SoftAssertions softly = new SoftAssertions();
diff --git a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java
index 575ff2e..80e19d6 100644
--- a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java
+++ b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteTest.java
@@ -23,14 +23,14 @@ import javax.net.SocketFactory;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class GraphiteTest {
+final class GraphiteTest {
   private final String host = "example.com";
   private final int port = 1234;
-  private final SocketFactory socketFactory = mock(SocketFactory.class);
+  private final SocketFactory socketFactory = mock();
   private final InetSocketAddress address = new InetSocketAddress(host, port);
 
-  private final Socket socket = mock(Socket.class);
-  private final ByteArrayOutputStream output = spy(ByteArrayOutputStream.class);
+  private final Socket socket = mock();
+  private final ByteArrayOutputStream output = spy();
 
   @BeforeEach
   void setUp() throws Exception {
@@ -84,7 +84,7 @@ class GraphiteTest {
   @Test
   void measuresFailures() throws IOException {
     try (Graphite graphite = new Graphite(address, socketFactory)) {
-      assertThat(graphite.getFailures()).isZero();
+      assertThat(graphite.getFailures()).isEqualTo(0);
     }
   }
 
diff --git a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java
index a293305..5a8828e 100644
--- a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java
+++ b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/GraphiteUDPTest.java
@@ -1,15 +1,15 @@
 package io.dropwizard.metrics5.graphite;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 
 import java.net.InetSocketAddress;
 import java.nio.ByteBuffer;
 import java.nio.channels.DatagramChannel;
 import org.junit.jupiter.api.Test;
-import org.mockito.Mockito;
 
-class GraphiteUDPTest {
+final class GraphiteUDPTest {
 
   private final String host = "example.com";
   private final int port = 1234;
@@ -30,7 +30,7 @@ class GraphiteUDPTest {
   @Test
   void writesValue() throws Exception {
     graphiteUDP = new GraphiteUDP(host, port);
-    DatagramChannel mockDatagramChannel = Mockito.mock(DatagramChannel.class);
+    DatagramChannel mockDatagramChannel = mock();
     graphiteUDP.setDatagramChannel(mockDatagramChannel);
     graphiteUDP.setAddress(new InetSocketAddress(host, port));
 
diff --git a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java
index 6bb1d9c..50567d0 100644
--- a/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java
+++ b/metrics-graphite/src/test/java/io/dropwizard/metrics5/graphite/PickledGraphiteTest.java
@@ -31,13 +31,13 @@ import org.junit.jupiter.api.Test;
 import org.python.core.PyList;
 import org.python.core.PyTuple;
 
-class PickledGraphiteTest {
-  private final SocketFactory socketFactory = mock(SocketFactory.class);
+final class PickledGraphiteTest {
+  private final SocketFactory socketFactory = mock();
   private final InetSocketAddress address = new InetSocketAddress("example.com", 1234);
   private final PickledGraphite graphite = new PickledGraphite(address, socketFactory, UTF_8, 2);
 
-  private final Socket socket = mock(Socket.class);
-  private final ByteArrayOutputStream output = spy(ByteArrayOutputStream.class);
+  private final Socket socket = mock();
+  private final ByteArrayOutputStream output = spy();
 
   private CompiledScript unpickleScript;
 
diff --git a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java
index f34fc4a..81e0265 100644
--- a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java
+++ b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecorator.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.health;
 
+import static com.google.common.base.Preconditions.checkArgument;
+
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.health.annotation.Async;
 import java.util.concurrent.ScheduledExecutorService;
@@ -29,10 +31,10 @@ public class AsyncHealthCheckDecorator implements HealthCheck, Runnable {
     this.healthyTtl =
         async.unit().toMillis(async.healthyTtl() <= 0 ? 2 * async.period() : async.healthyTtl());
     result =
-        Async.InitialState.HEALTHY.equals(async.initialState())
+        Async.InitialState.HEALTHY == async.initialState()
             ? Result.healthy(NO_RESULT_YET_MESSAGE)
             : Result.unhealthy(NO_RESULT_YET_MESSAGE);
-    if (Async.ScheduleType.FIXED_RATE.equals(async.scheduleType())) {
+    if (Async.ScheduleType.FIXED_RATE == async.scheduleType()) {
       future =
           executorService.scheduleAtFixedRate(
               this, async.initialDelay(), async.period(), async.unit());
@@ -77,8 +79,6 @@ public class AsyncHealthCheckDecorator implements HealthCheck, Runnable {
   }
 
   private static void check(boolean expression, String message) {
-    if (!expression) {
-      throw new IllegalArgumentException(message);
-    }
+    checkArgument(expression, message);
   }
 }
diff --git a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java
index 017ab9c..e7c8eae 100644
--- a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java
+++ b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheck.java
@@ -1,11 +1,12 @@
 package io.dropwizard.metrics5.health;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.Clock;
 import java.time.Instant;
 import java.time.ZoneId;
 import java.time.ZonedDateTime;
 import java.time.format.DateTimeFormatter;
-import java.util.Collections;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
@@ -123,7 +124,7 @@ public interface HealthCheck {
       this.healthy = isHealthy;
       this.message = message;
       this.error = error;
-      this.details = details == null ? null : Collections.unmodifiableMap(details);
+      this.details = details == null ? null : unmodifiableMap(details);
       this.time = clock.getTime();
     }
 
@@ -162,7 +163,7 @@ public interface HealthCheck {
      */
     public String getTimestamp() {
       Instant currentInstant = Instant.ofEpochMilli(time);
-      ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(currentInstant, ZoneId.systemDefault());
+      ZonedDateTime zonedDateTime = currentInstant.atZone(ZoneId.systemDefault());
       return DATE_FORMAT_PATTERN.format(zonedDateTime);
     }
 
@@ -218,8 +219,7 @@ public interface HealthCheck {
       int result = healthy ? 1 : 0;
       result = PRIME * result + (message != null ? message.hashCode() : 0);
       result = PRIME * result + (error != null ? error.hashCode() : 0);
-      result = PRIME * result + (Long.hashCode(time));
-      return result;
+      return PRIME * result + (Long.hashCode(time));
     }
 
     @Override
@@ -237,7 +237,7 @@ public interface HealthCheck {
       if (details != null) {
         for (Map.Entry<String, Object> e : details.entrySet()) {
           builder.append(", ");
-          builder.append(e.getKey()).append("=").append(String.valueOf(e.getValue()));
+          builder.append(e.getKey()).append("=").append(e.getValue());
         }
       }
       builder.append('}');
diff --git a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java
index b920a9d..77b1e1e 100644
--- a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java
+++ b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java
@@ -1,9 +1,11 @@
 package io.dropwizard.metrics5.health;
 
+import static com.google.common.base.Preconditions.checkArgument;
 import static io.dropwizard.metrics5.health.HealthCheck.Result;
+import static java.util.Collections.unmodifiableSortedMap;
+import static java.util.Collections.unmodifiableSortedSet;
 
 import io.dropwizard.metrics5.health.annotation.Async;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -27,7 +29,7 @@ import org.slf4j.LoggerFactory;
 
 /** A registry for health checks. */
 public class HealthCheckRegistry {
-  private static final Logger LOGGER = LoggerFactory.getLogger(HealthCheckRegistry.class);
+  private static final Logger LOG = LoggerFactory.getLogger(HealthCheckRegistry.class);
   private static final int ASYNC_EXECUTOR_POOL_SIZE = 2;
 
   private final ConcurrentMap<String, HealthCheck> healthChecks;
@@ -92,9 +94,8 @@ public class HealthCheckRegistry {
   public void register(String name, HealthCheck healthCheck) {
     HealthCheck registered;
     synchronized (lock) {
-      if (healthChecks.containsKey(name)) {
-        throw new IllegalArgumentException("A health check named " + name + " already exists");
-      }
+      checkArgument(
+          !healthChecks.containsKey(name), "A health check named " + name + " already exists");
       registered = healthCheck;
       if (healthCheck.getClass().isAnnotationPresent(Async.class)) {
         registered = new AsyncHealthCheckDecorator(healthCheck, asyncExecutorService);
@@ -128,7 +129,7 @@ public class HealthCheckRegistry {
    * @return the names of all registered health checks
    */
   public SortedSet<String> getNames() {
-    return Collections.unmodifiableSortedSet(new TreeSet<>(healthChecks.keySet()));
+    return unmodifiableSortedSet(new TreeSet<>(healthChecks.keySet()));
   }
 
   /**
@@ -180,7 +181,7 @@ public class HealthCheckRegistry {
         results.put(entry.getKey(), result);
       }
     }
-    return Collections.unmodifiableSortedMap(results);
+    return unmodifiableSortedMap(results);
   }
 
   /**
@@ -217,12 +218,12 @@ public class HealthCheckRegistry {
       try {
         results.put(entry.getKey(), entry.getValue().get());
       } catch (Exception e) {
-        LOGGER.warn("Error executing health check {}", entry.getKey(), e);
+        LOG.warn("Error executing health check {}", entry.getKey(), e);
         results.put(entry.getKey(), HealthCheck.Result.unhealthy(e));
       }
     }
 
-    return Collections.unmodifiableSortedMap(results);
+    return unmodifiableSortedMap(results);
   }
 
   private void onHealthCheckAdded(String name, HealthCheck healthCheck) {
diff --git a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java
index 209aede..83f8daa 100644
--- a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java
+++ b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/AsyncHealthCheckDecoratorTest.java
@@ -1,11 +1,12 @@
 package io.dropwizard.metrics5.health;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.ArgumentCaptor.forClass;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.*;
+import static org.mockito.Mockito.verify;
 
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.health.annotation.Async;
@@ -16,7 +17,7 @@ import org.junit.jupiter.api.Test;
 import org.mockito.ArgumentCaptor;
 
 /** Unit tests for {@link AsyncHealthCheckDecorator}. */
-class AsyncHealthCheckDecoratorTest {
+final class AsyncHealthCheckDecoratorTest {
 
   private static final long CURRENT_TIME = 1551002401000L;
 
@@ -29,65 +30,66 @@ class AsyncHealthCheckDecoratorTest {
           .withMessage("Result was healthy but it expired 1 milliseconds ago")
           .build();
 
-  private final HealthCheck mockHealthCheck = mock(HealthCheck.class);
-  private final ScheduledExecutorService mockExecutorService = mock(ScheduledExecutorService.class);
+  private final HealthCheck mockHealthCheck = mock();
+  private final ScheduledExecutorService mockExecutorService = mock();
 
   @SuppressWarnings("rawtypes")
-  private final ScheduledFuture mockFuture = mock(ScheduledFuture.class);
+  private final ScheduledFuture mockFuture = mock();
 
   @Test
   void nullHealthCheckTriggersInstantiationFailure() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          new AsyncHealthCheckDecorator(null, mockExecutorService);
-        });
+    assertThatThrownBy(
+            () -> {
+              new AsyncHealthCheckDecorator(null, mockExecutorService);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void nullExecutorServiceTriggersInstantiationFailure() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          new AsyncHealthCheckDecorator(mockHealthCheck, null);
-        });
+    assertThatThrownBy(
+            () -> {
+              new AsyncHealthCheckDecorator(mockHealthCheck, null);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void nonAsyncHealthCheckTriggersInstantiationFailure() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          new AsyncHealthCheckDecorator(mockHealthCheck, mockExecutorService);
-        });
+    assertThatThrownBy(
+            () -> {
+              new AsyncHealthCheckDecorator(mockHealthCheck, mockExecutorService);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void negativePeriodTriggersInstantiationFailure() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          new AsyncHealthCheckDecorator(new NegativePeriodAsyncHealthCheck(), mockExecutorService);
-        });
+    assertThatThrownBy(
+            () -> {
+              new AsyncHealthCheckDecorator(
+                  new NegativePeriodAsyncHealthCheck(), mockExecutorService);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void zeroPeriodTriggersInstantiationFailure() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          new AsyncHealthCheckDecorator(new ZeroPeriodAsyncHealthCheck(), mockExecutorService);
-        });
+    assertThatThrownBy(
+            () -> {
+              new AsyncHealthCheckDecorator(new ZeroPeriodAsyncHealthCheck(), mockExecutorService);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
   void negativeInitialValueTriggersInstantiationFailure() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          new AsyncHealthCheckDecorator(
-              new NegativeInitialDelayAsyncHealthCheck(), mockExecutorService);
-        });
+    assertThatThrownBy(
+            () -> {
+              new AsyncHealthCheckDecorator(
+                  new NegativeInitialDelayAsyncHealthCheck(), mockExecutorService);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
@@ -97,7 +99,7 @@ class AsyncHealthCheckDecoratorTest {
     AsyncHealthCheckDecorator asyncDecorator =
         new AsyncHealthCheckDecorator(asyncHealthCheck, mockExecutorService);
 
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(any(Runnable.class), eq(0L), eq(1L), eq(TimeUnit.SECONDS));
     assertThat(asyncDecorator.getHealthCheck()).isEqualTo(asyncHealthCheck);
     assertThat(asyncDecorator.check().isHealthy()).isTrue();
@@ -109,7 +111,7 @@ class AsyncHealthCheckDecoratorTest {
     AsyncHealthCheckDecorator asyncDecorator =
         new AsyncHealthCheckDecorator(asyncHealthCheck, mockExecutorService);
 
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleWithFixedDelay(any(Runnable.class), eq(0L), eq(1L), eq(TimeUnit.SECONDS));
     assertThat(asyncDecorator.getHealthCheck()).isEqualTo(asyncHealthCheck);
   }
@@ -124,8 +126,8 @@ class AsyncHealthCheckDecoratorTest {
     assertThat(asyncDecorator.check().isHealthy()).isFalse();
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void tearDownTriggersCancellation() throws Exception {
     when(mockExecutorService.scheduleAtFixedRate(
             any(Runnable.class), eq(0L), eq(1L), eq(TimeUnit.SECONDS)))
@@ -136,13 +138,13 @@ class AsyncHealthCheckDecoratorTest {
         new AsyncHealthCheckDecorator(new DefaultAsyncHealthCheck(), mockExecutorService);
     asyncDecorator.tearDown();
 
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(any(Runnable.class), eq(0L), eq(1L), eq(TimeUnit.SECONDS));
-    verify(mockFuture, times(1)).cancel(eq(true));
+    verify(mockFuture).cancel(true);
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void afterFirstExecutionDecoratedHealthCheckResultIsProvided() throws Exception {
     HealthCheck.Result expectedResult = HealthCheck.Result.healthy("AsyncHealthCheckTest");
     when(mockExecutorService.scheduleAtFixedRate(
@@ -155,7 +157,7 @@ class AsyncHealthCheckDecoratorTest {
     HealthCheck.Result initialResult = asyncDecorator.check();
 
     ArgumentCaptor<Runnable> runnableCaptor = forClass(Runnable.class);
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(runnableCaptor.capture(), eq(0L), eq(1L), eq(TimeUnit.SECONDS));
     Runnable capturedRunnable = runnableCaptor.getValue();
     capturedRunnable.run();
@@ -165,8 +167,8 @@ class AsyncHealthCheckDecoratorTest {
     assertThat(actualResult).isNotEqualTo(initialResult);
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void exceptionInDecoratedHealthCheckWontAffectAsyncDecorator() throws Exception {
     Exception exception = new Exception("TestException");
     when(mockExecutorService.scheduleAtFixedRate(
@@ -178,7 +180,7 @@ class AsyncHealthCheckDecoratorTest {
             new ConfigurableAsyncHealthCheck(exception), mockExecutorService);
 
     ArgumentCaptor<Runnable> runnableCaptor = forClass(Runnable.class);
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(runnableCaptor.capture(), eq(0L), eq(1L), eq(TimeUnit.SECONDS));
     Runnable capturedRunnable = runnableCaptor.getValue();
     capturedRunnable.run();
@@ -195,7 +197,7 @@ class AsyncHealthCheckDecoratorTest {
         new AsyncHealthCheckDecorator(healthCheck, mockExecutorService, FIXED_CLOCK);
 
     ArgumentCaptor<Runnable> runnableCaptor = forClass(Runnable.class);
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(
             runnableCaptor.capture(), eq(0L), eq(1000L), eq(TimeUnit.MILLISECONDS));
     Runnable capturedRunnable = runnableCaptor.getValue();
@@ -214,7 +216,7 @@ class AsyncHealthCheckDecoratorTest {
         new AsyncHealthCheckDecorator(healthCheck, mockExecutorService, FIXED_CLOCK);
 
     ArgumentCaptor<Runnable> runnableCaptor = forClass(Runnable.class);
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(
             runnableCaptor.capture(), eq(0L), eq(1000L), eq(TimeUnit.MILLISECONDS));
     Runnable capturedRunnable = runnableCaptor.getValue();
@@ -232,7 +234,7 @@ class AsyncHealthCheckDecoratorTest {
         new AsyncHealthCheckDecorator(healthCheck, mockExecutorService, FIXED_CLOCK);
 
     ArgumentCaptor<Runnable> runnableCaptor = forClass(Runnable.class);
-    verify(mockExecutorService, times(1))
+    verify(mockExecutorService)
         .scheduleAtFixedRate(runnableCaptor.capture(), eq(0L), eq(1L), eq(TimeUnit.SECONDS));
     Runnable capturedRunnable = runnableCaptor.getValue();
     capturedRunnable.run();
diff --git a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckFilterTest.java b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckFilterTest.java
index 1177c7b..31a20bc 100644
--- a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckFilterTest.java
+++ b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckFilterTest.java
@@ -5,7 +5,7 @@ import static org.mockito.Mockito.mock;
 
 import org.junit.jupiter.api.Test;
 
-class HealthCheckFilterTest {
+final class HealthCheckFilterTest {
 
   @Test
   void theAllFilterMatchesAllHealthChecks() {
diff --git a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java
index 236b355..c099cc7 100644
--- a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java
+++ b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckRegistryTest.java
@@ -1,9 +1,9 @@
 package io.dropwizard.metrics5.health;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.assertj.core.api.Assertions.entry;
 import static org.assertj.core.api.Assertions.failBecauseExceptionWasNotThrown;
-import static org.junit.jupiter.api.Assertions.assertThrows;
 import static org.mockito.ArgumentCaptor.forClass;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
@@ -23,22 +23,22 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.mockito.ArgumentCaptor;
 
-class HealthCheckRegistryTest {
-  private final ScheduledExecutorService executorService = mock(ScheduledExecutorService.class);
+final class HealthCheckRegistryTest {
+  private final ScheduledExecutorService executorService = mock();
   private final HealthCheckRegistry registry = new HealthCheckRegistry(executorService);
-  private final HealthCheckRegistryListener listener = mock(HealthCheckRegistryListener.class);
+  private final HealthCheckRegistryListener listener = mock();
 
-  private final HealthCheck hc1 = mock(HealthCheck.class);
-  private final HealthCheck hc2 = mock(HealthCheck.class);
+  private final HealthCheck hc1 = mock();
+  private final HealthCheck hc2 = mock();
 
-  private final HealthCheck.Result r1 = mock(HealthCheck.Result.class);
-  private final HealthCheck.Result r2 = mock(HealthCheck.Result.class);
+  private final HealthCheck.Result r1 = mock();
+  private final HealthCheck.Result r2 = mock();
 
-  private final HealthCheck.Result ar = mock(HealthCheck.Result.class);
+  private final HealthCheck.Result ar = mock();
   private final HealthCheck ahc = new TestAsyncHealthCheck(ar);
 
   @SuppressWarnings("rawtypes")
-  private final ScheduledFuture af = mock(ScheduledFuture.class);
+  private final ScheduledFuture af = mock();
 
   @BeforeEach
   @SuppressWarnings("unchecked")
@@ -74,11 +74,11 @@ class HealthCheckRegistryTest {
 
   @Test
   void registeringHealthCheckTwiceThrowsException() {
-    assertThrows(
-        IllegalArgumentException.class,
-        () -> {
-          registry.register("hc1", hc1);
-        });
+    assertThatThrownBy(
+            () -> {
+              registry.register("hc1", hc1);
+            })
+        .isInstanceOf(IllegalArgumentException.class);
   }
 
   @Test
@@ -101,7 +101,7 @@ class HealthCheckRegistryTest {
 
   @Test
   void addingListenerCatchesExistingHealthChecks() {
-    HealthCheckRegistryListener listener = mock(HealthCheckRegistryListener.class);
+    HealthCheckRegistryListener listener = mock();
     HealthCheckRegistry registry = new HealthCheckRegistry();
     registry.register("hc1", hc1);
     registry.register("hc2", hc2);
@@ -115,7 +115,7 @@ class HealthCheckRegistryTest {
 
   @Test
   void removedListenerDoesNotReceiveUpdates() {
-    HealthCheckRegistryListener listener = mock(HealthCheckRegistryListener.class);
+    HealthCheckRegistryListener listener = mock();
     HealthCheckRegistry registry = new HealthCheckRegistry();
     registry.addListener(listener);
     registry.register("hc1", hc1);
diff --git a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java
index b64faa4..62df29b 100644
--- a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java
+++ b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java
@@ -11,7 +11,7 @@ import java.time.ZonedDateTime;
 import java.time.format.DateTimeFormatter;
 import org.junit.jupiter.api.Test;
 
-class HealthCheckTest {
+final class HealthCheckTest {
 
   private static final DateTimeFormatter DATE_TIME_FORMATTER =
       DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
@@ -29,7 +29,7 @@ class HealthCheckTest {
     }
   }
 
-  private final HealthCheck underlying = mock(HealthCheck.class);
+  private final HealthCheck underlying = mock();
   private final HealthCheck healthCheck = new ExampleHealthCheck(underlying);
 
   @Test
@@ -89,7 +89,7 @@ class HealthCheckTest {
 
   @Test
   void canHaveUnhealthyResultsWithExceptions() {
-    final RuntimeException e = mock(RuntimeException.class);
+    final RuntimeException e = mock();
     when(e.getMessage()).thenReturn("oh noes");
 
     final HealthCheck.Result result = HealthCheck.Result.unhealthy(e);
@@ -144,7 +144,7 @@ class HealthCheckTest {
 
   @Test
   void canHaveUnHealthyBuilderWithDetailAndError() {
-    final RuntimeException e = mock(RuntimeException.class);
+    final RuntimeException e = mock();
     when(e.getMessage()).thenReturn("oh noes");
 
     final HealthCheck.Result result =
@@ -161,7 +161,7 @@ class HealthCheckTest {
 
   @Test
   void returnsResultsWhenExecuted() {
-    final HealthCheck.Result result = mock(HealthCheck.Result.class);
+    final HealthCheck.Result result = mock();
     when(underlying.execute()).thenReturn(result);
 
     assertThat(healthCheck.execute()).isEqualTo(result);
@@ -171,7 +171,7 @@ class HealthCheckTest {
 
   @Test
   void wrapsExceptionsWhenExecuted() {
-    final RuntimeException e = mock(RuntimeException.class);
+    final RuntimeException e = mock();
     when(e.getMessage()).thenReturn("oh noes");
 
     when(underlying.execute()).thenThrow(e);
@@ -181,7 +181,7 @@ class HealthCheckTest {
     assertThat(actual.getMessage()).isEqualTo("oh noes");
     assertThat(actual.getError()).isEqualTo(e);
     assertThat(actual.getDetails()).isNull();
-    assertThat(actual.getDuration()).isGreaterThanOrEqualTo(0);
+    assertThat(actual.getDuration()).isNotNegative();
   }
 
   @Test
diff --git a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java
index 1578e44..08071b6 100644
--- a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java
+++ b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/SharedHealthCheckRegistriesTest.java
@@ -2,13 +2,12 @@ package io.dropwizard.metrics5.health;
 
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 
 import java.util.concurrent.atomic.AtomicReference;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class SharedHealthCheckRegistriesTest {
+final class SharedHealthCheckRegistriesTest {
 
   @BeforeEach
   void setUp() {
@@ -28,7 +27,7 @@ class SharedHealthCheckRegistriesTest {
   void returnsSetOfCreatedRegistries() {
     SharedHealthCheckRegistries.getOrCreate("db");
 
-    assertThat(SharedHealthCheckRegistries.names()).containsOnly("db");
+    assertThat(SharedHealthCheckRegistries.names()).containsExactly("db");
   }
 
   @Test
@@ -58,7 +57,7 @@ class SharedHealthCheckRegistriesTest {
             () -> {
               SharedHealthCheckRegistries.getDefault();
             });
-    assertTrue(exception.getMessage().contains("Default registry name has not been set."));
+    assertThat(exception.getMessage().contains("Default registry name has not been set.")).isTrue();
   }
 
   @Test
@@ -85,7 +84,8 @@ class SharedHealthCheckRegistriesTest {
               SharedHealthCheckRegistries.setDefault("default");
               SharedHealthCheckRegistries.setDefault("default");
             });
-    assertTrue(exception.getMessage().contains("Default health check registry is already set."));
+    assertThat(exception.getMessage().contains("Default health check registry is already set."))
+        .isTrue();
   }
 
   @Test
@@ -97,6 +97,7 @@ class SharedHealthCheckRegistriesTest {
               SharedHealthCheckRegistries.setDefault("default", new HealthCheckRegistry());
               SharedHealthCheckRegistries.setDefault("default", new HealthCheckRegistry());
             });
-    assertTrue(exception.getMessage().contains("Default health check registry is already set."));
+    assertThat(exception.getMessage().contains("Default health check registry is already set."))
+        .isTrue();
   }
 }
diff --git a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java
index 948152a..7829d74 100644
--- a/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java
+++ b/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/jvm/ThreadDeadlockHealthCheckTest.java
@@ -4,23 +4,22 @@ import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
+import com.google.common.collect.ImmutableSet;
 import io.dropwizard.metrics5.health.HealthCheck;
 import io.dropwizard.metrics5.jvm.ThreadDeadlockDetector;
-import java.util.Collections;
 import java.util.Set;
 import java.util.TreeSet;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.Test;
 
-class ThreadDeadlockHealthCheckTest {
+final class ThreadDeadlockHealthCheckTest {
   @Test
   void isHealthyIfNoThreadsAreDeadlocked() {
-    final ThreadDeadlockDetector detector = mock(ThreadDeadlockDetector.class);
+    final ThreadDeadlockDetector detector = mock();
     final ThreadDeadlockHealthCheck healthCheck = new ThreadDeadlockHealthCheck(detector);
 
-    when(detector.getDeadlockedThreads()).thenReturn(Collections.emptySet());
+    when(detector.getDeadlockedThreads()).thenReturn(ImmutableSet.of());
 
-    Assertions.assertThat(healthCheck.execute().isHealthy()).isTrue();
+    assertThat(healthCheck.execute().isHealthy()).isTrue();
   }
 
   @Test
@@ -29,7 +28,7 @@ class ThreadDeadlockHealthCheckTest {
     threads.add("one");
     threads.add("two");
 
-    final ThreadDeadlockDetector detector = mock(ThreadDeadlockDetector.class);
+    final ThreadDeadlockDetector detector = mock();
     final ThreadDeadlockHealthCheck healthCheck = new ThreadDeadlockHealthCheck(detector);
 
     when(detector.getDeadlockedThreads()).thenReturn(threads);
@@ -44,6 +43,6 @@ class ThreadDeadlockHealthCheckTest {
   @Test
   void automaticallyUsesThePlatformThreadBeans() {
     final ThreadDeadlockHealthCheck healthCheck = new ThreadDeadlockHealthCheck();
-    Assertions.assertThat(healthCheck.execute().isHealthy()).isTrue();
+    assertThat(healthCheck.execute().isHealthy()).isTrue();
   }
 }
diff --git a/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTest.java b/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTest.java
index ece43e4..3c22974 100644
--- a/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTest.java
+++ b/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTest.java
@@ -22,7 +22,7 @@ import org.mockito.Mock;
 import org.mockito.junit.jupiter.MockitoExtension;
 
 @ExtendWith(MockitoExtension.class)
-class InstrumentedHttpClientsTest extends HttpClientTestBase {
+final class InstrumentedHttpClientsTest extends HttpClientTestBase {
 
   private final MetricRegistry metricRegistry = new MetricRegistry();
 
diff --git a/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java b/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java
index 55e5785..44f52fa 100644
--- a/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java
+++ b/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java
@@ -1,7 +1,6 @@
 package io.dropwizard.metrics5.httpasyncclient;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
@@ -20,6 +19,7 @@ import org.apache.http.client.methods.HttpGet;
 import org.apache.http.concurrent.FutureCallback;
 import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
 import org.apache.http.nio.client.HttpAsyncClient;
+import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
@@ -29,7 +29,7 @@ import org.mockito.junit.jupiter.MockitoExtension;
 
 @ExtendWith(MockitoExtension.class)
 @Disabled("The tests are flaky")
-class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
+final class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
 
   private HttpAsyncClient asyncHttpClient;
 
@@ -46,7 +46,7 @@ class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
     chac.start();
     asyncHttpClient = chac;
 
-    Timer timer = mock(Timer.class);
+    Timer timer = mock();
     when(timer.time()).thenReturn(context);
     when(metricRegistry.timer(MetricName.build("test"))).thenReturn(timer);
   }
@@ -72,13 +72,13 @@ class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
     verify(context, timeout(200).times(1)).stop();
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void timerIsStoppedCorrectlyWithProvidedFutureCallbackCompleted() throws Exception {
     HttpHost host = startServerWithGlobalRequestHandler(STATUS_OK);
     HttpGet get = new HttpGet("/?q=something");
 
-    FutureCallback<HttpResponse> futureCallback = mock(FutureCallback.class);
+    FutureCallback<HttpResponse> futureCallback = mock();
 
     // Timer hasn't been stopped prior to executing the request
     verify(context, never()).stop();
@@ -99,14 +99,14 @@ class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
     verify(context, timeout(200).times(1)).stop();
   }
 
-  @Test
   @SuppressWarnings("unchecked")
+  @Test
   void timerIsStoppedCorrectlyWithProvidedFutureCallbackFailed() throws Exception {
     // There should be nothing listening on this port
     HttpHost host = HttpHost.create(String.format("http://127.0.0.1:%d", findAvailableLocalPort()));
     HttpGet get = new HttpGet("/?q=something");
 
-    FutureCallback<HttpResponse> futureCallback = mock(FutureCallback.class);
+    FutureCallback<HttpResponse> futureCallback = mock();
 
     // Timer hasn't been stopped prior to executing the request
     verify(context, never()).stop();
@@ -118,7 +118,7 @@ class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
 
     try {
       responseFuture.get(20, TimeUnit.SECONDS);
-      fail("This should fail as the client should not be able to connect");
+      Assertions.fail("This should fail as the client should not be able to connect");
     } catch (Exception e) {
       // Ignore
     }
diff --git a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java
index 2e09143..ed7927a 100644
--- a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java
+++ b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java
@@ -17,7 +17,7 @@ import org.apache.http.client.methods.HttpRequestWrapper;
 import org.apache.http.client.utils.URIUtils;
 import org.junit.jupiter.api.Test;
 
-class HttpClientMetricNameStrategiesTest {
+final class HttpClientMetricNameStrategiesTest {
 
   @Test
   void methodOnlyWithName() {
diff --git a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java
index 5e33b2f..b4570e8 100644
--- a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java
+++ b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManagerTest.java
@@ -3,16 +3,17 @@ package io.dropwizard.metrics5.httpclient;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.entry;
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.atLeast;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
 
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import org.junit.jupiter.api.Test;
 import org.mockito.ArgumentCaptor;
-import org.mockito.Mockito;
 
-class InstrumentedHttpClientConnectionManagerTest {
+final class InstrumentedHttpClientConnectionManagerTest {
   private final MetricRegistry metricRegistry = new MetricRegistry();
 
   @Test
@@ -37,7 +38,7 @@ class InstrumentedHttpClientConnectionManagerTest {
 
   @Test
   void configurableViaBuilder() {
-    final MetricRegistry registry = Mockito.mock(MetricRegistry.class);
+    final MetricRegistry registry = mock();
 
     InstrumentedHttpClientConnectionManager.builder(registry)
         .name("some-name")
@@ -46,7 +47,7 @@ class InstrumentedHttpClientConnectionManagerTest {
         .close();
 
     ArgumentCaptor<MetricName> argumentCaptor = ArgumentCaptor.forClass(MetricName.class);
-    Mockito.verify(registry, Mockito.atLeast(1)).registerGauge(argumentCaptor.capture(), any());
-    assertTrue(argumentCaptor.getValue().getKey().contains("some-other-name"));
+    verify(registry, atLeast(1)).registerGauge(argumentCaptor.capture(), any());
+    assertThat(argumentCaptor.getValue().getKey().contains("some-other-name")).isTrue();
   }
 }
diff --git a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java
index abaa84b..e5c7259 100644
--- a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java
+++ b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java
@@ -1,7 +1,6 @@
 package io.dropwizard.metrics5.httpclient;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
@@ -19,13 +18,13 @@ import org.apache.http.HttpRequest;
 import org.apache.http.NoHttpResponseException;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.methods.HttpGet;
+import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedHttpClientsTest {
-  private final HttpClientMetricNameStrategy metricNameStrategy =
-      mock(HttpClientMetricNameStrategy.class);
-  private final MetricRegistryListener registryListener = mock(MetricRegistryListener.class);
+final class InstrumentedHttpClientsTest {
+  private final HttpClientMetricNameStrategy metricNameStrategy = mock();
+  private final MetricRegistryListener registryListener = mock();
   private final MetricRegistry metricRegistry = new MetricRegistry();
   private final HttpClient client =
       InstrumentedHttpClients.custom(metricRegistry, metricNameStrategy)
@@ -67,7 +66,7 @@ class InstrumentedHttpClientsTest {
 
     try {
       client.execute(get);
-      fail();
+      Assertions.fail();
     } catch (NoHttpResponseException expected) {
       assertThat(metricRegistry.getMeters()).containsKey(MetricName.build("exception"));
     } finally {
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/HttpClientMetricNameStrategiesTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/HttpClientMetricNameStrategiesTest.java
index 848b025..67741ec 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/HttpClientMetricNameStrategiesTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/HttpClientMetricNameStrategiesTest.java
@@ -16,7 +16,7 @@ import org.apache.hc.core5.http.message.HttpRequestWrapper;
 import org.apache.hc.core5.net.URIBuilder;
 import org.junit.jupiter.api.Test;
 
-class HttpClientMetricNameStrategiesTest {
+final class HttpClientMetricNameStrategiesTest {
 
   @Test
   void methodOnlyWithName() {
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java
index 78095dc..24fa03b 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java
@@ -3,16 +3,17 @@ package io.dropwizard.metrics5.httpclient5;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.entry;
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.atLeast;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
 
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import org.junit.jupiter.api.Test;
 import org.mockito.ArgumentCaptor;
-import org.mockito.Mockito;
 
-class InstrumentedAsyncClientConnectionManagerTest {
+final class InstrumentedAsyncClientConnectionManagerTest {
   private final MetricRegistry metricRegistry = new MetricRegistry();
 
   @Test
@@ -44,7 +45,7 @@ class InstrumentedAsyncClientConnectionManagerTest {
 
   @Test
   void configurableViaBuilder() {
-    final MetricRegistry registry = Mockito.mock(MetricRegistry.class);
+    final MetricRegistry registry = mock();
 
     InstrumentedAsyncClientConnectionManager.builder(registry)
         .name("some-name")
@@ -53,7 +54,7 @@ class InstrumentedAsyncClientConnectionManagerTest {
         .close();
 
     ArgumentCaptor<MetricName> argumentCaptor = ArgumentCaptor.forClass(MetricName.class);
-    Mockito.verify(registry, Mockito.atLeast(1)).registerGauge(argumentCaptor.capture(), any());
-    assertTrue(argumentCaptor.getValue().getKey().contains("some-other-name"));
+    verify(registry, atLeast(1)).registerGauge(argumentCaptor.capture(), any());
+    assertThat(argumentCaptor.getValue().getKey().contains("some-other-name")).isTrue();
   }
 }
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java
index ebabd69..b67225a 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java
@@ -1,8 +1,8 @@
 package io.dropwizard.metrics5.httpclient5;
 
+import static java.nio.charset.StandardCharsets.US_ASCII;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.awaitility.Awaitility.await;
-import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.atLeastOnce;
@@ -18,7 +18,6 @@ import io.dropwizard.metrics5.MetricRegistryListener;
 import io.dropwizard.metrics5.Timer;
 import java.io.IOException;
 import java.net.InetSocketAddress;
-import java.nio.charset.StandardCharsets;
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
@@ -31,6 +30,7 @@ import org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager;
 import org.apache.hc.core5.concurrent.FutureCallback;
 import org.apache.hc.core5.http.ConnectionClosedException;
 import org.apache.hc.core5.http.HttpRequest;
+import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
@@ -39,7 +39,7 @@ import org.mockito.Mock;
 import org.mockito.junit.jupiter.MockitoExtension;
 
 @ExtendWith(MockitoExtension.class)
-class InstrumentedHttpAsyncClientsTest {
+final class InstrumentedHttpAsyncClientsTest {
 
   @Mock private HttpClientMetricNameStrategy metricNameStrategy;
   @Mock private MetricRegistryListener registryListener;
@@ -83,7 +83,7 @@ class InstrumentedHttpAsyncClientsTest {
         exchange -> {
           exchange.sendResponseHeaders(200, 0L);
           exchange.setStreams(null, null);
-          exchange.getResponseBody().write("TEST".getBytes(StandardCharsets.US_ASCII));
+          exchange.getResponseBody().write("TEST".getBytes(US_ASCII));
           exchange.close();
         });
     httpServer.start();
@@ -101,12 +101,12 @@ class InstrumentedHttpAsyncClientsTest {
 
               @Override
               public void failed(Exception ex) {
-                fail();
+                Assertions.fail();
               }
 
               @Override
               public void cancelled() {
-                fail();
+                Assertions.fail();
               }
             });
     responseFuture.get(1L, TimeUnit.SECONDS);
@@ -144,7 +144,7 @@ class InstrumentedHttpAsyncClientsTest {
               new FutureCallback<SimpleHttpResponse>() {
                 @Override
                 public void completed(SimpleHttpResponse result) {
-                  fail();
+                  Assertions.fail();
                 }
 
                 @Override
@@ -154,13 +154,13 @@ class InstrumentedHttpAsyncClientsTest {
 
                 @Override
                 public void cancelled() {
-                  fail();
+                  Assertions.fail();
                 }
               });
       countDownLatch.await(5, TimeUnit.SECONDS);
       responseFuture.get(5, TimeUnit.SECONDS);
 
-      fail();
+      Assertions.fail();
     } catch (ExecutionException e) {
       assertThat(e).hasCauseInstanceOf(ConnectionClosedException.class);
       await()
@@ -193,7 +193,7 @@ class InstrumentedHttpAsyncClientsTest {
           exchange -> {
             exchange.sendResponseHeaders(200, 0L);
             exchange.setStreams(null, null);
-            exchange.getResponseBody().write("TEST".getBytes(StandardCharsets.US_ASCII));
+            exchange.getResponseBody().write("TEST".getBytes(US_ASCII));
             exchange.close();
           });
       httpServer.start();
@@ -211,12 +211,12 @@ class InstrumentedHttpAsyncClientsTest {
 
                 @Override
                 public void failed(Exception ex) {
-                  fail();
+                  Assertions.fail();
                 }
 
                 @Override
                 public void cancelled() {
-                  fail();
+                  Assertions.fail();
                 }
               });
       responseFuture.get(1L, TimeUnit.SECONDS);
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java
index bddad25..4f63d65 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManagerTest.java
@@ -3,16 +3,17 @@ package io.dropwizard.metrics5.httpclient5;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.entry;
 import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertTrue;
 import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.Mockito.atLeast;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
 
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import org.junit.jupiter.api.Test;
 import org.mockito.ArgumentCaptor;
-import org.mockito.Mockito;
 
-class InstrumentedHttpClientConnectionManagerTest {
+final class InstrumentedHttpClientConnectionManagerTest {
   private final MetricRegistry metricRegistry = new MetricRegistry();
 
   @Test
@@ -42,7 +43,7 @@ class InstrumentedHttpClientConnectionManagerTest {
 
   @Test
   void configurableViaBuilder() {
-    final MetricRegistry registry = Mockito.mock(MetricRegistry.class);
+    final MetricRegistry registry = mock();
 
     InstrumentedHttpClientConnectionManager.builder(registry)
         .name("some-name")
@@ -51,7 +52,7 @@ class InstrumentedHttpClientConnectionManagerTest {
         .close();
 
     ArgumentCaptor<MetricName> argumentCaptor = ArgumentCaptor.forClass(MetricName.class);
-    Mockito.verify(registry, Mockito.atLeast(1)).registerGauge(argumentCaptor.capture(), any());
-    assertTrue(argumentCaptor.getValue().getKey().contains("some-other-name"));
+    verify(registry, atLeast(1)).registerGauge(argumentCaptor.capture(), any());
+    assertThat(argumentCaptor.getValue().getKey().contains("some-other-name")).isTrue();
   }
 }
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java
index 86a450e..46cdc5e 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java
@@ -1,7 +1,6 @@
 package io.dropwizard.metrics5.httpclient5;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
@@ -19,13 +18,13 @@ import org.apache.hc.client5.http.classic.HttpClient;
 import org.apache.hc.client5.http.classic.methods.HttpGet;
 import org.apache.hc.core5.http.HttpRequest;
 import org.apache.hc.core5.http.NoHttpResponseException;
+import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedHttpClientsTest {
-  private final HttpClientMetricNameStrategy metricNameStrategy =
-      mock(HttpClientMetricNameStrategy.class);
-  private final MetricRegistryListener registryListener = mock(MetricRegistryListener.class);
+final class InstrumentedHttpClientsTest {
+  private final HttpClientMetricNameStrategy metricNameStrategy = mock();
+  private final MetricRegistryListener registryListener = mock();
   private final MetricRegistry metricRegistry = new MetricRegistry();
   private final HttpClient client =
       InstrumentedHttpClients.custom(metricRegistry, metricNameStrategy)
@@ -67,7 +66,7 @@ class InstrumentedHttpClientsTest {
 
     try {
       client.execute(get);
-      fail();
+      Assertions.fail();
     } catch (NoHttpResponseException expected) {
       assertThat(metricRegistry.getMeters()).containsKey(MetricName.build("exception"));
     } finally {
diff --git a/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java b/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java
index 3d674ce..1e2cf3a 100644
--- a/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java
+++ b/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.influxdb;
 
 import static io.dropwizard.metrics5.MetricAttribute.*;
 
+import com.google.common.collect.ImmutableSet;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Gauge;
@@ -15,7 +16,6 @@ import io.dropwizard.metrics5.MetricRegistry;
 import io.dropwizard.metrics5.Snapshot;
 import io.dropwizard.metrics5.Timer;
 import java.io.IOException;
-import java.util.Collections;
 import java.util.Map;
 import java.util.Set;
 import java.util.SortedMap;
@@ -78,7 +78,7 @@ public class InfluxDbReporter extends GarbageFreeScheduledReporter {
       this.filter = MetricFilter.ALL;
       this.executor = null;
       this.shutdownExecutorOnStop = true;
-      this.disabledMetricAttributes = Collections.emptySet();
+      this.disabledMetricAttributes = ImmutableSet.of();
     }
 
     /**
@@ -196,7 +196,7 @@ public class InfluxDbReporter extends GarbageFreeScheduledReporter {
     }
   }
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(InfluxDbReporter.class);
+  private static final Logger LOG = LoggerFactory.getLogger(InfluxDbReporter.class);
   private static final String VALUE = "value";
 
   private final Clock clock;
@@ -279,12 +279,12 @@ public class InfluxDbReporter extends GarbageFreeScheduledReporter {
       }
       sender.flush();
     } catch (IOException e) {
-      LOGGER.warn("Unable to report to InfluxDb", sender, e);
+      LOG.warn("Unable to report to InfluxDb", sender, e);
     } finally {
       try {
         sender.disconnect();
       } catch (IOException e) {
-        LOGGER.warn("Error disconnecting InfluxDb", sender, e);
+        LOG.warn("Error disconnecting InfluxDb", sender, e);
       }
     }
   }
@@ -297,7 +297,7 @@ public class InfluxDbReporter extends GarbageFreeScheduledReporter {
       try {
         sender.close();
       } catch (IOException e) {
-        LOGGER.debug("Error disconnecting from InfluxDb", e);
+        LOG.debug("Error disconnecting from InfluxDb", e);
       }
     }
   }
diff --git a/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpSender.java b/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpSender.java
index 77be29b..0a75252 100644
--- a/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpSender.java
+++ b/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpSender.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.influxdb;
 
+import static java.util.Objects.requireNonNull;
+
 import java.io.IOException;
 import java.net.InetSocketAddress;
 import java.nio.ByteBuffer;
@@ -9,7 +11,6 @@ import java.nio.charset.Charset;
 import java.nio.charset.CharsetEncoder;
 import java.nio.charset.CoderResult;
 import java.nio.charset.CodingErrorAction;
-import java.util.Objects;
 
 public class InfluxDbUdpSender implements InfluxDbSender {
 
@@ -42,7 +43,7 @@ public class InfluxDbUdpSender implements InfluxDbSender {
    * @param address the address of the InfluxDb server
    */
   public InfluxDbUdpSender(InetSocketAddress address) {
-    this.address = Objects.requireNonNull(address);
+    this.address = requireNonNull(address);
     charBuf = CharBuffer.allocate(mtu * 2);
     byteBuf = ByteBuffer.allocate(mtu * 2);
   }
diff --git a/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbLineBuilderAssumptionsTest.java b/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbLineBuilderAssumptionsTest.java
index 75af4ca..3cb0035 100644
--- a/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbLineBuilderAssumptionsTest.java
+++ b/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbLineBuilderAssumptionsTest.java
@@ -5,7 +5,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 import io.dropwizard.metrics5.MetricAttribute;
 import org.junit.jupiter.api.Test;
 
-class InfluxDbLineBuilderAssumptionsTest {
+final class InfluxDbLineBuilderAssumptionsTest {
 
   @Test
   void ensureMetricAttributeCodesAreSafeFieldKeys() {
diff --git a/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java b/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java
index d50c1fa..98f5c99 100644
--- a/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java
+++ b/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbReporterTest.java
@@ -11,6 +11,7 @@ import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.verifyNoMoreInteractions;
 import static org.mockito.Mockito.when;
 
+import com.google.common.collect.ImmutableSet;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Gauge;
@@ -25,7 +26,6 @@ import io.dropwizard.metrics5.Timer;
 import java.io.IOException;
 import java.net.UnknownHostException;
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Set;
@@ -36,16 +36,16 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 import org.mockito.InOrder;
 
-class InfluxDbReporterTest {
+final class InfluxDbReporterTest {
   private static final MetricName GAUGE = MetricName.build("gauge");
   private static final MetricName METER = MetricName.build("meter");
   private static final MetricName COUNTER = MetricName.build("counter");
 
   private final long timestamp = 1000198;
-  private final Clock clock = mock(Clock.class);
-  private final InfluxDbSender sender = mock(InfluxDbSender.class);
+  private final Clock clock = mock();
+  private final InfluxDbSender sender = mock();
   private final List<String> send = new ArrayList<>();
-  private final MetricRegistry registry = mock(MetricRegistry.class);
+  private final MetricRegistry registry = mock();
   private final InfluxDbReporter reporter =
       InfluxDbReporter.forRegistry(registry)
           .withClock(clock)
@@ -53,7 +53,7 @@ class InfluxDbReporterTest {
           .convertRatesTo(TimeUnit.SECONDS)
           .convertDurationsTo(TimeUnit.MILLISECONDS)
           .filter(MetricFilter.ALL)
-          .disabledMetricAttributes(Collections.emptySet())
+          .disabledMetricAttributes(ImmutableSet.of())
           .build(sender);
 
   private final InfluxDbReporter minuteRateReporter =
@@ -63,7 +63,7 @@ class InfluxDbReporterTest {
           .convertRatesTo(TimeUnit.MINUTES)
           .convertDurationsTo(TimeUnit.MILLISECONDS)
           .filter(MetricFilter.ALL)
-          .disabledMetricAttributes(Collections.emptySet())
+          .disabledMetricAttributes(ImmutableSet.of())
           .build(sender);
 
   @BeforeEach
@@ -197,7 +197,7 @@ class InfluxDbReporterTest {
 
   @Test
   void reportsCounters() throws Exception {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
 
     reporter.report(map(), map(COUNTER, counter), map(), map(), map());
@@ -214,11 +214,11 @@ class InfluxDbReporterTest {
 
   @Test
   void reportsHistograms() throws Exception {
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSum()).thenReturn(12L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
@@ -249,7 +249,7 @@ class InfluxDbReporterTest {
 
   @Test
   void reportsMeters() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
@@ -274,7 +274,7 @@ class InfluxDbReporterTest {
 
   @Test
   void reportsMetersInMinutes() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
@@ -300,7 +300,7 @@ class InfluxDbReporterTest {
 
   @Test
   void reportsTimers() throws Exception {
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
     when(timer.getSum()).thenReturn(6L);
     when(timer.getMeanRate()).thenReturn(2.0);
@@ -308,7 +308,7 @@ class InfluxDbReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -360,7 +360,7 @@ class InfluxDbReporterTest {
 
   @Test
   void disabledMetricsAttribute() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getSum()).thenReturn(6L);
     when(meter.getOneMinuteRate()).thenReturn(2.0);
@@ -368,7 +368,7 @@ class InfluxDbReporterTest {
     when(meter.getFifteenMinuteRate()).thenReturn(4.0);
     when(meter.getMeanRate()).thenReturn(5.0);
 
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(11L);
 
     Set<MetricAttribute> disabledMetricAttributes =
diff --git a/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java b/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java
index 29d4ddf..1f5a23a 100644
--- a/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java
+++ b/metrics-influxdb/src/test/java/io/dropwizard/metrics5/influxdb/InfluxDbUdpTest.java
@@ -3,6 +3,7 @@ package io.dropwizard.metrics5.influxdb;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.any;
 import static org.mockito.Mockito.doAnswer;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
@@ -14,15 +15,14 @@ import java.util.ArrayList;
 import java.util.List;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
-import org.mockito.Mockito;
 
-class InfluxDbUdpTest {
+final class InfluxDbUdpTest {
 
   private final String host = "example.com";
   private final int port = 1234;
 
   private InfluxDbUdpSender influxdbUdp;
-  private final DatagramChannel datagramChannel = Mockito.mock(DatagramChannel.class);
+  private final DatagramChannel datagramChannel = mock();
   private final List<byte[]> sent = new ArrayList<>();
 
   @BeforeEach
diff --git a/metrics-jakarta-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java b/metrics-jakarta-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java
index 3a776cc..459acf7 100644
--- a/metrics-jakarta-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java
+++ b/metrics-jakarta-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.servlet;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 
+import com.google.common.base.Strings;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -64,7 +65,7 @@ public abstract class AbstractInstrumentedFilter implements Filter {
     final MetricRegistry metricsRegistry = getMetricsFactory(filterConfig);
 
     String metricName = filterConfig.getInitParameter(METRIC_PREFIX);
-    if (metricName == null || metricName.isEmpty()) {
+    if (Strings.isNullOrEmpty(metricName)) {
       metricName = getClass().getName();
     }
 
diff --git a/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java b/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java
index d6768d4..163e420 100644
--- a/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java
+++ b/metrics-jakarta-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java
@@ -9,8 +9,8 @@ import jakarta.servlet.ServletContext;
 import jakarta.servlet.ServletContextEvent;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedFilterContextListenerTest {
-  private final MetricRegistry registry = mock(MetricRegistry.class);
+final class InstrumentedFilterContextListenerTest {
+  private final MetricRegistry registry = mock();
   private final InstrumentedFilterContextListener listener =
       new InstrumentedFilterContextListener() {
         @Override
@@ -21,9 +21,9 @@ class InstrumentedFilterContextListenerTest {
 
   @Test
   void injectsTheMetricRegistryIntoTheServletContext() {
-    final ServletContext context = mock(ServletContext.class);
+    final ServletContext context = mock();
 
-    final ServletContextEvent event = mock(ServletContextEvent.class);
+    final ServletContextEvent event = mock();
     when(event.getServletContext()).thenReturn(context);
 
     listener.contextInitialized(event);
diff --git a/metrics-jakarta-servlet6/src/main/java/io/dropwizard/metrics5/servlet6/AbstractInstrumentedFilter.java b/metrics-jakarta-servlet6/src/main/java/io/dropwizard/metrics5/servlet6/AbstractInstrumentedFilter.java
index 7473d89..8057b76 100644
--- a/metrics-jakarta-servlet6/src/main/java/io/dropwizard/metrics5/servlet6/AbstractInstrumentedFilter.java
+++ b/metrics-jakarta-servlet6/src/main/java/io/dropwizard/metrics5/servlet6/AbstractInstrumentedFilter.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.servlet6;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 
+import com.google.common.base.Strings;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -64,7 +65,7 @@ public abstract class AbstractInstrumentedFilter implements Filter {
     final MetricRegistry metricsRegistry = getMetricsFactory(filterConfig);
 
     String metricName = filterConfig.getInitParameter(METRIC_PREFIX);
-    if (metricName == null || metricName.isEmpty()) {
+    if (Strings.isNullOrEmpty(metricName)) {
       metricName = getClass().getName();
     }
 
diff --git a/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java b/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java
index af9fc44..0f00187 100644
--- a/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java
+++ b/metrics-jakarta-servlet6/src/test/java/io/dropwizard/metrics5/servlet6/InstrumentedFilterContextListenerTest.java
@@ -9,8 +9,8 @@ import jakarta.servlet.ServletContext;
 import jakarta.servlet.ServletContextEvent;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedFilterContextListenerTest {
-  private final MetricRegistry registry = mock(MetricRegistry.class);
+final class InstrumentedFilterContextListenerTest {
+  private final MetricRegistry registry = mock();
   private final InstrumentedFilterContextListener listener =
       new InstrumentedFilterContextListener() {
         @Override
@@ -21,9 +21,9 @@ class InstrumentedFilterContextListenerTest {
 
   @Test
   void injectsTheMetricRegistryIntoTheServletContext() {
-    final ServletContext context = mock(ServletContext.class);
+    final ServletContext context = mock();
 
-    final ServletContextEvent event = mock(ServletContextEvent.class);
+    final ServletContextEvent event = mock();
     when(event.getServletContext()).thenReturn(context);
 
     listener.contextInitialized(event);
diff --git a/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java b/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java
index a6081a8..440debd 100644
--- a/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java
+++ b/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java
@@ -99,7 +99,7 @@ public class HealthCheckServlet extends HttpServlet {
     super.init(config);
 
     final ServletContext context = config.getServletContext();
-    if (null == registry) {
+    if (registry == null) {
       final Object registryAttr = context.getAttribute(HEALTH_CHECK_REGISTRY);
       if (registryAttr instanceof HealthCheckRegistry) {
         this.registry = (HealthCheckRegistry) registryAttr;
diff --git a/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java b/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java
index b8a0e3c..a365885 100644
--- a/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java
+++ b/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java
@@ -131,7 +131,7 @@ public class MetricsServlet extends HttpServlet {
     super.init(config);
 
     final ServletContext context = config.getServletContext();
-    if (null == registry) {
+    if (registry == null) {
       final Object registryAttr = context.getAttribute(METRICS_REGISTRY);
       if (registryAttr instanceof MetricRegistry) {
         this.registry = (MetricRegistry) registryAttr;
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletExclusionTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletExclusionTest.java
index b71f2fa..92530f2 100755
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletExclusionTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletExclusionTest.java
@@ -9,7 +9,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class AdminServletExclusionTest extends AbstractServletTest {
+final class AdminServletExclusionTest extends AbstractServletTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final HealthCheckRegistry healthCheckRegistry = new HealthCheckRegistry();
 
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java
index 8fcdf8a..77b50ba 100755
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java
@@ -9,7 +9,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class AdminServletTest extends AbstractServletTest {
+final class AdminServletTest extends AbstractServletTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final HealthCheckRegistry healthCheckRegistry = new HealthCheckRegistry();
 
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java
index ebe2c81..424a05e 100755
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java
@@ -9,7 +9,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class AdminServletUriTest extends AbstractServletTest {
+final class AdminServletUriTest extends AbstractServletTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final HealthCheckRegistry healthCheckRegistry = new HealthCheckRegistry();
 
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java
index 1c63a41..2df4050 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java
@@ -7,7 +7,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class CpuProfileServletTest extends AbstractServletTest {
+final class CpuProfileServletTest extends AbstractServletTest {
 
   @Override
   protected void setUp(ServletTester tester) {
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
index f8f0a87..e8208b0 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
@@ -1,10 +1,9 @@
 package io.dropwizard.metrics5.servlets;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -27,7 +26,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class HealthCheckServletTest extends AbstractServletTest {
+final class HealthCheckServletTest extends AbstractServletTest {
 
   private static final ZonedDateTime FIXED_TIME = ZonedDateTime.now();
 
@@ -95,9 +94,8 @@ class HealthCheckServletTest extends AbstractServletTest {
     assertThat(response.get(HttpHeader.CONTENT_TYPE)).isEqualTo("application/json");
     assertThat(response.getContent())
         .isEqualTo(
-            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\""
-                + EXPECTED_TIMESTAMP
-                + "\"}}");
+            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}",
+            EXPECTED_TIMESTAMP);
   }
 
   @Test
@@ -111,9 +109,8 @@ class HealthCheckServletTest extends AbstractServletTest {
     assertThat(response.get(HttpHeader.CONTENT_TYPE)).isEqualTo("application/json");
     assertThat(response.getContent())
         .isEqualTo(
-            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\""
-                + EXPECTED_TIMESTAMP
-                + "\"}}");
+            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}",
+            EXPECTED_TIMESTAMP);
   }
 
   @Test
@@ -168,15 +165,8 @@ class HealthCheckServletTest extends AbstractServletTest {
     assertThat(response.getContent())
         .isEqualTo(
             String.format(
-                "{%n"
-                    + "  \"fun\" : {%n"
-                    + "    \"healthy\" : true,%n"
-                    + "    \"message\" : \"foo bar 123\",%n"
-                    + "    \"duration\" : 0,%n"
-                    + "    \"timestamp\" : \""
-                    + EXPECTED_TIMESTAMP
-                    + "\""
-                    + "%n  }%n}"));
+                "{%n  \"fun\" : {%n    \"healthy\" : true,%n    \"message\" : \"foo bar 123\",%n    \"duration\" : 0,%n    \"timestamp\" : \"%s\"%n  }%n}",
+                EXPECTED_TIMESTAMP));
   }
 
   private static HealthCheck.Result healthyResultWithMessage(String message) {
@@ -197,23 +187,23 @@ class HealthCheckServletTest extends AbstractServletTest {
 
   @Test
   void constructorWithRegistryAsArgumentIsUsedInPreferenceOverServletConfig() throws Exception {
-    final HealthCheckRegistry healthCheckRegistry = mock(HealthCheckRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final HealthCheckRegistry healthCheckRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
 
     final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(healthCheckRegistry);
     healthCheckServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
+    verify(servletConfig).getServletContext();
     verify(servletContext, never()).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNull() throws Exception {
-    final HealthCheckRegistry healthCheckRegistry = mock(HealthCheckRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final HealthCheckRegistry healthCheckRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
     when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
         .thenReturn(healthCheckRegistry);
@@ -221,32 +211,32 @@ class HealthCheckServletTest extends AbstractServletTest {
     final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(null);
     healthCheckServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
-    verify(servletContext, times(1)).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);
+    verify(servletConfig).getServletContext();
+    verify(servletContext).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNullButWrongTypeInContext()
       throws Exception {
-    assertThrows(
-        ServletException.class,
-        () -> {
-          final ServletContext servletContext = mock(ServletContext.class);
-          final ServletConfig servletConfig = mock(ServletConfig.class);
-          when(servletConfig.getServletContext()).thenReturn(servletContext);
-          when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
-              .thenReturn("IRELLEVANT_STRING");
-
-          final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(null);
-          healthCheckServlet.init(servletConfig);
-        });
+    assertThatThrownBy(
+            () -> {
+              final ServletContext servletContext = mock(ServletContext.class);
+              final ServletConfig servletConfig = mock(ServletConfig.class);
+              when(servletConfig.getServletContext()).thenReturn(servletContext);
+              when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
+                  .thenReturn("IRELLEVANT_STRING");
+
+              final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(null);
+              healthCheckServlet.init(servletConfig);
+            })
+        .isInstanceOf(ServletException.class);
   }
 
   @Test
   void constructorWithObjectMapperAsArgumentUsesServletConfigWhenNullButWrongTypeInContext()
       throws Exception {
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
     when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
         .thenReturn(registry);
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java
index 2e1d334..f30c0b9 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java
@@ -17,8 +17,8 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class MetricsServletContextListenerTest extends AbstractServletTest {
-  private final Clock clock = mock(Clock.class);
+final class MetricsServletContextListenerTest extends AbstractServletTest {
+  private final Clock clock = mock();
   private final MetricRegistry registry = new MetricRegistry();
   private final String allowedOrigin = "some.other.origin";
 
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
index 08d39bc..d74900f 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
@@ -1,11 +1,10 @@
 package io.dropwizard.metrics5.servlets;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -25,8 +24,8 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class MetricsServletTest extends AbstractServletTest {
-  private final Clock clock = mock(Clock.class);
+final class MetricsServletTest extends AbstractServletTest {
+  private final Clock clock = mock();
   private final MetricRegistry registry = new MetricRegistry();
   private ServletTester tester;
 
@@ -130,22 +129,8 @@ class MetricsServletTest extends AbstractServletTest {
     assertThat(response.get("Access-Control-Allow-Origin")).isEqualTo("*");
     assertThat(response.getContent())
         .isEqualTo(
-            callbackParamVal
-                + "({"
-                + "\"version\":\"5.0.0\","
-                + "\"gauges\":{"
-                + "\"g1\":{\"value\":100}"
-                + "},"
-                + "\"counters\":{"
-                + "\"c\":{\"count\":1}"
-                + "},"
-                + "\"histograms\":{"
-                + "\"h\":{\"count\":1,\"max\":1,\"mean\":1.0,\"min\":1,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0}"
-                + "},"
-                + "\"meters\":{"
-                + "\"m\":{\"count\":1,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":3333333.3333333335,\"units\":\"events/second\"}},\"timers\":{\"t\":{\"count\":1,\"max\":1.0,\"mean\":1.0,\"min\":1.0,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":1.0E7,\"duration_units\":\"seconds\",\"rate_units\":\"calls/second\"}"
-                + "}"
-                + "})");
+            "%s({\"version\":\"5.0.0\",\"gauges\":{\"g1\":{\"value\":100}},\"counters\":{\"c\":{\"count\":1}},\"histograms\":{\"h\":{\"count\":1,\"max\":1,\"mean\":1.0,\"min\":1,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0}},\"meters\":{\"m\":{\"count\":1,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":3333333.3333333335,\"units\":\"events/second\"}},\"timers\":{\"t\":{\"count\":1,\"max\":1.0,\"mean\":1.0,\"min\":1.0,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":1.0E7,\"duration_units\":\"seconds\",\"rate_units\":\"calls/second\"}}})",
+            callbackParamVal);
     assertThat(response.get(HttpHeader.CONTENT_TYPE)).isEqualTo("application/json");
   }
 
@@ -224,48 +209,47 @@ class MetricsServletTest extends AbstractServletTest {
 
   @Test
   void constructorWithRegistryAsArgumentIsUsedInPreferenceOverServletConfig() throws Exception {
-    final MetricRegistry metricRegistry = mock(MetricRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final MetricRegistry metricRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
 
     final MetricsServlet metricsServlet = new MetricsServlet(metricRegistry);
     metricsServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
-    verify(servletContext, never()).getAttribute(eq(MetricsServlet.METRICS_REGISTRY));
+    verify(servletConfig).getServletContext();
+    verify(servletContext, never()).getAttribute(MetricsServlet.METRICS_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNull() throws Exception {
-    final MetricRegistry metricRegistry = mock(MetricRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final MetricRegistry metricRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
-    when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
-        .thenReturn(metricRegistry);
+    when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY)).thenReturn(metricRegistry);
 
     final MetricsServlet metricsServlet = new MetricsServlet(null);
     metricsServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
-    verify(servletContext, times(1)).getAttribute(eq(MetricsServlet.METRICS_REGISTRY));
+    verify(servletConfig).getServletContext();
+    verify(servletContext).getAttribute(MetricsServlet.METRICS_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNullButWrongTypeInContext()
       throws Exception {
-    assertThrows(
-        ServletException.class,
-        () -> {
-          final ServletContext servletContext = mock(ServletContext.class);
-          final ServletConfig servletConfig = mock(ServletConfig.class);
-          when(servletConfig.getServletContext()).thenReturn(servletContext);
-          when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
-              .thenReturn("IRELLEVANT_STRING");
-
-          final MetricsServlet metricsServlet = new MetricsServlet(null);
-          metricsServlet.init(servletConfig);
-        });
+    assertThatThrownBy(
+            () -> {
+              final ServletContext servletContext = mock(ServletContext.class);
+              final ServletConfig servletConfig = mock(ServletConfig.class);
+              when(servletConfig.getServletContext()).thenReturn(servletContext);
+              when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
+                  .thenReturn("IRELLEVANT_STRING");
+
+              final MetricsServlet metricsServlet = new MetricsServlet(null);
+              metricsServlet.init(servletConfig);
+            })
+        .isInstanceOf(ServletException.class);
   }
 }
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java
index 72e4d9f..56bb1ee 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java
@@ -7,7 +7,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class PingServletTest extends AbstractServletTest {
+final class PingServletTest extends AbstractServletTest {
   @Override
   protected void setUp(ServletTester tester) {
     tester.addServlet(PingServlet.class, "/ping");
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java
index 3b92675..5bbb7b1 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java
@@ -7,7 +7,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class ThreadDumpServletTest extends AbstractServletTest {
+final class ThreadDumpServletTest extends AbstractServletTest {
   @Override
   protected void setUp(ServletTester tester) {
     tester.addServlet(ThreadDumpServlet.class, "/threads");
diff --git a/metrics-jcache/src/main/java/io/dropwizard/metrics5/jcache/JCacheGaugeSet.java b/metrics-jcache/src/main/java/io/dropwizard/metrics5/jcache/JCacheGaugeSet.java
index 946c66f..9810386 100644
--- a/metrics-jcache/src/main/java/io/dropwizard/metrics5/jcache/JCacheGaugeSet.java
+++ b/metrics-jcache/src/main/java/io/dropwizard/metrics5/jcache/JCacheGaugeSet.java
@@ -1,6 +1,7 @@
 package io.dropwizard.metrics5.jcache;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
+import static java.util.Collections.unmodifiableMap;
 
 import io.dropwizard.metrics5.Metric;
 import io.dropwizard.metrics5.MetricName;
@@ -9,7 +10,6 @@ import io.dropwizard.metrics5.jvm.JmxAttributeGauge;
 import java.lang.management.ManagementFactory;
 import java.lang.reflect.Method;
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Locale;
@@ -33,7 +33,7 @@ public class JCacheGaugeSet implements MetricSet {
   private static final String M_BEAN_COORDINATES =
       "javax.cache:type=CacheStatistics,CacheManager=*,Cache=*";
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(JCacheGaugeSet.class);
+  private static final Logger LOG = LoggerFactory.getLogger(JCacheGaugeSet.class);
 
   @Override
   public Map<MetricName, Metric> getMetrics() {
@@ -52,7 +52,7 @@ public class JCacheGaugeSet implements MetricSet {
       }
     }
 
-    return Collections.unmodifiableMap(gauges);
+    return unmodifiableMap(gauges);
   }
 
   private Set<ObjectInstance> getCacheBeans() {
@@ -60,7 +60,7 @@ public class JCacheGaugeSet implements MetricSet {
       return ManagementFactory.getPlatformMBeanServer()
           .queryMBeans(ObjectName.getInstance(M_BEAN_COORDINATES), null);
     } catch (MalformedObjectNameException e) {
-      LOGGER.error("Unable to retrieve {}. Are JCache statistics enabled?", M_BEAN_COORDINATES);
+      LOG.error("Unable to retrieve {}. Are JCache statistics enabled?", M_BEAN_COORDINATES);
       throw new RuntimeException(e);
     }
   }
diff --git a/metrics-jcache/src/test/java/JCacheGaugeSetTest.java b/metrics-jcache/src/test/java/JCacheGaugeSetTest.java
index cf3e28d..cf0f223 100644
--- a/metrics-jcache/src/test/java/JCacheGaugeSetTest.java
+++ b/metrics-jcache/src/test/java/JCacheGaugeSetTest.java
@@ -11,7 +11,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class JCacheGaugeSetTest {
+final class JCacheGaugeSetTest {
 
   private MetricRegistry registry;
   private Cache<Object, Object> myCache;
@@ -67,11 +67,11 @@ class JCacheGaugeSetTest {
 
     this.myCache.remove("woo2");
     assertThat((Float) registry.getGauges().get(myCache.resolve("average-get-time")).getValue())
-        .isGreaterThan(0.0f);
+        .isPositive();
     assertThat((Float) registry.getGauges().get(myCache.resolve("average-put-time")).getValue())
-        .isGreaterThan(0.0f);
+        .isPositive();
     assertThat((Float) registry.getGauges().get(myCache.resolve("average-remove-time")).getValue())
-        .isGreaterThan(0.0f);
+        .isPositive();
   }
 
   @AfterEach
diff --git a/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/strategies/DefaultNameStrategy.java b/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/strategies/DefaultNameStrategy.java
index 5f67c62..ceea60d 100644
--- a/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/strategies/DefaultNameStrategy.java
+++ b/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/strategies/DefaultNameStrategy.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5.jdbi3.strategies;
 
+import com.google.common.base.Strings;
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import org.jdbi.v3.core.extension.ExtensionMethod;
@@ -13,7 +14,7 @@ public enum DefaultNameStrategy implements StatementNameStrategy {
     @Override
     public MetricName getStatementName(StatementContext statementContext) {
       final String rawSql = statementContext.getRawSql();
-      return rawSql == null || rawSql.isEmpty() ? MetricName.build("sql.empty") : null;
+      return Strings.isNullOrEmpty(rawSql) ? MetricName.build("sql.empty") : null;
     }
   },
 
diff --git a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/BasicSqlNameStrategyTest.java b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/BasicSqlNameStrategyTest.java
index 4588a32..5378df0 100644
--- a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/BasicSqlNameStrategyTest.java
+++ b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/BasicSqlNameStrategyTest.java
@@ -8,7 +8,7 @@ import io.dropwizard.metrics5.MetricName;
 import org.jdbi.v3.core.extension.ExtensionMethod;
 import org.junit.jupiter.api.Test;
 
-class BasicSqlNameStrategyTest extends AbstractStrategyTest {
+final class BasicSqlNameStrategyTest extends AbstractStrategyTest {
 
   private final BasicSqlNameStrategy basicSqlNameStrategy = new BasicSqlNameStrategy();
 
diff --git a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java
index b8cf361..c8f74aa 100755
--- a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java
+++ b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/InstrumentedSqlLoggerTest.java
@@ -12,15 +12,15 @@ import java.util.concurrent.TimeUnit;
 import org.jdbi.v3.core.statement.StatementContext;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedSqlLoggerTest {
+final class InstrumentedSqlLoggerTest {
   @Test
   void logsExecutionTime() {
-    final MetricRegistry mockRegistry = mock(MetricRegistry.class);
-    final StatementNameStrategy mockNameStrategy = mock(StatementNameStrategy.class);
+    final MetricRegistry mockRegistry = mock();
+    final StatementNameStrategy mockNameStrategy = mock();
     final InstrumentedSqlLogger logger = new InstrumentedSqlLogger(mockRegistry, mockNameStrategy);
 
-    final StatementContext mockContext = mock(StatementContext.class);
-    final Timer mockTimer = mock(Timer.class);
+    final StatementContext mockContext = mock();
+    final Timer mockTimer = mock();
 
     final MetricName statementName = MetricName.build("my-fake-name");
     final long fakeElapsed = 1234L;
@@ -37,12 +37,12 @@ class InstrumentedSqlLoggerTest {
 
   @Test
   void logsExceptionTime() {
-    final MetricRegistry mockRegistry = mock(MetricRegistry.class);
-    final StatementNameStrategy mockNameStrategy = mock(StatementNameStrategy.class);
+    final MetricRegistry mockRegistry = mock();
+    final StatementNameStrategy mockNameStrategy = mock();
     final InstrumentedSqlLogger logger = new InstrumentedSqlLogger(mockRegistry, mockNameStrategy);
 
-    final StatementContext mockContext = mock(StatementContext.class);
-    final Timer mockTimer = mock(Timer.class);
+    final StatementContext mockContext = mock();
+    final Timer mockTimer = mock();
 
     final MetricName statementName = MetricName.build("my-fake-name");
     final long fakeElapsed = 1234L;
diff --git a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/NaiveNameStrategyTest.java b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/NaiveNameStrategyTest.java
index 7d8d115..8175106 100644
--- a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/NaiveNameStrategyTest.java
+++ b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/NaiveNameStrategyTest.java
@@ -5,7 +5,7 @@ import static org.assertj.core.api.Assertions.assertThat;
 import io.dropwizard.metrics5.MetricName;
 import org.junit.jupiter.api.Test;
 
-class NaiveNameStrategyTest extends AbstractStrategyTest {
+final class NaiveNameStrategyTest extends AbstractStrategyTest {
 
   private final NaiveNameStrategy naiveNameStrategy = new NaiveNameStrategy();
 
diff --git a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java
index efca9da..b9f4c6a 100644
--- a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java
+++ b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java
@@ -12,7 +12,7 @@ import org.jdbi.v3.core.extension.ExtensionMethod;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class SmartNameStrategyTest extends AbstractStrategyTest {
+final class SmartNameStrategyTest extends AbstractStrategyTest {
 
   private final StatementNameStrategy smartNameStrategy = new SmartNameStrategy();
   private InstrumentedTimingCollector collector;
diff --git a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java
index 20cd360..b380772 100644
--- a/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java
+++ b/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/TimedAnnotationNameStrategyTest.java
@@ -8,7 +8,7 @@ import io.dropwizard.metrics5.annotation.Timed;
 import org.jdbi.v3.core.extension.ExtensionMethod;
 import org.junit.jupiter.api.Test;
 
-class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
+final class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
 
   private final TimedAnnotationNameStrategy timedAnnotationNameStrategy =
       new TimedAnnotationNameStrategy();
@@ -44,7 +44,7 @@ class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
   }
 
   @Test
-  void testAnnotationOnMethod() throws Exception {
+  void annotationOnMethod() throws Exception {
     when(ctx.getExtensionMethod())
         .thenReturn(new ExtensionMethod(Foo.class, Foo.class.getMethod("update")));
     assertThat(timedAnnotationNameStrategy.getStatementName(ctx))
@@ -54,7 +54,7 @@ class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
   }
 
   @Test
-  void testAnnotationOnMethodWithCustomName() throws Exception {
+  void annotationOnMethodWithCustomName() throws Exception {
     when(ctx.getExtensionMethod())
         .thenReturn(new ExtensionMethod(Foo.class, Foo.class.getMethod("customUpdate")));
     assertThat(timedAnnotationNameStrategy.getStatementName(ctx))
@@ -64,7 +64,7 @@ class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
   }
 
   @Test
-  void testAnnotationOnMethodWithCustomAbsoluteName() throws Exception {
+  void annotationOnMethodWithCustomAbsoluteName() throws Exception {
     when(ctx.getExtensionMethod())
         .thenReturn(new ExtensionMethod(Foo.class, Foo.class.getMethod("absoluteUpdate")));
     assertThat(timedAnnotationNameStrategy.getStatementName(ctx))
@@ -72,7 +72,7 @@ class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
   }
 
   @Test
-  void testAnnotationOnClass() throws Exception {
+  void annotationOnClass() throws Exception {
     when(ctx.getExtensionMethod())
         .thenReturn(new ExtensionMethod(Bar.class, Bar.class.getMethod("update")));
     assertThat(timedAnnotationNameStrategy.getStatementName(ctx))
@@ -82,7 +82,7 @@ class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
   }
 
   @Test
-  void testAnnotationOnMethodAndClassWithCustomNames() throws Exception {
+  void annotationOnMethodAndClassWithCustomNames() throws Exception {
     when(ctx.getExtensionMethod())
         .thenReturn(
             new ExtensionMethod(CustomBar.class, CustomBar.class.getMethod("find", String.class)));
@@ -91,14 +91,14 @@ class TimedAnnotationNameStrategyTest extends AbstractStrategyTest {
   }
 
   @Test
-  void testNoAnnotations() throws Exception {
+  void noAnnotations() throws Exception {
     when(ctx.getExtensionMethod())
         .thenReturn(new ExtensionMethod(Dummy.class, Dummy.class.getMethod("show")));
     assertThat(timedAnnotationNameStrategy.getStatementName(ctx)).isNull();
   }
 
   @Test
-  void testNoMethod() {
+  void noMethod() {
     assertThat(timedAnnotationNameStrategy.getStatementName(ctx)).isNull();
   }
 }
diff --git a/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java b/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java
index 7116636..0d33048 100644
--- a/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java
+++ b/metrics-jersey2/src/main/java/io/dropwizard/metrics5/jersey2/InstrumentedResourceMethodApplicationListener.java
@@ -3,7 +3,11 @@ package io.dropwizard.metrics5.jersey2;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.base.Strings;
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.ExponentiallyDecayingReservoir;
 import io.dropwizard.metrics5.Meter;
@@ -19,7 +23,6 @@ import io.dropwizard.metrics5.annotation.Timed;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Method;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -159,7 +162,7 @@ public class InstrumentedResourceMethodApplicationListener
       this.level = responseMetered.level();
       this.meters =
           COARSE_METER_LEVELS.contains(level)
-              ? Collections.unmodifiableList(
+              ? unmodifiableList(
                   Arrays.asList(
                       registry.meter(metricName.resolve("1xx-responses")), // 1xx
                       registry.meter(metricName.resolve("2xx-responses")), // 2xx
@@ -167,11 +170,9 @@ public class InstrumentedResourceMethodApplicationListener
                       registry.meter(metricName.resolve("4xx-responses")), // 4xx
                       registry.meter(metricName.resolve("5xx-responses")) // 5xx
                       ))
-              : Collections.emptyList();
+              : ImmutableList.of();
       this.responseCodeMeters =
-          DETAILED_METER_LEVELS.contains(level)
-              ? new ConcurrentHashMap<>()
-              : Collections.emptyMap();
+          DETAILED_METER_LEVELS.contains(level) ? new ConcurrentHashMap<>() : ImmutableMap.of();
       this.metricRegistry = registry;
     }
 
@@ -305,9 +306,9 @@ public class InstrumentedResourceMethodApplicationListener
                 : null;
 
         if (metric != null) {
-          if (metric.cause.isAssignableFrom(event.getException().getClass())
+          if (metric.cause.isInstance(event.getException())
               || (event.getException().getCause() != null
-                  && metric.cause.isAssignableFrom(event.getException().getCause().getClass()))) {
+                  && metric.cause.isInstance(event.getException().getCause()))) {
             metric.meter.mark();
           }
         }
@@ -418,14 +419,11 @@ public class InstrumentedResourceMethodApplicationListener
 
   @Override
   public RequestEventListener onRequest(final RequestEvent event) {
-    final RequestEventListener listener =
-        new ChainedRequestEventListener(
-            new TimerRequestEventListener(timers, clock),
-            new MeterRequestEventListener(meters),
-            new ExceptionMeterRequestEventListener(exceptionMeters),
-            new ResponseMeterRequestEventListener(responseMeters));
-
-    return listener;
+    return new ChainedRequestEventListener(
+        new TimerRequestEventListener(timers, clock),
+        new MeterRequestEventListener(meters),
+        new ExceptionMeterRequestEventListener(exceptionMeters),
+        new ResponseMeterRequestEventListener(responseMeters));
   }
 
   private <T extends Annotation> T getClassLevelAnnotation(
@@ -543,7 +541,7 @@ public class InstrumentedResourceMethodApplicationListener
       final String... suffixes) {
     final Method definitionMethod = method.getInvocable().getDefinitionMethod();
     MetricName metricName;
-    if (explicitName != null && !explicitName.isEmpty()) {
+    if (!Strings.isNullOrEmpty(explicitName)) {
       metricName =
           absolute
               ? MetricRegistry.name(explicitName)
@@ -604,8 +602,7 @@ public class InstrumentedResourceMethodApplicationListener
     @Override
     public int hashCode() {
       int result = type.hashCode();
-      result = 31 * result + method.hashCode();
-      return result;
+      return 31 * result + method.hashCode();
     }
   }
 }
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/CustomReservoirImplementationTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/CustomReservoirImplementationTest.java
index d077730..9252eec 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/CustomReservoirImplementationTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/CustomReservoirImplementationTest.java
@@ -14,7 +14,7 @@ import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
 
-class CustomReservoirImplementationTest extends JerseyTest {
+final class CustomReservoirImplementationTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonFilterMetricsJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonFilterMetricsJerseyTest.java
index b96f71a..47ae1ce 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonFilterMetricsJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonFilterMetricsJerseyTest.java
@@ -18,7 +18,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig} with filter tracking
  */
-class SingletonFilterMetricsJerseyTest extends JerseyTest {
+final class SingletonFilterMetricsJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -34,8 +34,7 @@ class SingletonFilterMetricsJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
     config = config.register(new MetricsFeature(this.registry, testClock, true));
     config = config.register(new TestRequestFilter(testClock));
-    config = config.register(new InstrumentedFilteredResource(testClock));
-    return config;
+    return config.register(new InstrumentedFilteredResource(testClock));
   }
 
   @BeforeEach
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
index 4258938..db81836 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
@@ -20,7 +20,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -34,9 +34,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceExceptionMeteredPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceExceptionMeteredPerClass.class);
   }
 
   @Test
@@ -50,7 +48,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
 
     assertThat(target("exception-metered").request().get(String.class)).isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("exception-metered").queryParam("splode", true).request().get(String.class);
@@ -75,7 +73,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
     assertThat(target("subresource/exception-metered").request().get(String.class))
         .isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("subresource/exception-metered")
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java
index 2aeb6ef..e79e200 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsJerseyTest.java
@@ -24,7 +24,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link org.glassfish.jersey.server.ResourceConfig}
  */
-class SingletonMetricsJerseyTest extends JerseyTest {
+final class SingletonMetricsJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -37,9 +37,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
 
     ResourceConfig config = new ResourceConfig();
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResource.class);
-
-    return config;
+    return config.register(InstrumentedResource.class);
   }
 
   @Test
@@ -67,7 +65,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
 
     assertThat(target("exception-metered").request().get(String.class)).isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("exception-metered").queryParam("splode", true).request().get(String.class);
@@ -92,13 +90,13 @@ class SingletonMetricsJerseyTest extends JerseyTest {
         registry.meter(
             MetricRegistry.name(InstrumentedResource.class, "response5xxMetered", "5xx-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
     assertThat(target("response-2xx-metered").request().get().getStatus()).isEqualTo(200);
 
-    assertThat(meter4xx.getCount()).isZero();
+    assertThat(meter4xx.getCount()).isEqualTo(0);
     assertThat(target("response-4xx-metered").request().get().getStatus()).isEqualTo(400);
 
-    assertThat(meter5xx.getCount()).isZero();
+    assertThat(meter5xx.getCount()).isEqualTo(0);
     assertThat(target("response-5xx-metered").request().get().getStatus()).isEqualTo(500);
 
     assertThat(meter2xx.getCount()).isEqualTo(1);
@@ -107,7 +105,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
   }
 
   @Test
-  void testResourceNotFound() {
+  void resourceNotFound() {
     final Response response = target().path("not-found").request().get();
     assertThat(response.getStatus()).isEqualTo(404);
 
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java
index 561a942..ce3e94f 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java
@@ -17,7 +17,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -31,9 +31,7 @@ class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceMeteredPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceMeteredPerClass.class);
   }
 
   @Test
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java
index bc36e7a..eeec0da 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java
@@ -1,7 +1,6 @@
 package io.dropwizard.metrics5.jersey2;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.fail;
 
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -11,6 +10,7 @@ import io.dropwizard.metrics5.jersey2.resources.InstrumentedSubResourceResponseM
 import java.util.logging.Level;
 import java.util.logging.Logger;
 import javax.ws.rs.core.Application;
+import org.assertj.core.api.Assertions;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
@@ -19,7 +19,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -34,9 +34,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
 
     config = config.register(new MetricsFeature(this.registry));
     config = config.register(InstrumentedResourceResponseMeteredPerClass.class);
-    config = config.register(new TestExceptionMapper());
-
-    return config;
+    return config.register(new TestExceptionMapper());
   }
 
   @Test
@@ -109,7 +107,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
   void responseMeteredUnmappedExceptionPerClassMethodsAreMetered() {
     try {
       target("responseMeteredRuntimeExceptionPerClass").request().get();
-      fail("expected RuntimeException");
+      Assertions.fail("expected RuntimeException");
     } catch (Exception e) {
       assertThat(e.getCause()).isInstanceOf(RuntimeException.class);
     }
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsTimedPerClassJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsTimedPerClassJerseyTest.java
index c8a6468..cd7c883 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsTimedPerClassJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsTimedPerClassJerseyTest.java
@@ -17,7 +17,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -31,9 +31,7 @@ class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceTimedPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceTimedPerClass.class);
   }
 
   @Test
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java
index b1a48cc..6173844 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedFilteredResource.java
@@ -18,24 +18,24 @@ public class InstrumentedFilteredResource {
   }
 
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     testClock.tick++;
     return "yay";
   }
 
   @GET
-  @Timed(name = "fancyName")
   @Path("/named")
+  @Timed(name = "fancyName")
   public String named() {
     testClock.tick++;
     return "fancy";
   }
 
   @GET
-  @Timed(name = "absolutelyFancy", absolute = true)
   @Path("/absolute")
+  @Timed(name = "absolutelyFancy", absolute = true)
   public String absolute() {
     testClock.tick++;
     return "absolute";
@@ -50,8 +50,8 @@ public class InstrumentedFilteredResource {
   public class InstrumentedFilteredSubResource {
 
     @GET
-    @Timed
     @Path("/timed")
+    @Timed
     public String timed() {
       testClock.tick += 2;
       return "yay";
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java
index a74a5c8..566fef8 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedResource.java
@@ -21,8 +21,8 @@ import javax.ws.rs.core.Response;
 @Produces(MediaType.TEXT_PLAIN)
 public class InstrumentedResource {
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     return "yay";
   }
@@ -34,8 +34,8 @@ public class InstrumentedResource {
     return "woo";
   }
 
-  @GET
   @ExceptionMetered(cause = IOException.class)
+  @GET
   @Path("/exception-metered")
   public String exceptionMetered(@QueryParam("splode") @DefaultValue("false") boolean splode)
       throws IOException {
@@ -46,46 +46,46 @@ public class InstrumentedResource {
   }
 
   @GET
-  @ResponseMetered(level = DETAILED)
   @Path("/response-metered-detailed")
+  @ResponseMetered(level = DETAILED)
   public Response responseMeteredDetailed(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered(level = COARSE)
   @Path("/response-metered-coarse")
+  @ResponseMetered(level = COARSE)
   public Response responseMeteredCoarse(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered(level = ALL)
   @Path("/response-metered-all")
+  @ResponseMetered(level = ALL)
   public Response responseMeteredAll(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-2xx-metered")
+  @ResponseMetered
   public Response response2xxMetered() {
     return Response.ok().build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-4xx-metered")
+  @ResponseMetered
   public Response response4xxMetered() {
     return Response.status(Response.Status.BAD_REQUEST).build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-5xx-metered")
+  @ResponseMetered
   public Response response5xxMetered() {
     return Response.status(Response.Status.INTERNAL_SERVER_ERROR).build();
   }
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedSubResource.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedSubResource.java
index 32fffd6..b99a6cf 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedSubResource.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/resources/InstrumentedSubResource.java
@@ -10,8 +10,8 @@ import javax.ws.rs.core.MediaType;
 public class InstrumentedSubResource {
 
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     return "yay";
   }
diff --git a/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java b/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java
index dc0e1bb..4298701 100644
--- a/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java
+++ b/metrics-jersey3/src/main/java/io/dropwizard/metrics5/jersey3/InstrumentedResourceMethodApplicationListener.java
@@ -4,7 +4,11 @@ import static io.dropwizard.metrics5.MetricRegistry.name;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.base.Strings;
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.ExponentiallyDecayingReservoir;
 import io.dropwizard.metrics5.Meter;
@@ -22,7 +26,6 @@ import jakarta.ws.rs.ext.Provider;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Method;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -160,7 +163,7 @@ public class InstrumentedResourceMethodApplicationListener
       this.level = responseMetered.level();
       this.meters =
           COARSE_METER_LEVELS.contains(level)
-              ? Collections.unmodifiableList(
+              ? unmodifiableList(
                   Arrays.asList(
                       registry.meter(metricName.resolve("1xx-responses")), // 1xx
                       registry.meter(metricName.resolve("2xx-responses")), // 2xx
@@ -168,11 +171,9 @@ public class InstrumentedResourceMethodApplicationListener
                       registry.meter(metricName.resolve("4xx-responses")), // 4xx
                       registry.meter(metricName.resolve("5xx-responses")) // 5xx
                       ))
-              : Collections.emptyList();
+              : ImmutableList.of();
       this.responseCodeMeters =
-          DETAILED_METER_LEVELS.contains(level)
-              ? new ConcurrentHashMap<>()
-              : Collections.emptyMap();
+          DETAILED_METER_LEVELS.contains(level) ? new ConcurrentHashMap<>() : ImmutableMap.of();
       this.metricRegistry = registry;
     }
 
@@ -306,9 +307,9 @@ public class InstrumentedResourceMethodApplicationListener
                 : null;
 
         if (metric != null) {
-          if (metric.cause.isAssignableFrom(event.getException().getClass())
+          if (metric.cause.isInstance(event.getException())
               || (event.getException().getCause() != null
-                  && metric.cause.isAssignableFrom(event.getException().getCause().getClass()))) {
+                  && metric.cause.isInstance(event.getException().getCause()))) {
             metric.meter.mark();
           }
         }
@@ -419,14 +420,11 @@ public class InstrumentedResourceMethodApplicationListener
 
   @Override
   public RequestEventListener onRequest(final RequestEvent event) {
-    final RequestEventListener listener =
-        new ChainedRequestEventListener(
-            new TimerRequestEventListener(timers, clock),
-            new MeterRequestEventListener(meters),
-            new ExceptionMeterRequestEventListener(exceptionMeters),
-            new ResponseMeterRequestEventListener(responseMeters));
-
-    return listener;
+    return new ChainedRequestEventListener(
+        new TimerRequestEventListener(timers, clock),
+        new MeterRequestEventListener(meters),
+        new ExceptionMeterRequestEventListener(exceptionMeters),
+        new ResponseMeterRequestEventListener(responseMeters));
   }
 
   private <T extends Annotation> T getClassLevelAnnotation(
@@ -544,7 +542,7 @@ public class InstrumentedResourceMethodApplicationListener
       final String... suffixes) {
     final Method definitionMethod = method.getInvocable().getDefinitionMethod();
     MetricName metricName;
-    if (explicitName != null && !explicitName.isEmpty()) {
+    if (!Strings.isNullOrEmpty(explicitName)) {
       metricName =
           absolute ? name(explicitName) : name(definitionMethod.getDeclaringClass(), explicitName);
     } else {
@@ -602,8 +600,7 @@ public class InstrumentedResourceMethodApplicationListener
     @Override
     public int hashCode() {
       int result = type.hashCode();
-      result = 31 * result + method.hashCode();
-      return result;
+      return 31 * result + method.hashCode();
     }
   }
 }
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/CustomReservoirImplementationTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/CustomReservoirImplementationTest.java
index a3ac358..c512f1e 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/CustomReservoirImplementationTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/CustomReservoirImplementationTest.java
@@ -14,7 +14,7 @@ import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
 
-class CustomReservoirImplementationTest extends JerseyTest {
+final class CustomReservoirImplementationTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonFilterMetricsJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonFilterMetricsJerseyTest.java
index a95000f..59b42a3 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonFilterMetricsJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonFilterMetricsJerseyTest.java
@@ -19,7 +19,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig} with filter tracking
  */
-class SingletonFilterMetricsJerseyTest extends JerseyTest {
+final class SingletonFilterMetricsJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -35,8 +35,7 @@ class SingletonFilterMetricsJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
     config = config.register(new MetricsFeature(this.registry, testClock, true));
     config = config.register(new TestRequestFilter(testClock));
-    config = config.register(new InstrumentedFilteredResource(testClock));
-    return config;
+    return config.register(new InstrumentedFilteredResource(testClock));
   }
 
   @BeforeEach
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
index 80d90a6..023155e 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
@@ -21,7 +21,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -35,9 +35,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceExceptionMeteredPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceExceptionMeteredPerClass.class);
   }
 
   @Test
@@ -51,7 +49,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
 
     assertThat(target("exception-metered").request().get(String.class)).isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("exception-metered").queryParam("splode", true).request().get(String.class);
@@ -76,7 +74,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
     assertThat(target("subresource/exception-metered").request().get(String.class))
         .isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("subresource/exception-metered")
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java
index f507662..9dca17f 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsJerseyTest.java
@@ -25,7 +25,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link org.glassfish.jersey.server.ResourceConfig}
  */
-class SingletonMetricsJerseyTest extends JerseyTest {
+final class SingletonMetricsJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -38,9 +38,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
 
     ResourceConfig config = new ResourceConfig();
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResource.class);
-
-    return config;
+    return config.register(InstrumentedResource.class);
   }
 
   @Test
@@ -67,7 +65,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
 
     assertThat(target("exception-metered").request().get(String.class)).isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("exception-metered").queryParam("splode", true).request().get(String.class);
@@ -89,13 +87,13 @@ class SingletonMetricsJerseyTest extends JerseyTest {
     final Meter meter5xx =
         registry.meter(name(InstrumentedResource.class, "response5xxMetered", "5xx-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
     assertThat(target("response-2xx-metered").request().get().getStatus()).isEqualTo(200);
 
-    assertThat(meter4xx.getCount()).isZero();
+    assertThat(meter4xx.getCount()).isEqualTo(0);
     assertThat(target("response-4xx-metered").request().get().getStatus()).isEqualTo(400);
 
-    assertThat(meter5xx.getCount()).isZero();
+    assertThat(meter5xx.getCount()).isEqualTo(0);
     assertThat(target("response-5xx-metered").request().get().getStatus()).isEqualTo(500);
 
     assertThat(meter2xx.getCount()).isEqualTo(1);
@@ -115,9 +113,9 @@ class SingletonMetricsJerseyTest extends JerseyTest {
         registry.meter(
             name(InstrumentedResource.class, "responseMeteredDetailed", "201-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
-    assertThat(meter201.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
+    assertThat(meter201.getCount()).isEqualTo(0);
     assertThat(target("response-metered-detailed").request().get().getStatus()).isEqualTo(200);
     assertThat(
             target("response-metered-detailed")
@@ -127,28 +125,28 @@ class SingletonMetricsJerseyTest extends JerseyTest {
                 .getStatus())
         .isEqualTo(201);
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isOne();
-    assertThat(meter201.getCount()).isOne();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(1);
+    assertThat(meter201.getCount()).isEqualTo(1);
   }
 
   @Test
-  public void responseMeteredMethodsAreMeteredWithAllLevel() {
+  void responseMeteredMethodsAreMeteredWithAllLevel() {
     final Meter meter2xx =
         registry.meter(name(InstrumentedResource.class, "responseMeteredAll", "2xx-responses"));
     final Meter meter200 =
         registry.meter(name(InstrumentedResource.class, "responseMeteredAll", "200-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
     assertThat(target("response-metered-all").request().get().getStatus()).isEqualTo(200);
 
-    assertThat(meter2xx.getCount()).isOne();
-    assertThat(meter200.getCount()).isOne();
+    assertThat(meter2xx.getCount()).isEqualTo(1);
+    assertThat(meter200.getCount()).isEqualTo(1);
   }
 
   @Test
-  void testResourceNotFound() {
+  void resourceNotFound() {
     final Response response = target().path("not-found").request().get();
     assertThat(response.getStatus()).isEqualTo(404);
 
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsMeteredPerClassJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsMeteredPerClassJerseyTest.java
index f9a9aaf..18c0712 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsMeteredPerClassJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsMeteredPerClassJerseyTest.java
@@ -18,7 +18,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -32,9 +32,7 @@ class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceMeteredPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceMeteredPerClass.class);
   }
 
   @Test
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java
index 9e3e887..00e401f 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java
@@ -2,7 +2,6 @@ package io.dropwizard.metrics5.jersey3;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.fail;
 
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -12,6 +11,7 @@ import io.dropwizard.metrics5.jersey3.resources.InstrumentedSubResourceResponseM
 import jakarta.ws.rs.core.Application;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+import org.assertj.core.api.Assertions;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
@@ -20,7 +20,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -35,9 +35,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
 
     config = config.register(new MetricsFeature(this.registry));
     config = config.register(InstrumentedResourceResponseMeteredPerClass.class);
-    config = config.register(new TestExceptionMapper());
-
-    return config;
+    return config.register(new TestExceptionMapper());
   }
 
   @Test
@@ -110,7 +108,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
   void responseMeteredUnmappedExceptionPerClassMethodsAreMetered() {
     try {
       target("responseMeteredRuntimeExceptionPerClass").request().get();
-      fail("expected RuntimeException");
+      Assertions.fail("expected RuntimeException");
     } catch (Exception e) {
       assertThat(e.getCause()).isInstanceOf(RuntimeException.class);
     }
@@ -140,8 +138,8 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
                 "responseMeteredPerClass",
                 "200-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
 
     assertThat(target("subresource/responseMeteredPerClass").request().get().getStatus())
         .isEqualTo(200);
@@ -154,7 +152,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
                 "2xx-responses"));
     assertThat(meter.getCount()).isEqualTo(1);
 
-    assertThat(meter2xx.getCount()).isOne();
-    assertThat(meter200.getCount()).isOne();
+    assertThat(meter2xx.getCount()).isEqualTo(1);
+    assertThat(meter200.getCount()).isEqualTo(1);
   }
 }
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsTimedPerClassJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsTimedPerClassJerseyTest.java
index 96977e6..edcb12d 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsTimedPerClassJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsTimedPerClassJerseyTest.java
@@ -18,7 +18,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -32,9 +32,7 @@ class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceTimedPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceTimedPerClass.class);
   }
 
   @Test
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java
index 76fdaa4..7514cf6 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedFilteredResource.java
@@ -18,24 +18,24 @@ public class InstrumentedFilteredResource {
   }
 
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     testClock.tick++;
     return "yay";
   }
 
   @GET
-  @Timed(name = "fancyName")
   @Path("/named")
+  @Timed(name = "fancyName")
   public String named() {
     testClock.tick++;
     return "fancy";
   }
 
   @GET
-  @Timed(name = "absolutelyFancy", absolute = true)
   @Path("/absolute")
+  @Timed(name = "absolutelyFancy", absolute = true)
   public String absolute() {
     testClock.tick++;
     return "absolute";
@@ -50,8 +50,8 @@ public class InstrumentedFilteredResource {
   public class InstrumentedFilteredSubResource {
 
     @GET
-    @Timed
     @Path("/timed")
+    @Timed
     public String timed() {
       testClock.tick += 2;
       return "yay";
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java
index f865db2..9e4d521 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedResource.java
@@ -21,8 +21,8 @@ import java.io.IOException;
 @Produces(MediaType.TEXT_PLAIN)
 public class InstrumentedResource {
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     return "yay";
   }
@@ -34,8 +34,8 @@ public class InstrumentedResource {
     return "woo";
   }
 
-  @GET
   @ExceptionMetered(cause = IOException.class)
+  @GET
   @Path("/exception-metered")
   public String exceptionMetered(@QueryParam("splode") @DefaultValue("false") boolean splode)
       throws IOException {
@@ -46,46 +46,46 @@ public class InstrumentedResource {
   }
 
   @GET
-  @ResponseMetered(level = DETAILED)
   @Path("/response-metered-detailed")
+  @ResponseMetered(level = DETAILED)
   public Response responseMeteredDetailed(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered(level = COARSE)
   @Path("/response-metered-coarse")
+  @ResponseMetered(level = COARSE)
   public Response responseMeteredCoarse(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered(level = ALL)
   @Path("/response-metered-all")
+  @ResponseMetered(level = ALL)
   public Response responseMeteredAll(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-2xx-metered")
+  @ResponseMetered
   public Response response2xxMetered() {
     return Response.ok().build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-4xx-metered")
+  @ResponseMetered
   public Response response4xxMetered() {
     return Response.status(Response.Status.BAD_REQUEST).build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-5xx-metered")
+  @ResponseMetered
   public Response response5xxMetered() {
     return Response.status(Response.Status.INTERNAL_SERVER_ERROR).build();
   }
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedSubResource.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedSubResource.java
index 5df3fc5..98e889d 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedSubResource.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/resources/InstrumentedSubResource.java
@@ -10,8 +10,8 @@ import jakarta.ws.rs.core.MediaType;
 public class InstrumentedSubResource {
 
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     return "yay";
   }
diff --git a/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java b/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java
index 830d052..ff2dea3 100644
--- a/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java
+++ b/metrics-jersey31/src/main/java/io/dropwizard/metrics5/jersey31/InstrumentedResourceMethodApplicationListener.java
@@ -4,7 +4,11 @@ import static io.dropwizard.metrics5.MetricRegistry.name;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.base.Strings;
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Clock;
 import io.dropwizard.metrics5.ExponentiallyDecayingReservoir;
 import io.dropwizard.metrics5.Meter;
@@ -22,7 +26,6 @@ import jakarta.ws.rs.ext.Provider;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Method;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -160,7 +163,7 @@ public class InstrumentedResourceMethodApplicationListener
       this.level = responseMetered.level();
       this.meters =
           COARSE_METER_LEVELS.contains(level)
-              ? Collections.unmodifiableList(
+              ? unmodifiableList(
                   Arrays.asList(
                       registry.meter(metricName.resolve("1xx-responses")), // 1xx
                       registry.meter(metricName.resolve("2xx-responses")), // 2xx
@@ -168,11 +171,9 @@ public class InstrumentedResourceMethodApplicationListener
                       registry.meter(metricName.resolve("4xx-responses")), // 4xx
                       registry.meter(metricName.resolve("5xx-responses")) // 5xx
                       ))
-              : Collections.emptyList();
+              : ImmutableList.of();
       this.responseCodeMeters =
-          DETAILED_METER_LEVELS.contains(level)
-              ? new ConcurrentHashMap<>()
-              : Collections.emptyMap();
+          DETAILED_METER_LEVELS.contains(level) ? new ConcurrentHashMap<>() : ImmutableMap.of();
       this.metricRegistry = registry;
     }
 
@@ -306,9 +307,9 @@ public class InstrumentedResourceMethodApplicationListener
                 : null;
 
         if (metric != null) {
-          if (metric.cause.isAssignableFrom(event.getException().getClass())
+          if (metric.cause.isInstance(event.getException())
               || (event.getException().getCause() != null
-                  && metric.cause.isAssignableFrom(event.getException().getCause().getClass()))) {
+                  && metric.cause.isInstance(event.getException().getCause()))) {
             metric.meter.mark();
           }
         }
@@ -419,14 +420,11 @@ public class InstrumentedResourceMethodApplicationListener
 
   @Override
   public RequestEventListener onRequest(final RequestEvent event) {
-    final RequestEventListener listener =
-        new ChainedRequestEventListener(
-            new TimerRequestEventListener(timers, clock),
-            new MeterRequestEventListener(meters),
-            new ExceptionMeterRequestEventListener(exceptionMeters),
-            new ResponseMeterRequestEventListener(responseMeters));
-
-    return listener;
+    return new ChainedRequestEventListener(
+        new TimerRequestEventListener(timers, clock),
+        new MeterRequestEventListener(meters),
+        new ExceptionMeterRequestEventListener(exceptionMeters),
+        new ResponseMeterRequestEventListener(responseMeters));
   }
 
   private <T extends Annotation> T getClassLevelAnnotation(
@@ -544,7 +542,7 @@ public class InstrumentedResourceMethodApplicationListener
       final String... suffixes) {
     final Method definitionMethod = method.getInvocable().getDefinitionMethod();
     MetricName metricName;
-    if (explicitName != null && !explicitName.isEmpty()) {
+    if (!Strings.isNullOrEmpty(explicitName)) {
       metricName =
           absolute ? name(explicitName) : name(definitionMethod.getDeclaringClass(), explicitName);
     } else {
@@ -602,8 +600,7 @@ public class InstrumentedResourceMethodApplicationListener
     @Override
     public int hashCode() {
       int result = type.hashCode();
-      result = 31 * result + method.hashCode();
-      return result;
+      return 31 * result + method.hashCode();
     }
   }
 }
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/CustomReservoirImplementationTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/CustomReservoirImplementationTest.java
index 46996eb..6aaa268 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/CustomReservoirImplementationTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/CustomReservoirImplementationTest.java
@@ -14,7 +14,7 @@ import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
 
-class CustomReservoirImplementationTest extends JerseyTest {
+final class CustomReservoirImplementationTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonFilterMetricsJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonFilterMetricsJerseyTest.java
index b93ab95..546f28b 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonFilterMetricsJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonFilterMetricsJerseyTest.java
@@ -19,7 +19,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig} with filter tracking
  */
-class SingletonFilterMetricsJerseyTest extends JerseyTest {
+final class SingletonFilterMetricsJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -35,8 +35,7 @@ class SingletonFilterMetricsJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
     config = config.register(new MetricsFeature(this.registry, testClock, true));
     config = config.register(new TestRequestFilter(testClock));
-    config = config.register(new InstrumentedFilteredResource(testClock));
-    return config;
+    return config.register(new InstrumentedFilteredResource(testClock));
   }
 
   @BeforeEach
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
index f67f1d0..32d2dde 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsExceptionMeteredPerClassJerseyTest.java
@@ -21,7 +21,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -35,9 +35,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceExceptionMeteredPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceExceptionMeteredPerClass.class);
   }
 
   @Test
@@ -51,7 +49,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
 
     assertThat(target("exception-metered").request().get(String.class)).isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("exception-metered").queryParam("splode", true).request().get(String.class);
@@ -76,7 +74,7 @@ class SingletonMetricsExceptionMeteredPerClassJerseyTest extends JerseyTest {
     assertThat(target("subresource/exception-metered").request().get(String.class))
         .isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("subresource/exception-metered")
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java
index aa0251c..3b35f93 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsJerseyTest.java
@@ -25,7 +25,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsJerseyTest extends JerseyTest {
+final class SingletonMetricsJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -38,9 +38,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
 
     ResourceConfig config = new ResourceConfig();
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResource.class);
-
-    return config;
+    return config.register(InstrumentedResource.class);
   }
 
   @Test
@@ -67,7 +65,7 @@ class SingletonMetricsJerseyTest extends JerseyTest {
 
     assertThat(target("exception-metered").request().get(String.class)).isEqualTo("fuh");
 
-    assertThat(meter.getCount()).isZero();
+    assertThat(meter.getCount()).isEqualTo(0);
 
     try {
       target("exception-metered").queryParam("splode", true).request().get(String.class);
@@ -89,33 +87,33 @@ class SingletonMetricsJerseyTest extends JerseyTest {
     final Meter meter5xx =
         registry.meter(name(InstrumentedResource.class, "response5xxMetered", "5xx-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
     assertThat(target("response-2xx-metered").request().get().getStatus()).isEqualTo(200);
 
-    assertThat(meter4xx.getCount()).isZero();
+    assertThat(meter4xx.getCount()).isEqualTo(0);
     assertThat(target("response-4xx-metered").request().get().getStatus()).isEqualTo(400);
 
-    assertThat(meter5xx.getCount()).isZero();
+    assertThat(meter5xx.getCount()).isEqualTo(0);
     assertThat(target("response-5xx-metered").request().get().getStatus()).isEqualTo(500);
   }
 
   @Test
-  public void responseMeteredMethodsAreMeteredWithCoarseLevel() {
+  void responseMeteredMethodsAreMeteredWithCoarseLevel() {
     final Meter meter2xx =
         registry.meter(name(InstrumentedResource.class, "responseMeteredCoarse", "2xx-responses"));
     final Meter meter200 =
         registry.meter(name(InstrumentedResource.class, "responseMeteredCoarse", "200-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
     assertThat(target("response-metered-coarse").request().get().getStatus()).isEqualTo(200);
 
-    assertThat(meter2xx.getCount()).isOne();
-    assertThat(meter200.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(1);
+    assertThat(meter200.getCount()).isEqualTo(0);
   }
 
   @Test
-  public void responseMeteredMethodsAreMeteredWithDetailedLevel() {
+  void responseMeteredMethodsAreMeteredWithDetailedLevel() {
     final Meter meter2xx =
         registry.meter(
             name(InstrumentedResource.class, "responseMeteredDetailed", "2xx-responses"));
@@ -126,9 +124,9 @@ class SingletonMetricsJerseyTest extends JerseyTest {
         registry.meter(
             name(InstrumentedResource.class, "responseMeteredDetailed", "201-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
-    assertThat(meter201.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
+    assertThat(meter201.getCount()).isEqualTo(0);
     assertThat(target("response-metered-detailed").request().get().getStatus()).isEqualTo(200);
     assertThat(
             target("response-metered-detailed")
@@ -138,28 +136,28 @@ class SingletonMetricsJerseyTest extends JerseyTest {
                 .getStatus())
         .isEqualTo(201);
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isOne();
-    assertThat(meter201.getCount()).isOne();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(1);
+    assertThat(meter201.getCount()).isEqualTo(1);
   }
 
   @Test
-  public void responseMeteredMethodsAreMeteredWithAllLevel() {
+  void responseMeteredMethodsAreMeteredWithAllLevel() {
     final Meter meter2xx =
         registry.meter(name(InstrumentedResource.class, "responseMeteredAll", "2xx-responses"));
     final Meter meter200 =
         registry.meter(name(InstrumentedResource.class, "responseMeteredAll", "200-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
     assertThat(target("response-metered-all").request().get().getStatus()).isEqualTo(200);
 
-    assertThat(meter2xx.getCount()).isOne();
-    assertThat(meter200.getCount()).isOne();
+    assertThat(meter2xx.getCount()).isEqualTo(1);
+    assertThat(meter200.getCount()).isEqualTo(1);
   }
 
   @Test
-  void testResourceNotFound() {
+  void resourceNotFound() {
     final Response response = target().path("not-found").request().get();
     assertThat(response.getStatus()).isEqualTo(404);
 
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsMeteredPerClassJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsMeteredPerClassJerseyTest.java
index a661f5d..9a90095 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsMeteredPerClassJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsMeteredPerClassJerseyTest.java
@@ -18,7 +18,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -32,9 +32,7 @@ class SingletonMetricsMeteredPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceMeteredPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceMeteredPerClass.class);
   }
 
   @Test
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java
index 1d68658..fdd0440 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java
@@ -2,7 +2,6 @@ package io.dropwizard.metrics5.jersey31;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.fail;
 
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -12,6 +11,7 @@ import io.dropwizard.metrics5.jersey31.resources.InstrumentedSubResourceResponse
 import jakarta.ws.rs.core.Application;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+import org.assertj.core.api.Assertions;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
@@ -20,7 +20,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -35,9 +35,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
 
     config = config.register(new MetricsFeature(this.registry));
     config = config.register(InstrumentedResourceResponseMeteredPerClass.class);
-    config = config.register(new TestExceptionMapper());
-
-    return config;
+    return config.register(new TestExceptionMapper());
   }
 
   @Test
@@ -110,7 +108,7 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
   void responseMeteredUnmappedExceptionPerClassMethodsAreMetered() {
     try {
       target("responseMeteredRuntimeExceptionPerClass").request().get();
-      fail("expected RuntimeException");
+      Assertions.fail("expected RuntimeException");
     } catch (Exception e) {
       assertThat(e.getCause()).isInstanceOf(RuntimeException.class);
     }
@@ -140,13 +138,13 @@ class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest {
                 "responseMeteredPerClass",
                 "200-responses"));
 
-    assertThat(meter2xx.getCount()).isZero();
-    assertThat(meter200.getCount()).isZero();
+    assertThat(meter2xx.getCount()).isEqualTo(0);
+    assertThat(meter200.getCount()).isEqualTo(0);
 
     assertThat(target("subresource/responseMeteredPerClass").request().get().getStatus())
         .isEqualTo(200);
 
-    assertThat(meter2xx.getCount()).isOne();
-    assertThat(meter200.getCount()).isOne();
+    assertThat(meter2xx.getCount()).isEqualTo(1);
+    assertThat(meter200.getCount()).isEqualTo(1);
   }
 }
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsTimedPerClassJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsTimedPerClassJerseyTest.java
index 2258ea8..ca5dd87 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsTimedPerClassJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsTimedPerClassJerseyTest.java
@@ -18,7 +18,7 @@ import org.junit.jupiter.api.Test;
  * Tests registering {@link InstrumentedResourceMethodApplicationListener} as a singleton in a
  * Jersey {@link ResourceConfig}
  */
-class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
+final class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
   static {
     Logger.getLogger("org.glassfish.jersey").setLevel(Level.OFF);
   }
@@ -32,9 +32,7 @@ class SingletonMetricsTimedPerClassJerseyTest extends JerseyTest {
     ResourceConfig config = new ResourceConfig();
 
     config = config.register(new MetricsFeature(this.registry));
-    config = config.register(InstrumentedResourceTimedPerClass.class);
-
-    return config;
+    return config.register(InstrumentedResourceTimedPerClass.class);
   }
 
   @Test
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java
index 08d974e..17d8a5b 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedFilteredResource.java
@@ -18,24 +18,24 @@ public class InstrumentedFilteredResource {
   }
 
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     testClock.tick++;
     return "yay";
   }
 
   @GET
-  @Timed(name = "fancyName")
   @Path("/named")
+  @Timed(name = "fancyName")
   public String named() {
     testClock.tick++;
     return "fancy";
   }
 
   @GET
-  @Timed(name = "absolutelyFancy", absolute = true)
   @Path("/absolute")
+  @Timed(name = "absolutelyFancy", absolute = true)
   public String absolute() {
     testClock.tick++;
     return "absolute";
@@ -50,8 +50,8 @@ public class InstrumentedFilteredResource {
   public class InstrumentedFilteredSubResource {
 
     @GET
-    @Timed
     @Path("/timed")
+    @Timed
     public String timed() {
       testClock.tick += 2;
       return "yay";
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java
index 20cc56a..6befce2 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedResource.java
@@ -21,8 +21,8 @@ import java.io.IOException;
 @Produces(MediaType.TEXT_PLAIN)
 public class InstrumentedResource {
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     return "yay";
   }
@@ -34,8 +34,8 @@ public class InstrumentedResource {
     return "woo";
   }
 
-  @GET
   @ExceptionMetered(cause = IOException.class)
+  @GET
   @Path("/exception-metered")
   public String exceptionMetered(@QueryParam("splode") @DefaultValue("false") boolean splode)
       throws IOException {
@@ -46,46 +46,46 @@ public class InstrumentedResource {
   }
 
   @GET
-  @ResponseMetered(level = DETAILED)
   @Path("/response-metered-detailed")
+  @ResponseMetered(level = DETAILED)
   public Response responseMeteredDetailed(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered(level = COARSE)
   @Path("/response-metered-coarse")
+  @ResponseMetered(level = COARSE)
   public Response responseMeteredCoarse(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered(level = ALL)
   @Path("/response-metered-all")
+  @ResponseMetered(level = ALL)
   public Response responseMeteredAll(
       @QueryParam("status_code") @DefaultValue("200") int statusCode) {
     return Response.status(Response.Status.fromStatusCode(statusCode)).build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-2xx-metered")
+  @ResponseMetered
   public Response response2xxMetered() {
     return Response.ok().build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-4xx-metered")
+  @ResponseMetered
   public Response response4xxMetered() {
     return Response.status(Response.Status.BAD_REQUEST).build();
   }
 
   @GET
-  @ResponseMetered
   @Path("/response-5xx-metered")
+  @ResponseMetered
   public Response response5xxMetered() {
     return Response.status(Response.Status.INTERNAL_SERVER_ERROR).build();
   }
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedSubResource.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedSubResource.java
index 3db3c9f..2efa31f 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedSubResource.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/resources/InstrumentedSubResource.java
@@ -10,8 +10,8 @@ import jakarta.ws.rs.core.MediaType;
 public class InstrumentedSubResource {
 
   @GET
-  @Timed
   @Path("/timed")
+  @Timed
   public String timed() {
     return "yay";
   }
diff --git a/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java b/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java
index 847cc4c..a75a1d4 100644
--- a/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java
+++ b/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHandler.java
@@ -4,7 +4,10 @@ import static io.dropwizard.metrics5.MetricRegistry.name;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricName;
@@ -14,7 +17,6 @@ import io.dropwizard.metrics5.Timer;
 import io.dropwizard.metrics5.annotation.ResponseMeteredLevel;
 import java.io.IOException;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -173,7 +175,7 @@ public class InstrumentedHandler extends HandlerWrapper {
     this.responseCodeMeters =
         DETAILED_METER_LEVELS.contains(responseMeteredLevel)
             ? new ConcurrentHashMap<>()
-            : Collections.emptyMap();
+            : ImmutableMap.of();
 
     this.getRequests = metricRegistry.timer(prefix.resolve(NAME_GET_REQUESTS));
     this.postRequests = metricRegistry.timer(prefix.resolve(NAME_POST_REQUESTS));
@@ -188,7 +190,7 @@ public class InstrumentedHandler extends HandlerWrapper {
 
     if (COARSE_METER_LEVELS.contains(responseMeteredLevel)) {
       this.responses =
-          Collections.unmodifiableList(
+          unmodifiableList(
               Arrays.asList(
                   metricRegistry.meter(prefix.resolve(NAME_1XX_RESPONSES)), // 1xx
                   metricRegistry.meter(prefix.resolve(NAME_2XX_RESPONSES)), // 2xx
@@ -253,7 +255,7 @@ public class InstrumentedHandler extends HandlerWrapper {
             }
           });
     } else {
-      this.responses = Collections.emptyList();
+      this.responses = ImmutableList.of();
     }
 
     this.listener = new AsyncAttachingListener();
diff --git a/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java b/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java
index bddd2b9..29e9004 100644
--- a/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java
+++ b/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListener.java
@@ -3,7 +3,10 @@ package io.dropwizard.metrics5.jetty10;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricName;
@@ -14,7 +17,6 @@ import io.dropwizard.metrics5.annotation.ResponseMeteredLevel;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -132,10 +134,10 @@ public class InstrumentedHttpChannelListener implements Listener {
     this.responseCodeMeters =
         DETAILED_METER_LEVELS.contains(responseMeteredLevel)
             ? new ConcurrentHashMap<>()
-            : Collections.emptyMap();
+            : ImmutableMap.of();
     this.responses =
         COARSE_METER_LEVELS.contains(responseMeteredLevel)
-            ? Collections.unmodifiableList(
+            ? unmodifiableList(
                 Arrays.asList(
                     registry.meter(prefix.resolve("1xx-responses")), // 1xx
                     registry.meter(prefix.resolve("2xx-responses")), // 2xx
@@ -143,7 +145,7 @@ public class InstrumentedHttpChannelListener implements Listener {
                     registry.meter(prefix.resolve("4xx-responses")), // 4xx
                     registry.meter(prefix.resolve("5xx-responses")) // 5xx
                     ))
-            : Collections.emptyList();
+            : ImmutableList.of();
 
     this.getRequests = metricRegistry.timer(prefix.resolve("get-requests"));
     this.postRequests = metricRegistry.timer(prefix.resolve("post-requests"));
diff --git a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactoryTest.java b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactoryTest.java
index 9a3d31c..fa1f566 100644
--- a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactoryTest.java
+++ b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactoryTest.java
@@ -21,7 +21,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedConnectionFactoryTest {
+final class InstrumentedConnectionFactoryTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final Server server = new Server();
   private final ServerConnector connector =
diff --git a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java
index 771f5a4..337c76a 100644
--- a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java
+++ b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHandlerTest.java
@@ -3,13 +3,13 @@ package io.dropwizard.metrics5.jetty10;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.AssertionsForClassTypes.assertThatCode;
 
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import java.util.concurrent.TimeUnit;
 import javax.servlet.AsyncContext;
 import javax.servlet.ServletException;
@@ -28,7 +28,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedHandlerTest {
+final class InstrumentedHandlerTest {
   private final HttpClient client = new HttpClient();
   private final MetricRegistry registry = new MetricRegistry();
   private final Server server = new Server();
@@ -118,7 +118,7 @@ class InstrumentedHandlerTest {
   }
 
   @Test
-  public void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {
+  void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {
     InstrumentedHandler handler = new InstrumentedHandler(registry, "coarse", COARSE);
     handler.setHandler(new TestHandler());
     handler.setName("handler");
@@ -128,7 +128,7 @@ class InstrumentedHandlerTest {
   }
 
   @Test
-  public void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {
+  void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {
     InstrumentedHandler handler = new InstrumentedHandler(registry, "detailed", DETAILED);
     handler.setHandler(new TestHandler());
     handler.setName("handler");
@@ -137,8 +137,8 @@ class InstrumentedHandlerTest {
         .doesNotContainKey(MetricName.build("detailed", "handler", "percent-4xx-1m"));
   }
 
-  @Test
   @Disabled("flaky on virtual machines")
+  @Test
   void responseTimesAreRecordedForAsyncResponses() throws Exception {
 
     final ContentResponse response = client.GET(uri("/async"));
@@ -150,7 +150,7 @@ class InstrumentedHandlerTest {
 
   private void assertResponseTimesValid() {
     assertThat(registry.getMeters().get(metricName().resolve("200-responses")).getCount())
-        .isGreaterThan(0L);
+        .isPositive();
 
     assertThat(
             registry
@@ -158,11 +158,11 @@ class InstrumentedHandlerTest {
                 .get(metricName().resolve("get-requests"))
                 .getSnapshot()
                 .getMedian())
-        .isGreaterThan(0.0)
+        .isPositive()
         .isLessThan(TimeUnit.SECONDS.toNanos(1));
 
     assertThat(registry.getTimers().get(metricName().resolve("requests")).getSnapshot().getMedian())
-        .isGreaterThan(0.0)
+        .isPositive()
         .isLessThan(TimeUnit.SECONDS.toNanos(1));
   }
 
@@ -225,7 +225,7 @@ class InstrumentedHandlerTest {
                             @Override
                             public void onWritePossible() throws IOException {
                               servletOutputStream.write(
-                                  "some content from the async\n".getBytes(StandardCharsets.UTF_8));
+                                  "some content from the async\n".getBytes(UTF_8));
                               context.complete();
                             }
 
diff --git a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListenerTest.java b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListenerTest.java
index 295894d..aee388a 100644
--- a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListenerTest.java
+++ b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedHttpChannelListenerTest.java
@@ -1,12 +1,12 @@
 package io.dropwizard.metrics5.jetty10;
 
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import javax.servlet.AsyncContext;
 import javax.servlet.ServletOutputStream;
 import javax.servlet.WriteListener;
@@ -22,7 +22,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedHttpChannelListenerTest {
+final class InstrumentedHttpChannelListenerTest {
   private final HttpClient client = new HttpClient();
   private final Server server = new Server();
   private final ServerConnector connector = new ServerConnector(server);
@@ -188,7 +188,7 @@ class InstrumentedHttpChannelListenerTest {
                             @Override
                             public void onWritePossible() throws IOException {
                               servletOutputStream.write(
-                                  "some content from the async".getBytes(StandardCharsets.UTF_8));
+                                  "some content from the async".getBytes(UTF_8));
                               context.complete();
                             }
 
diff --git a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedQueuedThreadPoolTest.java b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedQueuedThreadPoolTest.java
index 2d97f27..73ba784 100644
--- a/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedQueuedThreadPoolTest.java
+++ b/metrics-jetty10/src/test/java/io/dropwizard/metrics5/jetty10/InstrumentedQueuedThreadPoolTest.java
@@ -8,7 +8,7 @@ import org.eclipse.jetty.util.thread.QueuedThreadPool;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedQueuedThreadPoolTest {
+final class InstrumentedQueuedThreadPoolTest {
   private static final String PREFIX = "prefix";
 
   private MetricRegistry metricRegistry;
diff --git a/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java b/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java
index 19987c1..b5a43cb 100644
--- a/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java
+++ b/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHandler.java
@@ -4,7 +4,10 @@ import static io.dropwizard.metrics5.MetricRegistry.name;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricName;
@@ -19,7 +22,6 @@ import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import java.io.IOException;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -173,7 +175,7 @@ public class InstrumentedHandler extends HandlerWrapper {
     this.responseCodeMeters =
         DETAILED_METER_LEVELS.contains(responseMeteredLevel)
             ? new ConcurrentHashMap<>()
-            : Collections.emptyMap();
+            : ImmutableMap.of();
 
     this.getRequests = metricRegistry.timer(prefix.resolve(NAME_GET_REQUESTS));
     this.postRequests = metricRegistry.timer(prefix.resolve(NAME_POST_REQUESTS));
@@ -188,7 +190,7 @@ public class InstrumentedHandler extends HandlerWrapper {
 
     if (COARSE_METER_LEVELS.contains(responseMeteredLevel)) {
       this.responses =
-          Collections.unmodifiableList(
+          unmodifiableList(
               Arrays.asList(
                   metricRegistry.meter(prefix.resolve(NAME_1XX_RESPONSES)), // 1xx
                   metricRegistry.meter(prefix.resolve(NAME_2XX_RESPONSES)), // 2xx
@@ -253,7 +255,7 @@ public class InstrumentedHandler extends HandlerWrapper {
             }
           });
     } else {
-      this.responses = Collections.emptyList();
+      this.responses = ImmutableList.of();
     }
 
     this.listener = new AsyncAttachingListener();
diff --git a/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java b/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java
index a423590..e0d710f 100644
--- a/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java
+++ b/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListener.java
@@ -3,7 +3,10 @@ package io.dropwizard.metrics5.jetty11;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricName;
@@ -18,7 +21,6 @@ import jakarta.servlet.http.HttpServletResponse;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -132,10 +134,10 @@ public class InstrumentedHttpChannelListener implements Listener {
     this.responseCodeMeters =
         DETAILED_METER_LEVELS.contains(responseMeteredLevel)
             ? new ConcurrentHashMap<>()
-            : Collections.emptyMap();
+            : ImmutableMap.of();
     this.responses =
         COARSE_METER_LEVELS.contains(responseMeteredLevel)
-            ? Collections.unmodifiableList(
+            ? unmodifiableList(
                 Arrays.asList(
                     registry.meter(prefix.resolve("1xx-responses")), // 1xx
                     registry.meter(prefix.resolve("2xx-responses")), // 2xx
@@ -143,7 +145,7 @@ public class InstrumentedHttpChannelListener implements Listener {
                     registry.meter(prefix.resolve("4xx-responses")), // 4xx
                     registry.meter(prefix.resolve("5xx-responses")) // 5xx
                     ))
-            : Collections.emptyList();
+            : ImmutableList.of();
 
     this.getRequests = metricRegistry.timer(prefix.resolve("get-requests"));
     this.postRequests = metricRegistry.timer(prefix.resolve("post-requests"));
diff --git a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactoryTest.java b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactoryTest.java
index e1ae763..b810aef 100644
--- a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactoryTest.java
+++ b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactoryTest.java
@@ -21,7 +21,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedConnectionFactoryTest {
+final class InstrumentedConnectionFactoryTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final Server server = new Server();
   private final ServerConnector connector =
diff --git a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java
index 74d5d78..743c45c 100644
--- a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java
+++ b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHandlerTest.java
@@ -3,6 +3,7 @@ package io.dropwizard.metrics5.jetty11;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.AssertionsForClassTypes.assertThatCode;
 
@@ -15,7 +16,6 @@ import jakarta.servlet.WriteListener;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import java.util.concurrent.TimeUnit;
 import org.eclipse.jetty.client.HttpClient;
 import org.eclipse.jetty.client.api.ContentResponse;
@@ -28,7 +28,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedHandlerTest {
+final class InstrumentedHandlerTest {
   private final HttpClient client = new HttpClient();
   private final MetricRegistry registry = new MetricRegistry();
   private final Server server = new Server();
@@ -118,7 +118,7 @@ class InstrumentedHandlerTest {
   }
 
   @Test
-  public void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {
+  void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {
     InstrumentedHandler handler = new InstrumentedHandler(registry, "coarse", COARSE);
     handler.setHandler(new TestHandler());
     handler.setName("handler");
@@ -128,7 +128,7 @@ class InstrumentedHandlerTest {
   }
 
   @Test
-  public void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {
+  void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {
     InstrumentedHandler handler = new InstrumentedHandler(registry, "detailed", DETAILED);
     handler.setHandler(new TestHandler());
     handler.setName("handler");
@@ -137,8 +137,8 @@ class InstrumentedHandlerTest {
         .doesNotContainKey(MetricName.build("detailed", "handler", "percent-4xx-1m"));
   }
 
-  @Test
   @Disabled("flaky on virtual machines")
+  @Test
   void responseTimesAreRecordedForAsyncResponses() throws Exception {
 
     final ContentResponse response = client.GET(uri("/async"));
@@ -150,7 +150,7 @@ class InstrumentedHandlerTest {
 
   private void assertResponseTimesValid() {
     assertThat(registry.getMeters().get(metricName().resolve("200-responses")).getCount())
-        .isGreaterThan(0L);
+        .isPositive();
 
     assertThat(
             registry
@@ -158,11 +158,11 @@ class InstrumentedHandlerTest {
                 .get(metricName().resolve("get-requests"))
                 .getSnapshot()
                 .getMedian())
-        .isGreaterThan(0.0)
+        .isPositive()
         .isLessThan(TimeUnit.SECONDS.toNanos(1));
 
     assertThat(registry.getTimers().get(metricName().resolve("requests")).getSnapshot().getMedian())
-        .isGreaterThan(0.0)
+        .isPositive()
         .isLessThan(TimeUnit.SECONDS.toNanos(1));
   }
 
@@ -225,7 +225,7 @@ class InstrumentedHandlerTest {
                             @Override
                             public void onWritePossible() throws IOException {
                               servletOutputStream.write(
-                                  "some content from the async\n".getBytes(StandardCharsets.UTF_8));
+                                  "some content from the async\n".getBytes(UTF_8));
                               context.complete();
                             }
 
diff --git a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListenerTest.java b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListenerTest.java
index aab3f77..4120921 100644
--- a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListenerTest.java
+++ b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedHttpChannelListenerTest.java
@@ -1,6 +1,7 @@
 package io.dropwizard.metrics5.jetty11;
 
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 
 import io.dropwizard.metrics5.MetricName;
@@ -11,7 +12,6 @@ import jakarta.servlet.WriteListener;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import org.eclipse.jetty.client.HttpClient;
 import org.eclipse.jetty.client.api.ContentResponse;
 import org.eclipse.jetty.server.Request;
@@ -22,7 +22,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedHttpChannelListenerTest {
+final class InstrumentedHttpChannelListenerTest {
   private final HttpClient client = new HttpClient();
   private final Server server = new Server();
   private final ServerConnector connector = new ServerConnector(server);
@@ -188,7 +188,7 @@ class InstrumentedHttpChannelListenerTest {
                             @Override
                             public void onWritePossible() throws IOException {
                               servletOutputStream.write(
-                                  "some content from the async".getBytes(StandardCharsets.UTF_8));
+                                  "some content from the async".getBytes(UTF_8));
                               context.complete();
                             }
 
diff --git a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedQueuedThreadPoolTest.java b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedQueuedThreadPoolTest.java
index 464abd2..27d0872 100644
--- a/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedQueuedThreadPoolTest.java
+++ b/metrics-jetty11/src/test/java/io/dropwizard/metrics5/jetty11/InstrumentedQueuedThreadPoolTest.java
@@ -8,7 +8,7 @@ import org.eclipse.jetty.util.thread.QueuedThreadPool;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedQueuedThreadPoolTest {
+final class InstrumentedQueuedThreadPoolTest {
   private static final String PREFIX = "prefix";
 
   private MetricRegistry metricRegistry;
diff --git a/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java b/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java
index 0e556df..20760f9 100644
--- a/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java
+++ b/metrics-jetty12-ee10/src/test/java/io/dropwizard/metrics/jetty12/ee10/InstrumentedEE10HandlerTest.java
@@ -3,6 +3,7 @@ package io.dropwizard.metrics.jetty12.ee10;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.assertThatCode;
 
@@ -14,7 +15,6 @@ import jakarta.servlet.WriteListener;
 import jakarta.servlet.http.HttpServletRequest;
 import jakarta.servlet.http.HttpServletResponse;
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import java.util.concurrent.TimeUnit;
 import org.eclipse.jetty.client.ContentResponse;
 import org.eclipse.jetty.client.HttpClient;
@@ -32,7 +32,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedEE10HandlerTest {
+final class InstrumentedEE10HandlerTest {
   private final HttpClient client = new HttpClient();
   private final MetricRegistry registry = new MetricRegistry();
   private final Server server = new Server();
@@ -40,7 +40,7 @@ public class InstrumentedEE10HandlerTest {
   private final InstrumentedEE10Handler handler = new InstrumentedEE10Handler(registry, null, ALL);
 
   @BeforeEach
-  public void setUp() throws Exception {
+  void setUp() throws Exception {
     handler.setName("handler");
 
     TestHandler testHandler = new TestHandler();
@@ -62,18 +62,18 @@ public class InstrumentedEE10HandlerTest {
   }
 
   @AfterEach
-  public void tearDown() throws Exception {
+  void tearDown() throws Exception {
     server.stop();
     client.stop();
   }
 
   @Test
-  public void hasAName() throws Exception {
+  void hasAName() throws Exception {
     assertThat(handler.getName()).isEqualTo("handler");
   }
 
   @Test
-  public void createsAndRemovesMetricsForTheHandler() throws Exception {
+  void createsAndRemovesMetricsForTheHandler() throws Exception {
     final ContentResponse response = client.GET(uri("/hello"));
 
     assertThat(response.getStatus()).isEqualTo(404);
@@ -115,9 +115,9 @@ public class InstrumentedEE10HandlerTest {
     assertThat(registry.getNames()).isEmpty();
   }
 
-  @Test
   @Disabled("flaky on virtual machines")
-  public void responseTimesAreRecordedForBlockingResponses() throws Exception {
+  @Test
+  void responseTimesAreRecordedForBlockingResponses() throws Exception {
 
     final ContentResponse response = client.GET(uri("/blocking"));
 
@@ -127,7 +127,7 @@ public class InstrumentedEE10HandlerTest {
   }
 
   @Test
-  public void doStopDoesNotThrowNPE() throws Exception {
+  void doStopDoesNotThrowNPE() throws Exception {
     InstrumentedEE10Handler handler = new InstrumentedEE10Handler(registry, null, ALL);
     handler.setHandler(new TestHandler());
 
@@ -135,7 +135,7 @@ public class InstrumentedEE10HandlerTest {
   }
 
   @Test
-  public void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {
+  void gaugesAreRegisteredWithResponseMeteredLevelCoarse() throws Exception {
     InstrumentedEE10Handler handler = new InstrumentedEE10Handler(registry, "coarse", COARSE);
     handler.setHandler(new TestHandler());
     handler.setName("handler");
@@ -145,7 +145,7 @@ public class InstrumentedEE10HandlerTest {
   }
 
   @Test
-  public void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {
+  void gaugesAreNotRegisteredWithResponseMeteredLevelDetailed() throws Exception {
     InstrumentedEE10Handler handler = new InstrumentedEE10Handler(registry, "detailed", DETAILED);
     handler.setHandler(new TestHandler());
     handler.setName("handler");
@@ -154,9 +154,9 @@ public class InstrumentedEE10HandlerTest {
         .doesNotContainKey(MetricName.build("detailed", "handler", "percent-4xx-1m"));
   }
 
-  @Test
   @Disabled("flaky on virtual machines")
-  public void responseTimesAreRecordedForAsyncResponses() throws Exception {
+  @Test
+  void responseTimesAreRecordedForAsyncResponses() throws Exception {
 
     final ContentResponse response = client.GET(uri("/async"));
 
@@ -167,9 +167,9 @@ public class InstrumentedEE10HandlerTest {
 
   private void assertResponseTimesValid() {
     assertThat(registry.getMeters().get(metricName().resolve("2xx-responses")).getCount())
-        .isGreaterThan(0L);
+        .isPositive();
     assertThat(registry.getMeters().get(metricName().resolve(".200-responses")).getCount())
-        .isGreaterThan(0L);
+        .isPositive();
 
     assertThat(
             registry
@@ -177,12 +177,12 @@ public class InstrumentedEE10HandlerTest {
                 .get(metricName().resolve(".get-requests"))
                 .getSnapshot()
                 .getMedian())
-        .isGreaterThan(0.0)
+        .isPositive()
         .isLessThan(TimeUnit.SECONDS.toNanos(1));
 
     assertThat(
             registry.getTimers().get(metricName().resolve(".requests")).getSnapshot().getMedian())
-        .isGreaterThan(0.0)
+        .isPositive()
         .isLessThan(TimeUnit.SECONDS.toNanos(1));
   }
 
@@ -250,7 +250,7 @@ public class InstrumentedEE10HandlerTest {
                             @Override
                             public void onWritePossible() throws IOException {
                               servletOutputStream.write(
-                                  "some content from the async\n".getBytes(StandardCharsets.UTF_8));
+                                  "some content from the async\n".getBytes(UTF_8));
                               context.complete();
                               servletContextRequest.getServletChannel().handle();
                             }
diff --git a/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java b/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java
index e8e513f..8a7229d 100644
--- a/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java
+++ b/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/AbstractInstrumentedHandler.java
@@ -4,7 +4,10 @@ import static io.dropwizard.metrics5.MetricRegistry.name;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.ALL;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.COARSE;
 import static io.dropwizard.metrics5.annotation.ResponseMeteredLevel.DETAILED;
+import static java.util.Collections.unmodifiableList;
 
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricName;
@@ -13,7 +16,6 @@ import io.dropwizard.metrics5.RatioGauge;
 import io.dropwizard.metrics5.Timer;
 import io.dropwizard.metrics5.annotation.ResponseMeteredLevel;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Map;
@@ -164,7 +166,7 @@ public abstract class AbstractInstrumentedHandler extends Handler.Wrapper {
     this.responseCodeMeters =
         DETAILED_METER_LEVELS.contains(responseMeteredLevel)
             ? new ConcurrentHashMap<>()
-            : Collections.emptyMap();
+            : ImmutableMap.of();
 
     this.getRequests = metricRegistry.timer(prefix.resolve(NAME_GET_REQUESTS));
     this.postRequests = metricRegistry.timer(prefix.resolve(NAME_POST_REQUESTS));
@@ -179,7 +181,7 @@ public abstract class AbstractInstrumentedHandler extends Handler.Wrapper {
 
     if (COARSE_METER_LEVELS.contains(responseMeteredLevel)) {
       this.responses =
-          Collections.unmodifiableList(
+          unmodifiableList(
               Arrays.asList(
                   metricRegistry.meter(prefix.resolve(NAME_1XX_RESPONSES)), // 1xx
                   metricRegistry.meter(prefix.resolve(NAME_2XX_RESPONSES)), // 2xx
@@ -244,7 +246,7 @@ public abstract class AbstractInstrumentedHandler extends Handler.Wrapper {
             }
           });
     } else {
-      this.responses = Collections.emptyList();
+      this.responses = ImmutableList.of();
     }
   }
 
diff --git a/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java b/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java
index 1ec7ffc..cf26f20 100644
--- a/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java
+++ b/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactoryTest.java
@@ -19,7 +19,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedConnectionFactoryTest {
+final class InstrumentedConnectionFactoryTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final Server server = new Server();
   private final ServerConnector connector =
@@ -32,7 +32,7 @@ public class InstrumentedConnectionFactoryTest {
   private final HttpClient client = new HttpClient();
 
   @BeforeEach
-  public void setUp() throws Exception {
+  void setUp() throws Exception {
     server.setHandler(
         new Handler.Abstract() {
           @Override
@@ -50,13 +50,13 @@ public class InstrumentedConnectionFactoryTest {
   }
 
   @AfterEach
-  public void tearDown() throws Exception {
+  void tearDown() throws Exception {
     server.stop();
     client.stop();
   }
 
   @Test
-  public void instrumentsConnectionTimes() throws Exception {
+  void instrumentsConnectionTimes() throws Exception {
     final ContentResponse response =
         client.GET("http://localhost:" + connector.getLocalPort() + "/hello");
     assertThat(response.getStatus()).isEqualTo(200);
@@ -70,7 +70,7 @@ public class InstrumentedConnectionFactoryTest {
   }
 
   @Test
-  public void instrumentsActiveConnections() throws Exception {
+  void instrumentsActiveConnections() throws Exception {
     final Counter counter = registry.counter("http.active-connections");
 
     final ContentResponse response =
diff --git a/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java b/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java
index a69021b..9fa9616 100644
--- a/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java
+++ b/metrics-jetty12/src/test/java/io/dropwizard/metrics/jetty12/InstrumentedQueuedThreadPoolTest.java
@@ -7,20 +7,20 @@ import org.eclipse.jetty.util.thread.QueuedThreadPool;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedQueuedThreadPoolTest {
+final class InstrumentedQueuedThreadPoolTest {
   private static final String PREFIX = "prefix";
 
   private MetricRegistry metricRegistry;
   private InstrumentedQueuedThreadPool iqtp;
 
   @BeforeEach
-  public void setUp() {
+  void setUp() {
     metricRegistry = new MetricRegistry();
     iqtp = new InstrumentedQueuedThreadPool(metricRegistry);
   }
 
   @Test
-  public void customMetricsPrefix() throws Exception {
+  void customMetricsPrefix() throws Exception {
     iqtp.setPrefix(PREFIX);
     iqtp.start();
 
@@ -35,7 +35,7 @@ public class InstrumentedQueuedThreadPoolTest {
   }
 
   @Test
-  public void metricsPrefixBackwardCompatible() throws Exception {
+  void metricsPrefixBackwardCompatible() throws Exception {
     iqtp.start();
     assertThat(metricRegistry.getNames())
         .overridingErrorMessage("The default metrics prefix was changed")
diff --git a/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactory.java b/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactory.java
index 4b72b5d..642fd3a 100644
--- a/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactory.java
+++ b/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactory.java
@@ -10,7 +10,7 @@ import org.slf4j.LoggerFactory;
 public class DefaultObjectNameFactory implements ObjectNameFactory {
 
   private static final char[] QUOTABLE_CHARS = new char[] {',', '=', ':', '"'};
-  private static final Logger LOGGER = LoggerFactory.getLogger(JmxReporter.class);
+  private static final Logger LOG = LoggerFactory.getLogger(DefaultObjectNameFactory.class);
 
   @Override
   public ObjectName createName(String type, String domain, MetricName name) {
@@ -38,14 +38,13 @@ public class DefaultObjectNameFactory implements ObjectNameFactory {
           || shouldQuote(objectName.getKeyProperty("type"))) {
         properties.put("type", ObjectName.quote(type));
       }
-      objectName = new ObjectName(domain, properties);
+      return new ObjectName(domain, properties);
 
-      return objectName;
     } catch (MalformedObjectNameException e) {
       try {
         return new ObjectName(domain, "name", ObjectName.quote(name.getKey()));
       } catch (MalformedObjectNameException e1) {
-        LOGGER.warn("Unable to register {} {}", type, name, e1);
+        LOG.warn("Unable to register {} {}", type, name, e1);
         throw new RuntimeException(e1);
       }
     }
diff --git a/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java b/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java
index 085b4ef..d7c7b50 100644
--- a/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java
+++ b/metrics-jmx/src/main/java/io/dropwizard/metrics5/jmx/JmxReporter.java
@@ -1,5 +1,9 @@
 package io.dropwizard.metrics5.jmx;
 
+import static com.google.common.base.Preconditions.checkArgument;
+import static java.util.Collections.unmodifiableMap;
+
+import com.google.common.collect.ImmutableMap;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Gauge;
 import io.dropwizard.metrics5.Histogram;
@@ -13,7 +17,6 @@ import io.dropwizard.metrics5.Reporter;
 import io.dropwizard.metrics5.Timer;
 import java.io.Closeable;
 import java.lang.management.ManagementFactory;
-import java.util.Collections;
 import java.util.Locale;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
@@ -61,8 +64,8 @@ public class JmxReporter implements Reporter, Closeable {
       this.durationUnit = TimeUnit.MILLISECONDS;
       this.domain = "metrics";
       this.objectNameFactory = new DefaultObjectNameFactory();
-      this.specificDurationUnits = Collections.emptyMap();
-      this.specificRateUnits = Collections.emptyMap();
+      this.specificDurationUnits = ImmutableMap.of();
+      this.specificRateUnits = ImmutableMap.of();
     }
 
     /**
@@ -88,9 +91,7 @@ public class JmxReporter implements Reporter, Closeable {
     }
 
     public Builder createsObjectNamesWith(ObjectNameFactory onFactory) {
-      if (onFactory == null) {
-        throw new IllegalArgumentException("null objectNameFactory");
-      }
+      checkArgument(onFactory != null, "null objectNameFactory");
       this.objectNameFactory = onFactory;
       return this;
     }
@@ -129,7 +130,7 @@ public class JmxReporter implements Reporter, Closeable {
      * @return {@code this}
      */
     public Builder specificDurationUnits(Map<String, TimeUnit> specificDurationUnits) {
-      this.specificDurationUnits = Collections.unmodifiableMap(specificDurationUnits);
+      this.specificDurationUnits = unmodifiableMap(specificDurationUnits);
       return this;
     }
 
@@ -140,7 +141,7 @@ public class JmxReporter implements Reporter, Closeable {
      * @return {@code this}
      */
     public Builder specificRateUnits(Map<String, TimeUnit> specificRateUnits) {
-      this.specificRateUnits = Collections.unmodifiableMap(specificRateUnits);
+      this.specificRateUnits = unmodifiableMap(specificRateUnits);
       return this;
     }
 
@@ -159,7 +160,7 @@ public class JmxReporter implements Reporter, Closeable {
     }
   }
 
-  private static final Logger LOGGER = LoggerFactory.getLogger(JmxReporter.class);
+  private static final Logger LOG = LoggerFactory.getLogger(JmxReporter.class);
 
   @SuppressWarnings("UnusedDeclaration")
   public interface MetricMBean {
@@ -570,9 +571,9 @@ public class JmxReporter implements Reporter, Closeable {
           registerMBean(new JmxGauge(gauge, objectName), objectName);
         }
       } catch (InstanceAlreadyExistsException e) {
-        LOGGER.debug("Unable to register gauge", e);
+        LOG.debug("Unable to register gauge", e);
       } catch (JMException e) {
-        LOGGER.warn("Unable to register gauge", e);
+        LOG.warn("Unable to register gauge", e);
       }
     }
 
@@ -582,9 +583,9 @@ public class JmxReporter implements Reporter, Closeable {
         final ObjectName objectName = createName("gauges", name);
         unregisterMBean(objectName);
       } catch (InstanceNotFoundException e) {
-        LOGGER.debug("Unable to unregister gauge", e);
+        LOG.debug("Unable to unregister gauge", e);
       } catch (MBeanRegistrationException e) {
-        LOGGER.warn("Unable to unregister gauge", e);
+        LOG.warn("Unable to unregister gauge", e);
       }
     }
 
@@ -596,9 +597,9 @@ public class JmxReporter implements Reporter, Closeable {
           registerMBean(new JmxCounter(counter, objectName), objectName);
         }
       } catch (InstanceAlreadyExistsException e) {
-        LOGGER.debug("Unable to register counter", e);
+        LOG.debug("Unable to register counter", e);
       } catch (JMException e) {
-        LOGGER.warn("Unable to register counter", e);
+        LOG.warn("Unable to register counter", e);
       }
     }
 
@@ -608,9 +609,9 @@ public class JmxReporter implements Reporter, Closeable {
         final ObjectName objectName = createName("counters", name);
         unregisterMBean(objectName);
       } catch (InstanceNotFoundException e) {
-        LOGGER.debug("Unable to unregister counter", e);
+        LOG.debug("Unable to unregister counter", e);
       } catch (MBeanRegistrationException e) {
-        LOGGER.warn("Unable to unregister counter", e);
+        LOG.warn("Unable to unregister counter", e);
       }
     }
 
@@ -622,9 +623,9 @@ public class JmxReporter implements Reporter, Closeable {
           registerMBean(new JmxHistogram(histogram, objectName), objectName);
         }
       } catch (InstanceAlreadyExistsException e) {
-        LOGGER.debug("Unable to register histogram", e);
+        LOG.debug("Unable to register histogram", e);
       } catch (JMException e) {
-        LOGGER.warn("Unable to register histogram", e);
+        LOG.warn("Unable to register histogram", e);
       }
     }
 
@@ -634,9 +635,9 @@ public class JmxReporter implements Reporter, Closeable {
         final ObjectName objectName = createName("histograms", name);
         unregisterMBean(objectName);
       } catch (InstanceNotFoundException e) {
-        LOGGER.debug("Unable to unregister histogram", e);
+        LOG.debug("Unable to unregister histogram", e);
       } catch (MBeanRegistrationException e) {
-        LOGGER.warn("Unable to unregister histogram", e);
+        LOG.warn("Unable to unregister histogram", e);
       }
     }
 
@@ -649,9 +650,9 @@ public class JmxReporter implements Reporter, Closeable {
               new JmxMeter(meter, objectName, timeUnits.rateFor(name.getKey())), objectName);
         }
       } catch (InstanceAlreadyExistsException e) {
-        LOGGER.debug("Unable to register meter", e);
+        LOG.debug("Unable to register meter", e);
       } catch (JMException e) {
-        LOGGER.warn("Unable to register meter", e);
+        LOG.warn("Unable to register meter", e);
       }
     }
 
@@ -661,9 +662,9 @@ public class JmxReporter implements Reporter, Closeable {
         final ObjectName objectName = createName("meters", name);
         unregisterMBean(objectName);
       } catch (InstanceNotFoundException e) {
-        LOGGER.debug("Unable to unregister meter", e);
+        LOG.debug("Unable to unregister meter", e);
       } catch (MBeanRegistrationException e) {
-        LOGGER.warn("Unable to unregister meter", e);
+        LOG.warn("Unable to unregister meter", e);
       }
     }
 
@@ -681,9 +682,9 @@ public class JmxReporter implements Reporter, Closeable {
               objectName);
         }
       } catch (InstanceAlreadyExistsException e) {
-        LOGGER.debug("Unable to register timer", e);
+        LOG.debug("Unable to register timer", e);
       } catch (JMException e) {
-        LOGGER.warn("Unable to register timer", e);
+        LOG.warn("Unable to register timer", e);
       }
     }
 
@@ -693,9 +694,9 @@ public class JmxReporter implements Reporter, Closeable {
         final ObjectName objectName = createName("timers", name);
         unregisterMBean(objectName);
       } catch (InstanceNotFoundException e) {
-        LOGGER.debug("Unable to unregister timer", e);
+        LOG.debug("Unable to unregister timer", e);
       } catch (MBeanRegistrationException e) {
-        LOGGER.warn("Unable to unregister timer", e);
+        LOG.warn("Unable to unregister timer", e);
       }
     }
 
@@ -708,9 +709,9 @@ public class JmxReporter implements Reporter, Closeable {
         try {
           unregisterMBean(name);
         } catch (InstanceNotFoundException e) {
-          LOGGER.debug("Unable to unregister metric", e);
+          LOG.debug("Unable to unregister metric", e);
         } catch (MBeanRegistrationException e) {
-          LOGGER.warn("Unable to unregister metric", e);
+          LOG.warn("Unable to unregister metric", e);
         }
       }
       registered.clear();
diff --git a/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactoryTest.java b/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactoryTest.java
index 5fa8ffd..407c905 100644
--- a/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactoryTest.java
+++ b/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/DefaultObjectNameFactoryTest.java
@@ -7,7 +7,7 @@ import io.dropwizard.metrics5.MetricName;
 import javax.management.ObjectName;
 import org.junit.jupiter.api.Test;
 
-class DefaultObjectNameFactoryTest {
+final class DefaultObjectNameFactoryTest {
 
   @Test
   void createsObjectNameWithDomainInInput() {
diff --git a/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java b/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java
index cd5cc55..b32b472 100644
--- a/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java
+++ b/metrics-jmx/src/test/java/io/dropwizard/metrics5/jmx/JmxReporterTest.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5.jmx;
 
+import static java.util.UUID.randomUUID;
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.entry;
 import static org.assertj.core.api.Assertions.failBecauseExceptionWasNotThrown;
@@ -21,7 +22,6 @@ import io.dropwizard.metrics5.Timer;
 import java.lang.management.ManagementFactory;
 import java.util.SortedMap;
 import java.util.TreeMap;
-import java.util.UUID;
 import java.util.concurrent.TimeUnit;
 import javax.management.Attribute;
 import javax.management.AttributeList;
@@ -35,9 +35,9 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("rawtypes")
-class JmxReporterTest {
+final class JmxReporterTest {
   private final MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
-  private final String name = UUID.randomUUID().toString().replaceAll("[{\\-}]", "");
+  private final String name = randomUUID().toString().replaceAll("[{\\-}]", "");
   private final MetricRegistry registry = new MetricRegistry();
 
   private final JmxReporter reporter =
@@ -49,12 +49,12 @@ class JmxReporterTest {
           .filter(MetricFilter.ALL)
           .build();
 
-  private final Gauge gauge = mock(Gauge.class);
-  private final Counter counter = mock(Counter.class);
-  private final Histogram histogram = mock(Histogram.class);
-  private final Meter meter = mock(Meter.class);
-  private final Timer timer = mock(Timer.class);
-  private final ObjectNameFactory mockObjectNameFactory = mock(ObjectNameFactory.class);
+  private final Gauge gauge = mock();
+  private final Counter counter = mock();
+  private final Histogram histogram = mock();
+  private final Meter meter = mock();
+  private final Timer timer = mock();
+  private final ObjectNameFactory mockObjectNameFactory = mock();
   private final ObjectNameFactory concreteObjectNameFactory = reporter.getObjectNameFactory();
 
   @BeforeEach
@@ -66,7 +66,7 @@ class JmxReporterTest {
     when(histogram.getCount()).thenReturn(1L);
     when(histogram.getSum()).thenReturn(12L);
 
-    final Snapshot hSnapshot = mock(Snapshot.class);
+    final Snapshot hSnapshot = mock();
     when(hSnapshot.getMax()).thenReturn(2L);
     when(hSnapshot.getMean()).thenReturn(3.0);
     when(hSnapshot.getMin()).thenReturn(4L);
@@ -95,7 +95,7 @@ class JmxReporterTest {
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot tSnapshot = mock(Snapshot.class);
+    final Snapshot tSnapshot = mock();
     when(tSnapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(tSnapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(tSnapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
@@ -285,7 +285,7 @@ class JmxReporterTest {
 
   @Test
   void objectNameModifyingMBeanServer() throws Exception {
-    MBeanServer mockedMBeanServer = mock(MBeanServer.class);
+    MBeanServer mockedMBeanServer = mock();
 
     // overwrite the objectName
     when(mockedMBeanServer.registerMBean(any(Object.class), any(ObjectName.class)))
@@ -310,7 +310,7 @@ class JmxReporterTest {
   }
 
   @Test
-  void testJmxMetricNameWithAsterisk() {
+  void jmxMetricNameWithAsterisk() {
     MetricRegistry metricRegistry = new MetricRegistry();
     JmxReporter.forRegistry(metricRegistry).build().start();
     metricRegistry.counter("test*");
diff --git a/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java b/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java
index 69ee5d1..0c6cfcf 100644
--- a/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java
+++ b/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java
@@ -1,14 +1,15 @@
 package io.dropwizard.metrics5.json;
 
+
 import com.fasterxml.jackson.core.JsonGenerator;
 import com.fasterxml.jackson.core.Version;
 import com.fasterxml.jackson.databind.Module;
 import com.fasterxml.jackson.databind.SerializerProvider;
 import com.fasterxml.jackson.databind.module.SimpleSerializers;
 import com.fasterxml.jackson.databind.ser.std.StdSerializer;
+import com.google.common.collect.ImmutableList;
 import io.dropwizard.metrics5.health.HealthCheck;
 import java.io.IOException;
-import java.util.Collections;
 import java.util.Map;
 
 public class HealthCheckModule extends Module {
@@ -80,6 +81,6 @@ public class HealthCheckModule extends Module {
   @Override
   public void setupModule(SetupContext context) {
     context.addSerializers(
-        new SimpleSerializers(Collections.singletonList(new HealthCheckResultSerializer())));
+        new SimpleSerializers(ImmutableList.of(new HealthCheckResultSerializer())));
   }
 }
diff --git a/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java b/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java
index 0f8c76b..fad833a 100644
--- a/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java
+++ b/metrics-json/src/test/java/io/dropwizard/metrics5/json/HealthCheckModuleTest.java
@@ -10,15 +10,14 @@ import java.util.LinkedHashMap;
 import java.util.Map;
 import org.junit.jupiter.api.Test;
 
-class HealthCheckModuleTest {
+final class HealthCheckModuleTest {
   private final ObjectMapper mapper = new ObjectMapper().registerModule(new HealthCheckModule());
 
   @Test
   void serializesAHealthyResult() throws Exception {
     HealthCheck.Result result = HealthCheck.Result.healthy();
     assertThat(mapper.writeValueAsString(result))
-        .isEqualTo(
-            "{\"healthy\":true,\"duration\":0,\"timestamp\":\"" + result.getTimestamp() + "\"}");
+        .isEqualTo("{\"healthy\":true,\"duration\":0,\"timestamp\":\"%s\"}", result.getTimestamp());
   }
 
   @Test
@@ -26,14 +25,8 @@ class HealthCheckModuleTest {
     HealthCheck.Result result = HealthCheck.Result.healthy("yay for %s", "me");
     assertThat(mapper.writeValueAsString(result))
         .isEqualTo(
-            "{"
-                + "\"healthy\":true,"
-                + "\"message\":\"yay for me\","
-                + "\"duration\":0,"
-                + "\"timestamp\":\""
-                + result.getTimestamp()
-                + "\""
-                + "}");
+            "{\"healthy\":true,\"message\":\"yay for me\",\"duration\":0,\"timestamp\":\"%s\"}",
+            result.getTimestamp());
   }
 
   @Test
@@ -41,14 +34,8 @@ class HealthCheckModuleTest {
     HealthCheck.Result result = HealthCheck.Result.unhealthy("boo");
     assertThat(mapper.writeValueAsString(result))
         .isEqualTo(
-            "{"
-                + "\"healthy\":false,"
-                + "\"message\":\"boo\","
-                + "\"duration\":0,"
-                + "\"timestamp\":\""
-                + result.getTimestamp()
-                + "\""
-                + "}");
+            "{\"healthy\":false,\"message\":\"boo\",\"duration\":0,\"timestamp\":\"%s\"}",
+            result.getTimestamp());
   }
 
   @Test
@@ -60,19 +47,8 @@ class HealthCheckModuleTest {
     HealthCheck.Result result = HealthCheck.Result.unhealthy(e);
     assertThat(mapper.writeValueAsString(result))
         .isEqualTo(
-            "{"
-                + "\"healthy\":false,"
-                + "\"message\":\"oh no\","
-                + "\"error\":{"
-                + "\"type\":\"java.lang.RuntimeException\","
-                + "\"message\":\"oh no\","
-                + "\"stack\":[\"Blah.bloo(Blah.java:100)\"]"
-                + "},"
-                + "\"duration\":0,"
-                + "\"timestamp\":\""
-                + result.getTimestamp()
-                + "\""
-                + "}");
+            "{\"healthy\":false,\"message\":\"oh no\",\"error\":{\"type\":\"java.lang.RuntimeException\",\"message\":\"oh no\",\"stack\":[\"Blah.bloo(Blah.java:100)\"]},\"duration\":0,\"timestamp\":\"%s\"}",
+            result.getTimestamp());
   }
 
   @Test
@@ -88,24 +64,8 @@ class HealthCheckModuleTest {
     HealthCheck.Result result = HealthCheck.Result.unhealthy(b);
     assertThat(mapper.writeValueAsString(result))
         .isEqualTo(
-            "{"
-                + "\"healthy\":false,"
-                + "\"message\":\"oh well\","
-                + "\"error\":{"
-                + "\"type\":\"java.lang.RuntimeException\","
-                + "\"message\":\"oh well\","
-                + "\"stack\":[\"Blah.blee(Blah.java:150)\"],"
-                + "\"cause\":{"
-                + "\"type\":\"java.lang.RuntimeException\","
-                + "\"message\":\"oh no\","
-                + "\"stack\":[\"Blah.bloo(Blah.java:100)\"]"
-                + "}"
-                + "},"
-                + "\"duration\":0,"
-                + "\"timestamp\":\""
-                + result.getTimestamp()
-                + "\""
-                + "}");
+            "{\"healthy\":false,\"message\":\"oh well\",\"error\":{\"type\":\"java.lang.RuntimeException\",\"message\":\"oh well\",\"stack\":[\"Blah.blee(Blah.java:150)\"],\"cause\":{\"type\":\"java.lang.RuntimeException\",\"message\":\"oh no\",\"stack\":[\"Blah.bloo(Blah.java:100)\"]}},\"duration\":0,\"timestamp\":\"%s\"}",
+            result.getTimestamp());
   }
 
   @Test
@@ -129,23 +89,7 @@ class HealthCheckModuleTest {
 
     assertThat(mapper.writeValueAsString(result))
         .isEqualTo(
-            "{"
-                + "\"healthy\":true,"
-                + "\"duration\":0,"
-                + "\"boolean\":true,"
-                + "\"integer\":1,"
-                + "\"long\":2,"
-                + "\"float\":3.546,"
-                + "\"double\":4.567,"
-                + "\"BigInteger\":12345,"
-                + "\"BigDecimal\":12345.56789,"
-                + "\"String\":\"string\","
-                + "\"complex\":{"
-                + "\"field\":\"value\""
-                + "},"
-                + "\"timestamp\":\""
-                + result.getTimestamp()
-                + "\""
-                + "}");
+            "{\"healthy\":true,\"duration\":0,\"boolean\":true,\"integer\":1,\"long\":2,\"float\":3.546,\"double\":4.567,\"BigInteger\":12345,\"BigDecimal\":12345.56789,\"String\":\"string\",\"complex\":{\"field\":\"value\"},\"timestamp\":\"%s\"}",
+            result.getTimestamp());
   }
 }
diff --git a/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java b/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java
index 8fe2c7d..401a8f3 100644
--- a/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java
+++ b/metrics-json/src/test/java/io/dropwizard/metrics5/json/MetricsModuleTest.java
@@ -16,7 +16,7 @@ import io.dropwizard.metrics5.Timer;
 import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
-class MetricsModuleTest {
+final class MetricsModuleTest {
   private final ObjectMapper mapper =
       new ObjectMapper()
           .registerModule(
@@ -42,7 +42,7 @@ class MetricsModuleTest {
 
   @Test
   void serializesCounters() throws Exception {
-    final Counter counter = mock(Counter.class);
+    final Counter counter = mock();
     when(counter.getCount()).thenReturn(100L);
 
     assertThat(mapper.writeValueAsString(counter)).isEqualTo("{\"count\":100}");
@@ -50,10 +50,10 @@ class MetricsModuleTest {
 
   @Test
   void serializesHistograms() throws Exception {
-    final Histogram histogram = mock(Histogram.class);
+    final Histogram histogram = mock();
     when(histogram.getCount()).thenReturn(1L);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(2L);
     when(snapshot.getMean()).thenReturn(3.0);
     when(snapshot.getMin()).thenReturn(4L);
@@ -107,7 +107,7 @@ class MetricsModuleTest {
 
   @Test
   void serializesMeters() throws Exception {
-    final Meter meter = mock(Meter.class);
+    final Meter meter = mock();
     when(meter.getCount()).thenReturn(1L);
     when(meter.getMeanRate()).thenReturn(2.0);
     when(meter.getOneMinuteRate()).thenReturn(5.0);
@@ -127,14 +127,14 @@ class MetricsModuleTest {
 
   @Test
   void serializesTimers() throws Exception {
-    final Timer timer = mock(Timer.class);
+    final Timer timer = mock();
     when(timer.getCount()).thenReturn(1L);
     when(timer.getMeanRate()).thenReturn(2.0);
     when(timer.getOneMinuteRate()).thenReturn(3.0);
     when(timer.getFiveMinuteRate()).thenReturn(4.0);
     when(timer.getFifteenMinuteRate()).thenReturn(5.0);
 
-    final Snapshot snapshot = mock(Snapshot.class);
+    final Snapshot snapshot = mock();
     when(snapshot.getMax()).thenReturn(TimeUnit.MILLISECONDS.toNanos(100));
     when(snapshot.getMean()).thenReturn((double) TimeUnit.MILLISECONDS.toNanos(200));
     when(snapshot.getMin()).thenReturn(TimeUnit.MILLISECONDS.toNanos(300));
diff --git a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSet.java b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSet.java
index d90d7d8..2bce9f4 100644
--- a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSet.java
+++ b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSet.java
@@ -1,10 +1,11 @@
 package io.dropwizard.metrics5.jvm;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.Metric;
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricRegistry;
 import io.dropwizard.metrics5.MetricSet;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
 import javax.management.JMException;
@@ -19,7 +20,7 @@ import org.slf4j.LoggerFactory;
  * <p>These JMX objects are only available on Java 7 and above.
  */
 public class BufferPoolMetricSet implements MetricSet {
-  private static final Logger LOGGER = LoggerFactory.getLogger(BufferPoolMetricSet.class);
+  private static final Logger LOG = LoggerFactory.getLogger(BufferPoolMetricSet.class);
   private static final String[] ATTRIBUTES = {"Count", "MemoryUsed", "TotalCapacity"};
   private static final String[] NAMES = {"count", "used", "capacity"};
   private static final String[] POOLS = {"direct", "mapped"};
@@ -43,10 +44,10 @@ public class BufferPoolMetricSet implements MetricSet {
           gauges.put(
               MetricRegistry.name(pool, name), new JmxAttributeGauge(mBeanServer, on, attribute));
         } catch (JMException ignored) {
-          LOGGER.debug("Unable to load buffer pool MBeans, possibly running on Java 6");
+          LOG.debug("Unable to load buffer pool MBeans, possibly running on Java 6");
         }
       }
     }
-    return Collections.unmodifiableMap(gauges);
+    return unmodifiableMap(gauges);
   }
 }
diff --git a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSet.java b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSet.java
index 35a031e..63792f9 100644
--- a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSet.java
+++ b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSet.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.jvm;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.Gauge;
 import io.dropwizard.metrics5.Metric;
 import io.dropwizard.metrics5.MetricName;
@@ -9,7 +11,6 @@ import java.lang.management.GarbageCollectorMXBean;
 import java.lang.management.ManagementFactory;
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -43,6 +44,6 @@ public class GarbageCollectorMetricSet implements MetricSet {
       gauges.put(MetricRegistry.name(name, "count"), (Gauge<Long>) gc::getCollectionCount);
       gauges.put(MetricRegistry.name(name, "time"), (Gauge<Long>) gc::getCollectionTime);
     }
-    return Collections.unmodifiableMap(gauges);
+    return unmodifiableMap(gauges);
   }
 }
diff --git a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSet.java b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSet.java
index 3a19d83..67a16e9 100644
--- a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSet.java
+++ b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSet.java
@@ -1,12 +1,13 @@
 package io.dropwizard.metrics5.jvm;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.Gauge;
 import io.dropwizard.metrics5.Metric;
 import io.dropwizard.metrics5.MetricName;
 import io.dropwizard.metrics5.MetricSet;
 import java.lang.management.ManagementFactory;
 import java.lang.management.RuntimeMXBean;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.Locale;
 import java.util.Map;
@@ -47,6 +48,6 @@ public class JvmAttributeGaugeSet implements MetricSet {
                     runtime.getSpecVersion()));
     gauges.put(MetricName.build("uptime"), (Gauge<Long>) runtime::getUptime);
 
-    return Collections.unmodifiableMap(gauges);
+    return unmodifiableMap(gauges);
   }
 }
diff --git a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSet.java b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSet.java
index 60a2772..0c7ce49 100644
--- a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSet.java
+++ b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSet.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.jvm;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.Gauge;
 import io.dropwizard.metrics5.Metric;
 import io.dropwizard.metrics5.MetricName;
@@ -12,7 +14,6 @@ import java.lang.management.MemoryPoolMXBean;
 import java.lang.management.MemoryUsage;
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -139,6 +140,6 @@ public class MemoryUsageGaugeSet implements MetricSet {
           MetricRegistry.name(poolName, "init"), (Gauge<Long>) () -> pool.getUsage().getInit());
     }
 
-    return Collections.unmodifiableMap(gauges);
+    return unmodifiableMap(gauges);
   }
 }
diff --git a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java
index 40dc851..c973272 100644
--- a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java
+++ b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetector.java
@@ -1,9 +1,11 @@
 package io.dropwizard.metrics5.jvm;
 
+import static java.util.Collections.unmodifiableSet;
+
+import com.google.common.collect.ImmutableSet;
 import java.lang.management.ManagementFactory;
 import java.lang.management.ThreadInfo;
 import java.lang.management.ThreadMXBean;
-import java.util.Collections;
 import java.util.HashSet;
 import java.util.Set;
 
@@ -40,19 +42,16 @@ public class ThreadDeadlockDetector {
       for (ThreadInfo info : threads.getThreadInfo(ids, MAX_STACK_TRACE_DEPTH)) {
         final StringBuilder stackTrace = new StringBuilder();
         for (StackTraceElement element : info.getStackTrace()) {
-          stackTrace.append("\t at ").append(element.toString()).append(String.format("%n"));
+          stackTrace.append("\t at ").append(element).append(String.format("%n"));
         }
 
         deadlocks.add(
             String.format(
                 "%s locked on %s (owned by %s):%n%s",
-                info.getThreadName(),
-                info.getLockName(),
-                info.getLockOwnerName(),
-                stackTrace.toString()));
+                info.getThreadName(), info.getLockName(), info.getLockOwnerName(), stackTrace));
       }
-      return Collections.unmodifiableSet(deadlocks);
+      return unmodifiableSet(deadlocks);
     }
-    return Collections.emptySet();
+    return ImmutableSet.of();
   }
 }
diff --git a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSet.java b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSet.java
index 2d12960..1db9950 100644
--- a/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSet.java
+++ b/metrics-jvm/src/main/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSet.java
@@ -1,5 +1,7 @@
 package io.dropwizard.metrics5.jvm;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.Gauge;
 import io.dropwizard.metrics5.Metric;
 import io.dropwizard.metrics5.MetricName;
@@ -8,7 +10,6 @@ import io.dropwizard.metrics5.MetricSet;
 import java.lang.management.ManagementFactory;
 import java.lang.management.ThreadInfo;
 import java.lang.management.ThreadMXBean;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
@@ -59,7 +60,7 @@ public class ThreadStatesGaugeSet implements MetricSet {
     gauges.put(
         MetricName.build("deadlocks"), (Gauge<Set<String>>) deadlockDetector::getDeadlockedThreads);
 
-    return Collections.unmodifiableMap(gauges);
+    return unmodifiableMap(gauges);
   }
 
   private int getThreadCount(Thread.State state) {
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java
index f622832..c497fc3 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java
@@ -13,7 +13,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("rawtypes")
-class BufferPoolMetricSetTest {
+final class BufferPoolMetricSetTest {
 
   private static final MetricName DIRECT = MetricName.build("direct");
   private static final MetricName MAPPED = MetricName.build("mapped");
@@ -24,7 +24,7 @@ class BufferPoolMetricSetTest {
   private static final MetricName MAPPED_CAPACITY = MAPPED.resolve("capacity");
   private static final MetricName MAPPED_USED = MAPPED.resolve("used");
 
-  private final MBeanServer mBeanServer = mock(MBeanServer.class);
+  private final MBeanServer mBeanServer = mock();
   private final BufferPoolMetricSet buffers = new BufferPoolMetricSet(mBeanServer);
 
   private ObjectName mapped;
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ClassLoadingGaugeSetTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ClassLoadingGaugeSetTest.java
index acefde0..24412e2 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ClassLoadingGaugeSetTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ClassLoadingGaugeSetTest.java
@@ -11,9 +11,9 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("rawtypes")
-class ClassLoadingGaugeSetTest {
+final class ClassLoadingGaugeSetTest {
 
-  private final ClassLoadingMXBean cl = mock(ClassLoadingMXBean.class);
+  private final ClassLoadingMXBean cl = mock();
   private final ClassLoadingGaugeSet gauges = new ClassLoadingGaugeSet(cl);
 
   @BeforeEach
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java
index db5d8f8..9b633ad 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/CpuTimeClockTest.java
@@ -6,7 +6,7 @@ import static org.assertj.core.api.Assertions.offset;
 import java.lang.management.ManagementFactory;
 import org.junit.jupiter.api.Test;
 
-class CpuTimeClockTest {
+final class CpuTimeClockTest {
 
   @Test
   void cpuTimeClock() {
@@ -14,10 +14,10 @@ class CpuTimeClockTest {
 
     final long clockTime = clock.getTime();
     final long systemTime = System.currentTimeMillis();
-    assertThat((double) clockTime).isEqualTo(systemTime, offset(200.0));
+    assertThat((double) clockTime).isCloseTo(systemTime, offset(200.0));
 
     final long clockTick = clock.getTick();
     final long systemTick = ManagementFactory.getThreadMXBean().getCurrentThreadCpuTime();
-    assertThat((double) clockTick).isEqualTo(systemTick, offset(1000000.0));
+    assertThat((double) clockTick).isCloseTo(systemTick, offset(1000000.0));
   }
 }
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java
index 5e9db15..019d29c 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java
@@ -1,5 +1,6 @@
 package io.dropwizard.metrics5.jvm;
 
+import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.jupiter.api.Assumptions.assumeTrue;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
@@ -12,8 +13,8 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("UnusedDeclaration")
-class FileDescriptorRatioGaugeTest {
-  private final UnixOperatingSystemMXBean os = mock(UnixOperatingSystemMXBean.class);
+final class FileDescriptorRatioGaugeTest {
+  private final UnixOperatingSystemMXBean os = mock();
 
   private final FileDescriptorRatioGauge gauge = new FileDescriptorRatioGauge(os);
 
@@ -25,7 +26,7 @@ class FileDescriptorRatioGaugeTest {
 
   @Test
   void calculatesTheRatioOfUsedToTotalFileDescriptors() {
-    Assertions.assertThat(gauge.getValue()).isEqualTo(0.1);
+    assertThat(gauge.getValue()).isEqualTo(0.1);
   }
 
   @Test
@@ -34,14 +35,12 @@ class FileDescriptorRatioGaugeTest {
     assumeTrue(osBean instanceof com.sun.management.UnixOperatingSystemMXBean);
 
     Assertions.assertThat(new FileDescriptorRatioGauge().getValue())
-        .isGreaterThanOrEqualTo(0.0)
+        .isNotNegative()
         .isLessThanOrEqualTo(1.0);
   }
 
   @Test
   void returnsNaNWhenTheInformationIsUnavailable() {
-    Assertions.assertThat(
-            new FileDescriptorRatioGauge(mock(OperatingSystemMXBean.class)).getValue())
-        .isNaN();
+    assertThat(new FileDescriptorRatioGauge(mock(OperatingSystemMXBean.class)).getValue()).isNaN();
   }
 }
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java
index 5e7f1bd..c32dccb 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/GarbageCollectorMetricSetTest.java
@@ -4,18 +4,18 @@ import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
+import com.google.common.collect.ImmutableList;
 import io.dropwizard.metrics5.Gauge;
 import io.dropwizard.metrics5.MetricName;
 import java.lang.management.GarbageCollectorMXBean;
-import java.util.Collections;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("unchecked")
-class GarbageCollectorMetricSetTest {
-  private final GarbageCollectorMXBean gc = mock(GarbageCollectorMXBean.class);
+final class GarbageCollectorMetricSetTest {
+  private final GarbageCollectorMXBean gc = mock();
   private final GarbageCollectorMetricSet metrics =
-      new GarbageCollectorMetricSet(Collections.singletonList(gc));
+      new GarbageCollectorMetricSet(ImmutableList.of(gc));
 
   private static final MetricName PS_OLDGEN_TIME = MetricName.build("PS-OldGen.time");
   private static final MetricName PS_OLDGEN_COUNT = MetricName.build("PS-OldGen.count");
@@ -46,6 +46,6 @@ class GarbageCollectorMetricSetTest {
 
   @Test
   void autoDiscoversGCs() {
-    assertThat(new GarbageCollectorMetricSet().getMetrics().keySet()).isNotEmpty();
+    assertThat(new GarbageCollectorMetricSet().getMetrics()).isNotEmpty();
   }
 }
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JmxAttributeGaugeTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JmxAttributeGaugeTest.java
index 9e7e876..dec09ab 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JmxAttributeGaugeTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JmxAttributeGaugeTest.java
@@ -13,7 +13,7 @@ import org.junit.jupiter.api.AfterAll;
 import org.junit.jupiter.api.BeforeAll;
 import org.junit.jupiter.api.Test;
 
-class JmxAttributeGaugeTest {
+final class JmxAttributeGaugeTest {
 
   private static MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
 
@@ -53,7 +53,7 @@ class JmxAttributeGaugeTest {
     JmxAttributeGauge gauge = new JmxAttributeGauge(mBeanServer, objectName, "LoadedClassCount");
 
     assertThat(gauge.getValue()).isInstanceOf(Integer.class);
-    assertThat((Integer) gauge.getValue()).isGreaterThan(0);
+    assertThat((Integer) gauge.getValue()).isPositive();
   }
 
   @Test
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSetTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSetTest.java
index 3a50f92..d56cf8b 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSetTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/JvmAttributeGaugeSetTest.java
@@ -11,8 +11,8 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("unchecked")
-class JvmAttributeGaugeSetTest {
-  private final RuntimeMXBean runtime = mock(RuntimeMXBean.class);
+final class JvmAttributeGaugeSetTest {
+  private final RuntimeMXBean runtime = mock();
   private final JvmAttributeGaugeSet gauges = new JvmAttributeGaugeSet(runtime);
 
   @BeforeEach
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java
index 9ebceed..96c5879 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/MemoryUsageGaugeSetTest.java
@@ -14,15 +14,15 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("rawtypes")
-class MemoryUsageGaugeSetTest {
-  private final MemoryUsage heap = mock(MemoryUsage.class);
-  private final MemoryUsage nonHeap = mock(MemoryUsage.class);
-  private final MemoryUsage pool = mock(MemoryUsage.class);
-  private final MemoryUsage weirdPool = mock(MemoryUsage.class);
-  private final MemoryUsage weirdCollection = mock(MemoryUsage.class);
-  private final MemoryMXBean mxBean = mock(MemoryMXBean.class);
-  private final MemoryPoolMXBean memoryPool = mock(MemoryPoolMXBean.class);
-  private final MemoryPoolMXBean weirdMemoryPool = mock(MemoryPoolMXBean.class);
+final class MemoryUsageGaugeSetTest {
+  private final MemoryUsage heap = mock();
+  private final MemoryUsage nonHeap = mock();
+  private final MemoryUsage pool = mock();
+  private final MemoryUsage weirdPool = mock();
+  private final MemoryUsage weirdCollection = mock();
+  private final MemoryMXBean mxBean = mock();
+  private final MemoryPoolMXBean memoryPool = mock();
+  private final MemoryPoolMXBean weirdMemoryPool = mock();
 
   private final MemoryUsageGaugeSet gauges =
       new MemoryUsageGaugeSet(mxBean, Arrays.asList(memoryPool, weirdMemoryPool));
@@ -159,7 +159,7 @@ class MemoryUsageGaugeSetTest {
   }
 
   @Test
-  public void hasAGaugeForTotalMaxWhenNonHeapMaxUndefined() {
+  void hasAGaugeForTotalMaxWhenNonHeapMaxUndefined() {
     when(nonHeap.getMax()).thenReturn(-1L);
 
     final Gauge gauge = (Gauge) gauges.getMetrics().get(TOTAL_MAX);
@@ -238,7 +238,7 @@ class MemoryUsageGaugeSetTest {
   }
 
   @Test
-  public void hasAGaugeForNonHeapUsageWhenNonHeapMaxUndefined() {
+  void hasAGaugeForNonHeapUsageWhenNonHeapMaxUndefined() {
     when(nonHeap.getMax()).thenReturn(-1L);
     final Gauge gauge = (Gauge) gauges.getMetrics().get(NON_HEAP_USAGE);
 
@@ -296,6 +296,6 @@ class MemoryUsageGaugeSetTest {
 
   @Test
   void autoDetectsMemoryUsageBeanAndMemoryPools() {
-    assertThat(new MemoryUsageGaugeSet().getMetrics().keySet()).isNotEmpty();
+    assertThat(new MemoryUsageGaugeSet().getMetrics()).isNotEmpty();
   }
 }
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java
index 98850d7..4367c03 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDeadlockDetectorTest.java
@@ -11,8 +11,8 @@ import java.lang.management.ThreadMXBean;
 import java.util.Locale;
 import org.junit.jupiter.api.Test;
 
-class ThreadDeadlockDetectorTest {
-  private final ThreadMXBean threads = mock(ThreadMXBean.class);
+final class ThreadDeadlockDetectorTest {
+  private final ThreadMXBean threads = mock();
   private final ThreadDeadlockDetector detector = new ThreadDeadlockDetector(threads);
 
   @Test
@@ -24,7 +24,7 @@ class ThreadDeadlockDetectorTest {
 
   @Test
   void returnsASetOfThreadsIfAnyAreDeadlocked() {
-    final ThreadInfo thread1 = mock(ThreadInfo.class);
+    final ThreadInfo thread1 = mock();
     when(thread1.getThreadName()).thenReturn("thread1");
     when(thread1.getLockName()).thenReturn("lock2");
     when(thread1.getLockOwnerName()).thenReturn("thread2");
@@ -35,7 +35,7 @@ class ThreadDeadlockDetectorTest {
               new StackTraceElement("Blah", "blee", "Blah.java", 100)
             });
 
-    final ThreadInfo thread2 = mock(ThreadInfo.class);
+    final ThreadInfo thread2 = mock();
     when(thread2.getThreadName()).thenReturn("thread2");
     when(thread2.getLockName()).thenReturn("lock1");
     when(thread2.getLockOwnerName()).thenReturn("thread1");
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java
index c89c824..1eeac39 100755
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadDumpTest.java
@@ -14,11 +14,11 @@ import org.junit.jupiter.api.Test;
 
 // TODO: 3/12/13 <coda> -- improve test coverage for ThreadDump
 
-class ThreadDumpTest {
-  private final ThreadMXBean threadMXBean = mock(ThreadMXBean.class);
+final class ThreadDumpTest {
+  private final ThreadMXBean threadMXBean = mock();
   private final ThreadDump threadDump = new ThreadDump(threadMXBean);
 
-  private final ThreadInfo runnable = mock(ThreadInfo.class);
+  private final ThreadInfo runnable = mock();
 
   @BeforeEach
   void setUp() {
@@ -39,8 +39,8 @@ class ThreadDumpTest {
     final ByteArrayOutputStream output = new ByteArrayOutputStream();
     threadDump.dump(output);
 
-    assertThat(output.toString())
-        .isEqualTo(
+    assertThat(output)
+        .hasToString(
             String.format(
                 "\"runnable\" id=100 state=RUNNABLE%n"
                     + "    at Blah.blee(Blah.java:100)%n"
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java
index d5896e7..8d20493 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/ThreadStatesGaugeSetTest.java
@@ -10,22 +10,21 @@ import java.lang.management.ThreadInfo;
 import java.lang.management.ThreadMXBean;
 import java.util.HashSet;
 import java.util.Set;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class ThreadStatesGaugeSetTest {
-  private final ThreadMXBean threads = mock(ThreadMXBean.class);
-  private final ThreadDeadlockDetector detector = mock(ThreadDeadlockDetector.class);
+final class ThreadStatesGaugeSetTest {
+  private final ThreadMXBean threads = mock();
+  private final ThreadDeadlockDetector detector = mock();
   private final ThreadStatesGaugeSet gauges = new ThreadStatesGaugeSet(threads, detector);
   private final long[] ids = new long[] {1, 2, 3};
 
-  private final ThreadInfo newThread = mock(ThreadInfo.class);
-  private final ThreadInfo runnableThread = mock(ThreadInfo.class);
-  private final ThreadInfo blockedThread = mock(ThreadInfo.class);
-  private final ThreadInfo waitingThread = mock(ThreadInfo.class);
-  private final ThreadInfo timedWaitingThread = mock(ThreadInfo.class);
-  private final ThreadInfo terminatedThread = mock(ThreadInfo.class);
+  private final ThreadInfo newThread = mock();
+  private final ThreadInfo runnableThread = mock();
+  private final ThreadInfo blockedThread = mock();
+  private final ThreadInfo waitingThread = mock();
+  private final ThreadInfo timedWaitingThread = mock();
+  private final ThreadInfo terminatedThread = mock();
 
   private final Set<String> deadlocks = new HashSet<>();
 
@@ -87,7 +86,7 @@ class ThreadStatesGaugeSetTest {
 
   @Test
   void hasAGaugeForEachThreadState() {
-    Assertions.assertThat(((Gauge<?>) gauges.getMetrics().get(NEW_COUNT)).getValue()).isEqualTo(1);
+    assertThat(((Gauge<?>) gauges.getMetrics().get(NEW_COUNT)).getValue()).isEqualTo(1);
 
     assertThat(((Gauge<?>) gauges.getMetrics().get(RUNNABLE_COUNT)).getValue()).isEqualTo(1);
 
diff --git a/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java b/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java
index b176fb3..3c16b02 100644
--- a/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java
+++ b/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java
@@ -1,16 +1,16 @@
 package com.codahale.metrics;
 
+import static java.util.Collections.unmodifiableSortedMap;
 import static java.util.Collections.unmodifiableSortedSet;
 import static java.util.Objects.requireNonNull;
+import static java.util.stream.Collectors.toCollection;
 
 import io.dropwizard.metrics5.MetricName;
-import java.util.Collections;
 import java.util.Map;
 import java.util.SortedMap;
 import java.util.SortedSet;
 import java.util.TreeMap;
 import java.util.TreeSet;
-import java.util.stream.Collectors;
 
 @Deprecated
 public class MetricRegistry implements MetricSet {
@@ -102,9 +102,7 @@ public class MetricRegistry implements MetricSet {
 
   public SortedSet<String> getNames() {
     return unmodifiableSortedSet(
-        delegate.getNames().stream()
-            .map(MetricName::getKey)
-            .collect(Collectors.toCollection(TreeSet::new)));
+        delegate.getNames().stream().map(MetricName::getKey).collect(toCollection(TreeSet::new)));
   }
 
   public SortedMap<String, Gauge> getGauges() {
@@ -160,7 +158,7 @@ public class MetricRegistry implements MetricSet {
         metrics.entrySet()) {
       items.put(entry.getKey().getKey(), (T) Metric.of(entry.getValue()));
     }
-    return Collections.unmodifiableSortedMap(items);
+    return unmodifiableSortedMap(items);
   }
 
   @Override
diff --git a/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricSet.java b/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricSet.java
index a3c8c09..913df5b 100644
--- a/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricSet.java
+++ b/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricSet.java
@@ -1,7 +1,8 @@
 package com.codahale.metrics;
 
+import static java.util.Collections.unmodifiableMap;
+
 import io.dropwizard.metrics5.MetricName;
-import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -24,7 +25,7 @@ public interface MetricSet extends Metric {
             original.getMetrics().entrySet()) {
           items.put(entry.getKey().getKey(), Metric.of(entry.getValue()));
         }
-        return Collections.unmodifiableMap(items);
+        return unmodifiableMap(items);
       }
 
       @Override
@@ -48,7 +49,7 @@ public interface MetricSet extends Metric {
       for (Map.Entry<String, Metric> entry : delegate.getMetrics().entrySet()) {
         items.put(MetricName.build(entry.getKey()), entry.getValue().getDelegate());
       }
-      return Collections.unmodifiableMap(items);
+      return unmodifiableMap(items);
     }
   }
 }
diff --git a/metrics-legacy-adapter/src/main/java/com/codahale/metrics/ScheduledReporter.java b/metrics-legacy-adapter/src/main/java/com/codahale/metrics/ScheduledReporter.java
index 498b258..6005e7e 100644
--- a/metrics-legacy-adapter/src/main/java/com/codahale/metrics/ScheduledReporter.java
+++ b/metrics-legacy-adapter/src/main/java/com/codahale/metrics/ScheduledReporter.java
@@ -1,10 +1,10 @@
 package com.codahale.metrics;
 
+import static java.util.Collections.unmodifiableSortedMap;
 import static java.util.Objects.requireNonNull;
 
 import io.dropwizard.metrics5.MetricName;
 import java.io.Closeable;
-import java.util.Collections;
 import java.util.Map;
 import java.util.Set;
 import java.util.SortedMap;
@@ -115,7 +115,7 @@ public abstract class ScheduledReporter implements Closeable, Reporter {
     for (Map.Entry<String, ? extends Metric> entry : metrics.entrySet()) {
       items.put(MetricName.build(entry.getKey()), (T) entry.getValue().getDelegate());
     }
-    return Collections.unmodifiableSortedMap(items);
+    return unmodifiableSortedMap(items);
   }
 
   protected String getRateUnit() {
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java
index 223ecc1..8c49b13 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CachedGaugeTest.java
@@ -6,10 +6,10 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class CachedGaugeTest {
+final class CachedGaugeTest {
 
   @Test
-  void testCreate() {
+  void create() {
     CachedGauge<String> cachedGauge =
         new CachedGauge<String>(100, TimeUnit.MILLISECONDS) {
           @Override
@@ -21,7 +21,7 @@ class CachedGaugeTest {
   }
 
   @Test
-  void testCreateWothClock() {
+  void createWothClock() {
     CachedGauge<String> cachedGauge =
         new CachedGauge<String>(new Clock.UserTimeClock(), 100, TimeUnit.MILLISECONDS) {
           @Override
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java
index 23f627f..392918b 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ClockTest.java
@@ -5,22 +5,22 @@ import static org.assertj.core.api.Assertions.assertThat;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class ClockTest {
+final class ClockTest {
 
   @Test
-  void testDefaultClockCanBeUsed() {
+  void defaultClockCanBeUsed() {
     Clock clock = Clock.defaultClock();
-    assertThat(clock.getTick()).isGreaterThan(0);
+    assertThat(clock.getTick()).isPositive();
   }
 
   @Test
-  void testUserTimeClockCanBeUsed() {
+  void userTimeClockCanBeUsed() {
     Clock clock = new Clock.UserTimeClock();
-    assertThat(clock.getTick()).isGreaterThan(0);
+    assertThat(clock.getTick()).isPositive();
   }
 
   @Test
-  void testCustomTimeClockCanBeUsed() {
+  void customTimeClockCanBeUsed() {
     Clock clock =
         new Clock() {
           @Override
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java
index e828f0a..bf94dc6 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ConsoleReporterTest.java
@@ -1,10 +1,10 @@
 package com.codahale.metrics;
 
+import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.assertj.core.api.Assertions.assertThat;
 
 import java.io.ByteArrayOutputStream;
 import java.io.PrintStream;
-import java.nio.charset.StandardCharsets;
 import java.util.EnumSet;
 import java.util.Locale;
 import java.util.TimeZone;
@@ -17,7 +17,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class ConsoleReporterTest {
+final class ConsoleReporterTest {
 
   private final ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
   private final String dateHeader =
@@ -35,7 +35,7 @@ class ConsoleReporterTest {
   }
 
   @Test
-  void testCreateConsoleReporter() throws Exception {
+  void createConsoleReporter() throws Exception {
     ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
 
     MetricRegistry metricRegistry = new MetricRegistry();
@@ -72,7 +72,7 @@ class ConsoleReporterTest {
             .build();
     consoleReporter.report();
 
-    assertThat(new String(byteArrayOutputStream.toByteArray(), StandardCharsets.UTF_8))
+    assertThat(new String(byteArrayOutputStream.toByteArray(), UTF_8))
         .isEqualToNormalizingNewlines(
             dateHeader
                 + "\n"
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java
index 2c6540e..a17564f 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/CounterTest.java
@@ -6,33 +6,33 @@ import io.dropwizard.metrics5.Counter;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class CounterTest {
+final class CounterTest {
 
   private Counter counter = new Counter();
 
   @Test
-  void testIncrementCounter() {
+  void incrementCounter() {
     counter.inc();
 
     assertThat(counter.getCount()).isEqualTo(1);
   }
 
   @Test
-  void testIncrementCounterOnManyPoints() {
+  void incrementCounterOnManyPoints() {
     counter.inc(5);
 
     assertThat(counter.getCount()).isEqualTo(5);
   }
 
   @Test
-  void testDecrementCounter() {
+  void decrementCounter() {
     counter.dec();
 
     assertThat(counter.getCount()).isEqualTo(-1);
   }
 
   @Test
-  void testDecrementCounterOnManyPoints() {
+  void decrementCounterOnManyPoints() {
     counter.dec(5);
 
     assertThat(counter.getCount()).isEqualTo(-5);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java
index b3e7ad8..63bdd10 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java
@@ -5,10 +5,10 @@ import static org.assertj.core.api.Assertions.assertThat;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class DerivativeGaugeTest {
+final class DerivativeGaugeTest {
 
   @Test
-  void testCalculate() {
+  void calculate() {
     DerivativeGauge<String, Integer> derivativeGauge =
         new DerivativeGauge<String, Integer>(() -> "23") {
           @Override
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java
index c598fe4..39c5242 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java
@@ -6,10 +6,10 @@ import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class ExponentiallyDecayingReservoirTest {
+final class ExponentiallyDecayingReservoirTest {
 
   @Test
-  void testCreateReservoir() {
+  void createReservoir() {
     ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir();
     reservoir.update(120);
     reservoir.update(190);
@@ -22,7 +22,7 @@ class ExponentiallyDecayingReservoirTest {
     assertThat(snapshot.getValues()).contains(120, 130, 140, 190, 200);
     assertThat(snapshot.getMin()).isEqualTo(120);
     assertThat(snapshot.getMax()).isEqualTo(200);
-    assertThat(snapshot.getStdDev()).isEqualTo(32.62, Offset.offset(0.1));
+    assertThat(snapshot.getStdDev()).isCloseTo(32.62, Offset.offset(0.1));
     assertThat(snapshot.get75thPercentile()).isEqualTo(190);
     assertThat(snapshot.get95thPercentile()).isEqualTo(200);
     assertThat(snapshot.get98thPercentile()).isEqualTo(200);
@@ -31,14 +31,14 @@ class ExponentiallyDecayingReservoirTest {
   }
 
   @Test
-  void testCreateReservoirWithCustomSizeAndAlpha() {
+  void createReservoirWithCustomSizeAndAlpha() {
     ExponentiallyDecayingReservoir reservoir = new ExponentiallyDecayingReservoir(512, 0.01);
     reservoir.update(100);
     assertThat(reservoir.size()).isEqualTo(1);
   }
 
   @Test
-  void testCreateReservoirWithCustomSizeAlphaAndClock() {
+  void createReservoirWithCustomSizeAlphaAndClock() {
     ExponentiallyDecayingReservoir reservoir =
         new ExponentiallyDecayingReservoir(
             512,
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/FixedNameCsvFileProviderTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/FixedNameCsvFileProviderTest.java
index 8696ad6..9dcbc16 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/FixedNameCsvFileProviderTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/FixedNameCsvFileProviderTest.java
@@ -10,7 +10,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class FixedNameCsvFileProviderTest {
+final class FixedNameCsvFileProviderTest {
 
   private Path tempDirectory;
   private FixedNameCsvFileProvider fixedNameCsvFileProvider = new FixedNameCsvFileProvider();
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/GaugeTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/GaugeTest.java
index 22ad432..41a4073 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/GaugeTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/GaugeTest.java
@@ -5,12 +5,12 @@ import static org.assertj.core.api.Assertions.assertThat;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class GaugeTest {
+final class GaugeTest {
 
   private Gauge<Integer> gauge = () -> 83;
 
   @Test
-  void testGetValue() {
+  void getValue() {
     assertThat(gauge.getValue()).isEqualTo(83);
   }
 }
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java
index 86e24c7..a141c70 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java
@@ -6,10 +6,10 @@ import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class HistogramTest {
+final class HistogramTest {
 
   @Test
-  void testCreate() {
+  void create() {
     Histogram histogram = new Histogram(new ExponentiallyDecayingReservoir());
     histogram.update(120);
     histogram.update(190);
@@ -23,7 +23,7 @@ class HistogramTest {
     assertThat(snapshot.getValues()).contains(120, 130, 140, 190, 200);
     assertThat(snapshot.getMin()).isEqualTo(120);
     assertThat(snapshot.getMax()).isEqualTo(200);
-    assertThat(snapshot.getStdDev()).isEqualTo(32.62, Offset.offset(0.1));
+    assertThat(snapshot.getStdDev()).isCloseTo(32.62, Offset.offset(0.1));
     assertThat(snapshot.get75thPercentile()).isEqualTo(190);
     assertThat(snapshot.get95thPercentile()).isEqualTo(200);
     assertThat(snapshot.get98thPercentile()).isEqualTo(200);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java
index 2b18cb6..994061d 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java
@@ -9,10 +9,10 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class InstrumentedExecutorServiceTest {
+final class InstrumentedExecutorServiceTest {
 
   @Test
-  void testCreate() throws Exception {
+  void create() throws Exception {
     ExecutorService executorService = Executors.newSingleThreadExecutor();
     MetricRegistry registry = new MetricRegistry();
     InstrumentedExecutorService instrumentedExecutorService =
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java
index caf4bbb..d0e4130 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java
@@ -10,7 +10,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class InstrumentedScheduledExecutorServiceTest {
+final class InstrumentedScheduledExecutorServiceTest {
   private ScheduledExecutorService executorService = Executors.newSingleThreadScheduledExecutor();
 
   @AfterEach
@@ -19,7 +19,7 @@ class InstrumentedScheduledExecutorServiceTest {
   }
 
   @Test
-  void testCreate() throws Exception {
+  void create() throws Exception {
     MetricRegistry registry = new MetricRegistry();
     InstrumentedScheduledExecutorService instrumentedExecutorService =
         new InstrumentedScheduledExecutorService(
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java
index c947556..0355cfd 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java
@@ -7,11 +7,11 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class InstrumentedThreadFactoryTest {
+final class InstrumentedThreadFactoryTest {
 
-  @Test
   @SuppressWarnings("DoNotCall")
-  void testFactory() throws Exception {
+  @Test
+  void factory() throws Exception {
     MetricRegistry registry = new MetricRegistry();
     InstrumentedThreadFactory threadFactory =
         new InstrumentedThreadFactory(Thread::new, registry, "test-instrumented-thread-factory");
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java
index 0fee61f..a32fa5e 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MeterTest.java
@@ -6,16 +6,16 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class MeterTest {
+final class MeterTest {
 
   @Test
-  void testCreateMeteer() {
+  void createMeteer() {
     Meter meter = new Meter();
     assertThat(meter.getCount()).isEqualTo(0);
   }
 
   @Test
-  void testCreateMeterWithCustomClock() {
+  void createMeterWithCustomClock() {
     Meter meter =
         new Meter(
             new Clock() {
@@ -28,7 +28,7 @@ class MeterTest {
   }
 
   @Test
-  void testMark() {
+  void mark() {
     Meter meter =
         new Meter(
             new Clock() {
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java
index 7a5b056..80bd9f1 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java
@@ -11,19 +11,19 @@ import java.util.concurrent.TimeUnit;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class MetricRegistryTest {
+final class MetricRegistryTest {
 
   private MetricRegistry metricRegistry = new MetricRegistry();
 
   @Test
-  void testRegisterMetric() {
+  void registerMetric() {
     Counter counter = metricRegistry.register("test-counter", new Counter());
     counter.inc(42);
     assertThat(metricRegistry.counter("test-counter").getCount()).isEqualTo(42);
   }
 
   @Test
-  void testRegisterAll() {
+  void registerAll() {
     metricRegistry.registerAll(
         () -> {
           Map<String, Metric> map = new HashMap<>();
@@ -40,26 +40,26 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testRegisterGauge() {
+  void registerGauge() {
     metricRegistry.registerGauge("test-gauge", () -> 42);
     assertThat(metricRegistry.getGauges().get("test-gauge").getValue()).isEqualTo(42);
   }
 
   @Test
-  void testCreateCustomGauge() {
+  void createCustomGauge() {
     Gauge gauge = metricRegistry.gauge("test-gauge-supplier", () -> () -> 42);
     assertThat(gauge.getValue()).isEqualTo(42);
   }
 
   @Test
-  void testCreateCounter() {
+  void createCounter() {
     Counter counter = metricRegistry.counter("test-counter");
     counter.inc(42);
     assertThat(metricRegistry.counter("test-counter").getCount()).isEqualTo(42);
   }
 
   @Test
-  void testCreateCustomCounter() {
+  void createCustomCounter() {
     Counter counter =
         metricRegistry.counter(
             "test-custom-counter",
@@ -73,7 +73,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testCreateHistogram() {
+  void createHistogram() {
     Histogram histogram = metricRegistry.histogram("test-histogram");
     histogram.update(100);
     histogram.update(200);
@@ -83,7 +83,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testCreateCustomHistogram() {
+  void createCustomHistogram() {
     Histogram histogram =
         metricRegistry.histogram(
             "test-custom-histogram", () -> new Histogram(new SlidingWindowReservoir(2)));
@@ -95,7 +95,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testCreateMeter() {
+  void createMeter() {
     Meter meter = metricRegistry.meter("test-meter");
     meter.mark();
     meter.mark(2);
@@ -104,7 +104,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testCreateCustomMeter() {
+  void createCustomMeter() {
     Meter meter =
         metricRegistry.meter(
             "test-custom-meter",
@@ -119,7 +119,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testCreateTimer() {
+  void createTimer() {
     Timer timer = metricRegistry.timer("test-timer");
     timer.update(100, TimeUnit.MILLISECONDS);
     timer.update(200, TimeUnit.MILLISECONDS);
@@ -129,7 +129,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testCreateCustomTimer() {
+  void createCustomTimer() {
     Timer timer =
         metricRegistry.timer(
             "custom-test-timer",
@@ -145,7 +145,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testRemoveMetric() {
+  void removeMetric() {
     metricRegistry.timer("test-timer");
     metricRegistry.counter("test-counter");
     metricRegistry.meter("test-meter");
@@ -156,7 +156,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testRemoveMatching() {
+  void removeMatching() {
     metricRegistry.counter("test-counter");
     metricRegistry.timer("test-timer");
     metricRegistry.timer("test-custom-timer");
@@ -168,7 +168,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testAddListenerForGauge() throws Exception {
+  void addListenerForGauge() throws Exception {
     CountDownLatch gaugeAddedLatch = new CountDownLatch(1);
     CountDownLatch gaugeRemovedLatch = new CountDownLatch(1);
     metricRegistry.addListener(
@@ -197,7 +197,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testAddListenerForCounter() throws Exception {
+  void addListenerForCounter() throws Exception {
     CountDownLatch counterAddedLatch = new CountDownLatch(1);
     CountDownLatch counterRemovedLatch = new CountDownLatch(1);
     metricRegistry.addListener(
@@ -225,7 +225,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testAddListenerForHistogram() throws Exception {
+  void addListenerForHistogram() throws Exception {
     CountDownLatch histogramAddedLatch = new CountDownLatch(1);
     CountDownLatch histogramRemovedLatch = new CountDownLatch(1);
     metricRegistry.addListener(
@@ -254,7 +254,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testAddListenerForMeter() throws Exception {
+  void addListenerForMeter() throws Exception {
     CountDownLatch meterAddedLatch = new CountDownLatch(1);
     CountDownLatch meterRemovedLatch = new CountDownLatch(1);
     metricRegistry.addListener(
@@ -283,7 +283,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testAddListenerForTimer() throws Exception {
+  void addListenerForTimer() throws Exception {
     CountDownLatch timerAddedLatch = new CountDownLatch(1);
     CountDownLatch timerRemovedLatch = new CountDownLatch(1);
     metricRegistry.addListener(
@@ -312,7 +312,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testRemoveListener() throws Exception {
+  void removeListener() throws Exception {
     CountDownLatch gaugeAddedLatch = new CountDownLatch(1);
     MetricRegistryListener listener =
         new MetricRegistryListener.Base() {
@@ -331,7 +331,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetNames() {
+  void getNames() {
     metricRegistry.counter("test-counter");
     metricRegistry.timer("test-timer");
     metricRegistry.timer("test-custom-timer");
@@ -342,7 +342,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetGauges() {
+  void getGauges() {
     metricRegistry.counter("test-counter");
     metricRegistry.timer("test-timer");
     metricRegistry.meter("test-meter");
@@ -369,7 +369,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetGaugesWithFilter() {
+  void getGaugesWithFilter() {
     metricRegistry.counter("test-counter");
     metricRegistry.timer("test-timer");
     metricRegistry.meter("test-meter");
@@ -398,7 +398,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetHistograms() {
+  void getHistograms() {
     metricRegistry.counter("test-counter");
     metricRegistry.timer("test-timer");
     metricRegistry.meter("test-meter");
@@ -411,7 +411,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetHistogramsWithFilter() {
+  void getHistogramsWithFilter() {
     metricRegistry.counter("sw-counter");
     metricRegistry.timer("sw-timer");
     metricRegistry.meter("sw-meter");
@@ -424,7 +424,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetCounters() {
+  void getCounters() {
     metricRegistry.histogram("test-histogram");
     metricRegistry.timer("test-timer");
     metricRegistry.meter("test-meter");
@@ -437,7 +437,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetCountersWithFilter() {
+  void getCountersWithFilter() {
     metricRegistry.histogram("test-histogram");
     metricRegistry.timer("test-timer");
     metricRegistry.meter("test-meter");
@@ -450,7 +450,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetMeters() {
+  void getMeters() {
     metricRegistry.register("test-gauge", (Gauge<Integer>) () -> 42);
     metricRegistry.histogram("test-histogram");
     metricRegistry.timer("test-timer");
@@ -464,7 +464,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetMetersWithFilter() {
+  void getMetersWithFilter() {
     metricRegistry.register("sw-gauge", (Gauge<Integer>) () -> 42);
     metricRegistry.histogram("sw-histogram");
     metricRegistry.timer("sw-timer");
@@ -478,7 +478,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetTimers() {
+  void getTimers() {
     metricRegistry.histogram("test-histogram");
     metricRegistry.meter("test-meter");
     metricRegistry.counter("test-counter");
@@ -491,7 +491,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetTimersWithFilter() {
+  void getTimersWithFilter() {
     metricRegistry.histogram("test-histogram-2");
     metricRegistry.meter("test-meter-2");
     metricRegistry.counter("test-counter-2");
@@ -504,7 +504,7 @@ class MetricRegistryTest {
   }
 
   @Test
-  void testGetMetrics() {
+  void getMetrics() {
     metricRegistry.register(
         "test-text-gauge-2",
         new CachedGauge<String>(1, TimeUnit.MINUTES) {
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java
index e593421..acd78e9 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/RatioGaugeTest.java
@@ -1,12 +1,12 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class RatioGaugeTest {
+final class RatioGaugeTest {
 
   private RatioGauge ratioGauge =
       new RatioGauge() {
@@ -17,12 +17,12 @@ class RatioGaugeTest {
       };
 
   @Test
-  void testViewRatin() {
-    assertThat(ratioGauge.getRatio().toString()).isEqualTo("1.0:3.0");
+  void viewRatin() {
+    assertThat(ratioGauge.getRatio()).hasToString("1.0:3.0");
   }
 
   @Test
-  void testCalculateRatio() {
-    assertThat(ratioGauge.getValue()).isCloseTo(0.33, Offset.offset(0.01));
+  void calculateRatio() {
+    assertThat(ratioGauge.getValue()).isCloseTo(0.33, offset(0.01));
   }
 }
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java
index b483a4c..8f6f103 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ScheduledReporterTest.java
@@ -10,7 +10,7 @@ import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class ScheduledReporterTest {
+final class ScheduledReporterTest {
 
   private MetricRegistry metricRegistry = new MetricRegistry();
   private ScheduledReporter scheduledReporter;
@@ -51,7 +51,7 @@ class ScheduledReporterTest {
   }
 
   @Test
-  void testReport() throws Exception {
+  void report() throws Exception {
     CountDownLatch latch = new CountDownLatch(1);
     scheduledReporter = createScheduledReporter(latch);
     scheduledReporter.report();
@@ -61,7 +61,7 @@ class ScheduledReporterTest {
   }
 
   @Test
-  void testStart() throws Exception {
+  void start() throws Exception {
     CountDownLatch latch = new CountDownLatch(2);
     scheduledReporter = createScheduledReporter(latch);
     scheduledReporter.start(10, TimeUnit.MILLISECONDS);
@@ -71,7 +71,7 @@ class ScheduledReporterTest {
   }
 
   @Test
-  void testStartWithoutDelay() throws Exception {
+  void startWithoutDelay() throws Exception {
     CountDownLatch latch = new CountDownLatch(2);
     scheduledReporter = createScheduledReporter(latch);
     scheduledReporter.start(0, 10, TimeUnit.MILLISECONDS);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java
index c2340f2..232c473 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java
@@ -1,13 +1,13 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.assertj.core.api.Assertions.assertThatIllegalStateException;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class SharedMetricRegistriesTest {
+final class SharedMetricRegistriesTest {
 
   @AfterEach
   void tearDown() throws Exception {
@@ -15,7 +15,7 @@ class SharedMetricRegistriesTest {
   }
 
   @Test
-  void testGetOrCreateMetricRegistry() {
+  void getOrCreateMetricRegistry() {
     SharedMetricRegistries.getOrCreate("get-or-create").counter("test-counter");
 
     assertThat(SharedMetricRegistries.getOrCreate("get-or-create").getCounters())
@@ -23,7 +23,7 @@ class SharedMetricRegistriesTest {
   }
 
   @Test
-  void testAddMetricRegistry() {
+  void addMetricRegistry() {
     MetricRegistry metricRegistry = new MetricRegistry();
     metricRegistry.histogram("test-histogram");
     SharedMetricRegistries.add("add", metricRegistry);
@@ -33,7 +33,7 @@ class SharedMetricRegistriesTest {
   }
 
   @Test
-  void testNames() {
+  void names() {
     SharedMetricRegistries.add("registry-1", new MetricRegistry());
     SharedMetricRegistries.add("registry-2", new MetricRegistry());
     SharedMetricRegistries.add("registry-3", new MetricRegistry());
@@ -43,12 +43,13 @@ class SharedMetricRegistriesTest {
   }
 
   @Test
-  void testTryGetDefaultRegistry() {
+  void tryGetDefaultRegistry() {
     assertThat(SharedMetricRegistries.tryGetDefault()).isNull();
   }
 
   @Test
-  void testGetDefaultRegistry() {
-    assertThatIllegalStateException().isThrownBy(SharedMetricRegistries::getDefault);
+  void getDefaultRegistry() {
+    assertThatThrownBy(SharedMetricRegistries::getDefault)
+        .isInstanceOf(IllegalStateException.class);
   }
 }
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java
index 55d05fe..984ceb1 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/Slf4jReporterTest.java
@@ -14,11 +14,11 @@ import org.slf4j.Logger;
 import org.slf4j.Marker;
 
 @SuppressWarnings("deprecation")
-class Slf4jReporterTest {
+final class Slf4jReporterTest {
 
   private ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();
-  private Logger logger = mock(Logger.class);
-  private Marker marker = mock(Marker.class);
+  private Logger logger = mock();
+  private Marker marker = mock();
 
   @BeforeEach
   void setUp() throws Exception {
@@ -31,7 +31,7 @@ class Slf4jReporterTest {
   }
 
   @Test
-  void testReport() throws Exception {
+  void report() throws Exception {
     MetricRegistry metricRegistry = new MetricRegistry();
     metricRegistry.counter("test-counter").inc(100);
 
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java
index 95228fa..9e48141 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java
@@ -1,16 +1,16 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
 import java.util.concurrent.TimeUnit;
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class SlidingTimeWindowArrayReservoirTest {
+final class SlidingTimeWindowArrayReservoirTest {
 
   @Test
-  void testCreateWithWindow() {
+  void createWithWindow() {
     SlidingTimeWindowArrayReservoir reservoir =
         new SlidingTimeWindowArrayReservoir(1, TimeUnit.HOURS);
     reservoir.update(100);
@@ -18,17 +18,17 @@ class SlidingTimeWindowArrayReservoirTest {
     reservoir.update(30);
 
     assertThat(reservoir.size()).isEqualTo(3);
-    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(110, Offset.offset(0.1));
+    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(110, offset(0.1));
   }
 
   @Test
-  void testCreateWithWindowAndClock() {
+  void createWithWindowAndClock() {
     SlidingTimeWindowArrayReservoir reservoir =
         new SlidingTimeWindowArrayReservoir(1, TimeUnit.HOURS, new Clock.UserTimeClock());
     reservoir.update(400);
     reservoir.update(300);
 
     assertThat(reservoir.size()).isEqualTo(2);
-    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(350, Offset.offset(0.1));
+    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(350, offset(0.1));
   }
 }
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java
index c80dcee..dcd9b61 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java
@@ -1,33 +1,33 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
 import java.util.concurrent.TimeUnit;
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class SlidingTimeWindowReservoirTest {
+final class SlidingTimeWindowReservoirTest {
 
   @Test
-  void testCreateWithWindow() {
+  void createWithWindow() {
     SlidingTimeWindowReservoir reservoir = new SlidingTimeWindowReservoir(1, TimeUnit.HOURS);
     reservoir.update(100);
     reservoir.update(200);
     reservoir.update(30);
 
     assertThat(reservoir.size()).isEqualTo(3);
-    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(110, Offset.offset(0.1));
+    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(110, offset(0.1));
   }
 
   @Test
-  void testCreateWithWindowAndClock() {
+  void createWithWindowAndClock() {
     SlidingTimeWindowReservoir reservoir =
         new SlidingTimeWindowReservoir(1, TimeUnit.HOURS, new Clock.UserTimeClock());
     reservoir.update(400);
     reservoir.update(300);
 
     assertThat(reservoir.size()).isEqualTo(2);
-    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(350, Offset.offset(0.1));
+    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(350, offset(0.1));
   }
 }
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java
index bebb55e..37cca6a 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java
@@ -1,26 +1,26 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class SlidingWindowReservoirTest {
+final class SlidingWindowReservoirTest {
 
   @Test
-  void testCreateWithBigWindow() {
+  void createWithBigWindow() {
     SlidingWindowReservoir reservoir = new SlidingWindowReservoir(100);
     reservoir.update(100);
     reservoir.update(220);
     reservoir.update(130);
 
     assertThat(reservoir.size()).isEqualTo(3);
-    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(150, Offset.offset(0.1));
+    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(150, offset(0.1));
   }
 
   @Test
-  void testCreateWithLowWindow() {
+  void createWithLowWindow() {
     SlidingWindowReservoir reservoir = new SlidingWindowReservoir(3);
     reservoir.update(500);
     reservoir.update(220);
@@ -28,6 +28,6 @@ class SlidingWindowReservoirTest {
     reservoir.update(40);
 
     assertThat(reservoir.size()).isEqualTo(3);
-    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(120, Offset.offset(0.1));
+    assertThat(reservoir.getSnapshot().getMean()).isCloseTo(120, offset(0.1));
   }
 }
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java
index 6c24eaa..24a6ae0 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java
@@ -8,23 +8,23 @@ import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class SnapshotTest {
+final class SnapshotTest {
 
   @Test
-  void testCreateSnapshot() throws Exception {
+  void createSnapshot() throws Exception {
     Snapshot snapshot = Snapshot.of(new UniformSnapshot(new long[] {5, 1, 2, 3, 4}));
 
     assertThat(snapshot.getValues()).isEqualTo(new long[] {1, 2, 3, 4, 5});
     assertThat(snapshot.size()).isEqualTo(5);
     assertThat(snapshot.getMin()).isEqualTo(1);
     assertThat(snapshot.getMax()).isEqualTo(5);
-    assertThat(snapshot.getStdDev()).isEqualTo(1.58, Offset.offset(0.01));
-    assertThat(snapshot.getMedian()).isEqualTo(3, Offset.offset(0.01));
-    assertThat(snapshot.get75thPercentile()).isEqualTo(4.5, Offset.offset(0.01));
-    assertThat(snapshot.get95thPercentile()).isEqualTo(5, Offset.offset(0.01));
-    assertThat(snapshot.get98thPercentile()).isEqualTo(5, Offset.offset(0.01));
-    assertThat(snapshot.get99thPercentile()).isEqualTo(5, Offset.offset(0.01));
-    assertThat(snapshot.get999thPercentile()).isEqualTo(5, Offset.offset(0.01));
+    assertThat(snapshot.getStdDev()).isCloseTo(1.58, Offset.offset(0.01));
+    assertThat(snapshot.getMedian()).isCloseTo(3, Offset.offset(0.01));
+    assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, Offset.offset(0.01));
+    assertThat(snapshot.get95thPercentile()).isCloseTo(5, Offset.offset(0.01));
+    assertThat(snapshot.get98thPercentile()).isCloseTo(5, Offset.offset(0.01));
+    assertThat(snapshot.get99thPercentile()).isCloseTo(5, Offset.offset(0.01));
+    assertThat(snapshot.get999thPercentile()).isCloseTo(5, Offset.offset(0.01));
 
     ByteArrayOutputStream baos = new ByteArrayOutputStream();
     snapshot.dump(baos);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java
index c2bd51c..d9764ee 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/TimerTest.java
@@ -8,7 +8,7 @@ import java.util.concurrent.atomic.AtomicInteger;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class TimerTest {
+final class TimerTest {
 
   private static class ManualClock extends Clock {
 
@@ -26,7 +26,7 @@ class TimerTest {
   }
 
   @Test
-  void testCreate() {
+  void create() {
     Timer timer = new Timer();
     timer.update(100, TimeUnit.MILLISECONDS);
     timer.update(200, TimeUnit.MILLISECONDS);
@@ -35,7 +35,7 @@ class TimerTest {
   }
 
   @Test
-  void testCreateWithCustomReservoir() {
+  void createWithCustomReservoir() {
     Timer timer = new Timer(new SlidingWindowReservoir(100));
     timer.update(100, TimeUnit.MILLISECONDS);
     timer.update(200, TimeUnit.MILLISECONDS);
@@ -44,7 +44,7 @@ class TimerTest {
   }
 
   @Test
-  void testCreateWithCustomReservoirAndClock() {
+  void createWithCustomReservoirAndClock() {
     Timer timer = new Timer(new SlidingWindowReservoir(100), new Clock.UserTimeClock());
     timer.update(100, TimeUnit.MILLISECONDS);
     timer.update(200, TimeUnit.MILLISECONDS);
@@ -53,7 +53,7 @@ class TimerTest {
   }
 
   @Test
-  void testTimerContext() {
+  void timerContext() {
     Timer timer = new Timer(new SlidingWindowReservoir(100), new ManualClock());
     timer.time().stop();
 
@@ -61,7 +61,7 @@ class TimerTest {
   }
 
   @Test
-  void testTimerRunnable() {
+  void timerRunnable() {
     Timer timer = new Timer(new SlidingWindowReservoir(100), new ManualClock());
 
     AtomicInteger counter = new AtomicInteger();
@@ -72,7 +72,7 @@ class TimerTest {
   }
 
   @Test
-  void testTimerCallable() throws Exception {
+  void timerCallable() throws Exception {
     Timer timer = new Timer(new SlidingWindowReservoir(100), new ManualClock());
 
     String message = timer.time(() -> "SUCCESS");
@@ -82,7 +82,7 @@ class TimerTest {
   }
 
   @Test
-  void testTimerSupplier() throws Exception {
+  void timerSupplier() throws Exception {
     Timer timer = new Timer(new SlidingWindowReservoir(100), new ManualClock());
 
     Integer result = timer.timeSupplier(() -> 42);
@@ -92,7 +92,7 @@ class TimerTest {
   }
 
   @Test
-  void testUpdateDuration() {
+  void updateDuration() {
     Timer timer = new Timer();
     timer.update(Duration.ofMillis(100));
     timer.update(Duration.ofMillis(200));
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java
index f125498..0668c1e 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java
@@ -6,10 +6,10 @@ import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
-class UniformReservoirTest {
+final class UniformReservoirTest {
 
   @Test
-  void testCreateReservoir() {
+  void createReservoir() {
     UniformReservoir reservoir = new UniformReservoir();
     reservoir.update(120);
     reservoir.update(190);
@@ -22,7 +22,7 @@ class UniformReservoirTest {
     assertThat(snapshot.getValues()).contains(120, 130, 140, 190, 200);
     assertThat(snapshot.getMin()).isEqualTo(120);
     assertThat(snapshot.getMax()).isEqualTo(200);
-    assertThat(snapshot.getStdDev()).isEqualTo(36.47, Offset.offset(0.1));
+    assertThat(snapshot.getStdDev()).isCloseTo(36.47, Offset.offset(0.1));
     assertThat(snapshot.get75thPercentile()).isEqualTo(195);
     assertThat(snapshot.get95thPercentile()).isEqualTo(200);
     assertThat(snapshot.get98thPercentile()).isEqualTo(200);
@@ -31,7 +31,7 @@ class UniformReservoirTest {
   }
 
   @Test
-  void testCreateReservoirWithCustomSize() {
+  void createReservoirWithCustomSize() {
     UniformReservoir reservoir = new UniformReservoir(128);
     reservoir.update(440);
     reservoir.update(250);
diff --git a/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderConfigTest.java b/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderConfigTest.java
index a4e9cee..b93cf21 100644
--- a/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderConfigTest.java
+++ b/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderConfigTest.java
@@ -12,7 +12,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedAppenderConfigTest {
+final class InstrumentedAppenderConfigTest {
   public static final String METRIC_NAME_PREFIX = "metrics";
   public static final String REGISTRY_NAME = "shared-metrics-registry";
 
diff --git a/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderTest.java b/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderTest.java
index ce0bae1..ea2f261 100644
--- a/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderTest.java
+++ b/metrics-log4j2/src/test/java/io/dropwizard/metrics5/log4j2/InstrumentedAppenderTest.java
@@ -12,13 +12,13 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedAppenderTest {
+final class InstrumentedAppenderTest {
 
   public static final String METRIC_NAME_PREFIX = "org.apache.logging.log4j.core.Appender";
 
   private final MetricRegistry registry = new MetricRegistry();
   private final InstrumentedAppender appender = new InstrumentedAppender(registry);
-  private final LogEvent event = mock(LogEvent.class);
+  private final LogEvent event = mock();
 
   @BeforeEach
   void setUp() {
diff --git a/metrics-logback13/src/test/java/io/dropwizard/metrics/logback13/InstrumentedAppenderTest.java b/metrics-logback13/src/test/java/io/dropwizard/metrics/logback13/InstrumentedAppenderTest.java
index 81a0e1b..9adaef7 100644
--- a/metrics-logback13/src/test/java/io/dropwizard/metrics/logback13/InstrumentedAppenderTest.java
+++ b/metrics-logback13/src/test/java/io/dropwizard/metrics/logback13/InstrumentedAppenderTest.java
@@ -12,13 +12,13 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedAppenderTest {
+final class InstrumentedAppenderTest {
 
   public static final String METRIC_NAME_PREFIX = "ch.qos.logback.core.Appender";
 
   private final MetricRegistry registry = new MetricRegistry();
   private final InstrumentedAppender appender = new InstrumentedAppender(registry);
-  private final ILoggingEvent event = mock(ILoggingEvent.class);
+  private final ILoggingEvent event = mock();
 
   @BeforeEach
   void setUp() {
diff --git a/metrics-logback14/src/test/java/io/dropwizard/metrics/logback14/InstrumentedAppenderTest.java b/metrics-logback14/src/test/java/io/dropwizard/metrics/logback14/InstrumentedAppenderTest.java
index e29f84a..b83ae22 100644
--- a/metrics-logback14/src/test/java/io/dropwizard/metrics/logback14/InstrumentedAppenderTest.java
+++ b/metrics-logback14/src/test/java/io/dropwizard/metrics/logback14/InstrumentedAppenderTest.java
@@ -12,13 +12,13 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedAppenderTest {
+final class InstrumentedAppenderTest {
 
   public static final String METRIC_NAME_PREFIX = "ch.qos.logback.core.Appender";
 
   private final MetricRegistry registry = new MetricRegistry();
   private final InstrumentedAppender appender = new InstrumentedAppender(registry);
-  private final ILoggingEvent event = mock(ILoggingEvent.class);
+  private final ILoggingEvent event = mock();
 
   @BeforeEach
   void setUp() {
diff --git a/metrics-logback15/src/test/java/io/dropwizard/metrics5/logback15/InstrumentedAppenderTest.java b/metrics-logback15/src/test/java/io/dropwizard/metrics5/logback15/InstrumentedAppenderTest.java
index 2891ce4..9f1e279 100644
--- a/metrics-logback15/src/test/java/io/dropwizard/metrics5/logback15/InstrumentedAppenderTest.java
+++ b/metrics-logback15/src/test/java/io/dropwizard/metrics5/logback15/InstrumentedAppenderTest.java
@@ -12,13 +12,13 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-public class InstrumentedAppenderTest {
+final class InstrumentedAppenderTest {
 
   public static final String METRIC_NAME_PREFIX = "ch.qos.logback.core.Appender";
 
   private final MetricRegistry registry = new MetricRegistry();
   private final InstrumentedAppender appender = new InstrumentedAppender(registry);
-  private final ILoggingEvent event = mock(ILoggingEvent.class);
+  private final ILoggingEvent event = mock();
 
   @BeforeEach
   void setUp() {
diff --git a/metrics-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java b/metrics-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java
index dcc19dd..84c04d4 100644
--- a/metrics-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java
+++ b/metrics-servlet/src/main/java/io/dropwizard/metrics5/servlet/AbstractInstrumentedFilter.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.servlet;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 
+import com.google.common.base.Strings;
 import io.dropwizard.metrics5.Counter;
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -64,7 +65,7 @@ public abstract class AbstractInstrumentedFilter implements Filter {
     final MetricRegistry metricsRegistry = getMetricsFactory(filterConfig);
 
     String metricName = filterConfig.getInitParameter(METRIC_PREFIX);
-    if (metricName == null || metricName.isEmpty()) {
+    if (Strings.isNullOrEmpty(metricName)) {
       metricName = getClass().getName();
     }
 
diff --git a/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java b/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java
index 1a0bd8e..d7ceae8 100644
--- a/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java
+++ b/metrics-servlet/src/test/java/io/dropwizard/metrics5/servlet/InstrumentedFilterContextListenerTest.java
@@ -9,8 +9,8 @@ import javax.servlet.ServletContext;
 import javax.servlet.ServletContextEvent;
 import org.junit.jupiter.api.Test;
 
-class InstrumentedFilterContextListenerTest {
-  private final MetricRegistry registry = mock(MetricRegistry.class);
+final class InstrumentedFilterContextListenerTest {
+  private final MetricRegistry registry = mock();
   private final InstrumentedFilterContextListener listener =
       new InstrumentedFilterContextListener() {
         @Override
@@ -21,9 +21,9 @@ class InstrumentedFilterContextListenerTest {
 
   @Test
   void injectsTheMetricRegistryIntoTheServletContext() {
-    final ServletContext context = mock(ServletContext.class);
+    final ServletContext context = mock();
 
-    final ServletContextEvent event = mock(ServletContextEvent.class);
+    final ServletContextEvent event = mock();
     when(event.getServletContext()).thenReturn(context);
 
     listener.contextInitialized(event);
diff --git a/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java b/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java
index 88cd1fa..8685484 100644
--- a/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java
+++ b/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/HealthCheckServlet.java
@@ -99,7 +99,7 @@ public class HealthCheckServlet extends HttpServlet {
     super.init(config);
 
     final ServletContext context = config.getServletContext();
-    if (null == registry) {
+    if (registry == null) {
       final Object registryAttr = context.getAttribute(HEALTH_CHECK_REGISTRY);
       if (registryAttr instanceof HealthCheckRegistry) {
         this.registry = (HealthCheckRegistry) registryAttr;
diff --git a/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java b/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java
index 3efdc27..cc16683 100644
--- a/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java
+++ b/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/MetricsServlet.java
@@ -131,7 +131,7 @@ public class MetricsServlet extends HttpServlet {
     super.init(config);
 
     final ServletContext context = config.getServletContext();
-    if (null == registry) {
+    if (registry == null) {
       final Object registryAttr = context.getAttribute(METRICS_REGISTRY);
       if (registryAttr instanceof MetricRegistry) {
         this.registry = (MetricRegistry) registryAttr;
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java
index 8fcdf8a..77b50ba 100755
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletTest.java
@@ -9,7 +9,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class AdminServletTest extends AbstractServletTest {
+final class AdminServletTest extends AbstractServletTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final HealthCheckRegistry healthCheckRegistry = new HealthCheckRegistry();
 
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java
index ebe2c81..424a05e 100755
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/AdminServletUriTest.java
@@ -9,7 +9,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class AdminServletUriTest extends AbstractServletTest {
+final class AdminServletUriTest extends AbstractServletTest {
   private final MetricRegistry registry = new MetricRegistry();
   private final HealthCheckRegistry healthCheckRegistry = new HealthCheckRegistry();
 
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java
index 1c63a41..2df4050 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/CpuProfileServletTest.java
@@ -7,7 +7,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class CpuProfileServletTest extends AbstractServletTest {
+final class CpuProfileServletTest extends AbstractServletTest {
 
   @Override
   protected void setUp(ServletTester tester) {
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
index e7bc067..80b40f1 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
@@ -1,10 +1,9 @@
 package io.dropwizard.metrics5.servlets;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -27,7 +26,7 @@ import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class HealthCheckServletTest extends AbstractServletTest {
+final class HealthCheckServletTest extends AbstractServletTest {
 
   private static final ZonedDateTime FIXED_TIME = ZonedDateTime.now();
 
@@ -95,9 +94,8 @@ class HealthCheckServletTest extends AbstractServletTest {
     assertThat(response.get(HttpHeader.CONTENT_TYPE)).isEqualTo("application/json");
     assertThat(response.getContent())
         .isEqualTo(
-            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\""
-                + EXPECTED_TIMESTAMP
-                + "\"}}");
+            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}",
+            EXPECTED_TIMESTAMP);
   }
 
   @Test
@@ -111,9 +109,8 @@ class HealthCheckServletTest extends AbstractServletTest {
     assertThat(response.get(HttpHeader.CONTENT_TYPE)).isEqualTo("application/json");
     assertThat(response.getContent())
         .isEqualTo(
-            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\""
-                + EXPECTED_TIMESTAMP
-                + "\"}}");
+            "{\"fun\":{\"healthy\":true,\"message\":\"whee\",\"duration\":0,\"timestamp\":\"%s\"}}",
+            EXPECTED_TIMESTAMP);
   }
 
   @Test
@@ -168,15 +165,8 @@ class HealthCheckServletTest extends AbstractServletTest {
     assertThat(response.getContent())
         .isEqualTo(
             String.format(
-                "{%n"
-                    + "  \"fun\" : {%n"
-                    + "    \"healthy\" : true,%n"
-                    + "    \"message\" : \"foo bar 123\",%n"
-                    + "    \"duration\" : 0,%n"
-                    + "    \"timestamp\" : \""
-                    + EXPECTED_TIMESTAMP
-                    + "\""
-                    + "%n  }%n}"));
+                "{%n  \"fun\" : {%n    \"healthy\" : true,%n    \"message\" : \"foo bar 123\",%n    \"duration\" : 0,%n    \"timestamp\" : \"%s\"%n  }%n}",
+                EXPECTED_TIMESTAMP));
   }
 
   private static HealthCheck.Result healthyResultWithMessage(String message) {
@@ -197,23 +187,23 @@ class HealthCheckServletTest extends AbstractServletTest {
 
   @Test
   void constructorWithRegistryAsArgumentIsUsedInPreferenceOverServletConfig() throws Exception {
-    final HealthCheckRegistry healthCheckRegistry = mock(HealthCheckRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final HealthCheckRegistry healthCheckRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
 
     final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(healthCheckRegistry);
     healthCheckServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
+    verify(servletConfig).getServletContext();
     verify(servletContext, never()).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNull() throws Exception {
-    final HealthCheckRegistry healthCheckRegistry = mock(HealthCheckRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final HealthCheckRegistry healthCheckRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
     when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
         .thenReturn(healthCheckRegistry);
@@ -221,32 +211,32 @@ class HealthCheckServletTest extends AbstractServletTest {
     final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(null);
     healthCheckServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
-    verify(servletContext, times(1)).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);
+    verify(servletConfig).getServletContext();
+    verify(servletContext).getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNullButWrongTypeInContext()
       throws Exception {
-    assertThrows(
-        ServletException.class,
-        () -> {
-          final ServletContext servletContext = mock(ServletContext.class);
-          final ServletConfig servletConfig = mock(ServletConfig.class);
-          when(servletConfig.getServletContext()).thenReturn(servletContext);
-          when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
-              .thenReturn("IRELLEVANT_STRING");
-
-          final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(null);
-          healthCheckServlet.init(servletConfig);
-        });
+    assertThatThrownBy(
+            () -> {
+              final ServletContext servletContext = mock(ServletContext.class);
+              final ServletConfig servletConfig = mock(ServletConfig.class);
+              when(servletConfig.getServletContext()).thenReturn(servletContext);
+              when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
+                  .thenReturn("IRELLEVANT_STRING");
+
+              final HealthCheckServlet healthCheckServlet = new HealthCheckServlet(null);
+              healthCheckServlet.init(servletConfig);
+            })
+        .isInstanceOf(ServletException.class);
   }
 
   @Test
   void constructorWithObjectMapperAsArgumentUsesServletConfigWhenNullButWrongTypeInContext()
       throws Exception {
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
     when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
         .thenReturn(registry);
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java
index 5cd3578..101f79d 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletContextListenerTest.java
@@ -17,8 +17,8 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class MetricsServletContextListenerTest extends AbstractServletTest {
-  private final Clock clock = mock(Clock.class);
+final class MetricsServletContextListenerTest extends AbstractServletTest {
+  private final Clock clock = mock();
   private final MetricRegistry registry = new MetricRegistry();
   private final String allowedOrigin = "some.other.origin";
 
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
index ee72291..78086f5 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
@@ -1,11 +1,10 @@
 package io.dropwizard.metrics5.servlets;
 
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.jupiter.api.Assertions.assertThrows;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -25,8 +24,8 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class MetricsServletTest extends AbstractServletTest {
-  private final Clock clock = mock(Clock.class);
+final class MetricsServletTest extends AbstractServletTest {
+  private final Clock clock = mock();
   private final MetricRegistry registry = new MetricRegistry();
   private ServletTester tester;
 
@@ -130,22 +129,8 @@ class MetricsServletTest extends AbstractServletTest {
     assertThat(response.get("Access-Control-Allow-Origin")).isEqualTo("*");
     assertThat(response.getContent())
         .isEqualTo(
-            callbackParamVal
-                + "({"
-                + "\"version\":\"5.0.0\","
-                + "\"gauges\":{"
-                + "\"g1\":{\"value\":100}"
-                + "},"
-                + "\"counters\":{"
-                + "\"c\":{\"count\":1}"
-                + "},"
-                + "\"histograms\":{"
-                + "\"h\":{\"count\":1,\"max\":1,\"mean\":1.0,\"min\":1,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0}"
-                + "},"
-                + "\"meters\":{"
-                + "\"m\":{\"count\":1,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":3333333.3333333335,\"units\":\"events/second\"}},\"timers\":{\"t\":{\"count\":1,\"max\":1.0,\"mean\":1.0,\"min\":1.0,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":1.0E7,\"duration_units\":\"seconds\",\"rate_units\":\"calls/second\"}"
-                + "}"
-                + "})");
+            "%s({\"version\":\"5.0.0\",\"gauges\":{\"g1\":{\"value\":100}},\"counters\":{\"c\":{\"count\":1}},\"histograms\":{\"h\":{\"count\":1,\"max\":1,\"mean\":1.0,\"min\":1,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0}},\"meters\":{\"m\":{\"count\":1,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":3333333.3333333335,\"units\":\"events/second\"}},\"timers\":{\"t\":{\"count\":1,\"max\":1.0,\"mean\":1.0,\"min\":1.0,\"p50\":1.0,\"p75\":1.0,\"p95\":1.0,\"p98\":1.0,\"p99\":1.0,\"p999\":1.0,\"stddev\":0.0,\"m15_rate\":0.0,\"m1_rate\":0.0,\"m5_rate\":0.0,\"mean_rate\":1.0E7,\"duration_units\":\"seconds\",\"rate_units\":\"calls/second\"}}})",
+            callbackParamVal);
     assertThat(response.get(HttpHeader.CONTENT_TYPE)).isEqualTo("application/json");
   }
 
@@ -224,48 +209,47 @@ class MetricsServletTest extends AbstractServletTest {
 
   @Test
   void constructorWithRegistryAsArgumentIsUsedInPreferenceOverServletConfig() throws Exception {
-    final MetricRegistry metricRegistry = mock(MetricRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final MetricRegistry metricRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
 
     final MetricsServlet metricsServlet = new MetricsServlet(metricRegistry);
     metricsServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
-    verify(servletContext, never()).getAttribute(eq(MetricsServlet.METRICS_REGISTRY));
+    verify(servletConfig).getServletContext();
+    verify(servletContext, never()).getAttribute(MetricsServlet.METRICS_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNull() throws Exception {
-    final MetricRegistry metricRegistry = mock(MetricRegistry.class);
-    final ServletContext servletContext = mock(ServletContext.class);
-    final ServletConfig servletConfig = mock(ServletConfig.class);
+    final MetricRegistry metricRegistry = mock();
+    final ServletContext servletContext = mock();
+    final ServletConfig servletConfig = mock();
     when(servletConfig.getServletContext()).thenReturn(servletContext);
-    when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
-        .thenReturn(metricRegistry);
+    when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY)).thenReturn(metricRegistry);
 
     final MetricsServlet metricsServlet = new MetricsServlet(null);
     metricsServlet.init(servletConfig);
 
-    verify(servletConfig, times(1)).getServletContext();
-    verify(servletContext, times(1)).getAttribute(eq(MetricsServlet.METRICS_REGISTRY));
+    verify(servletConfig).getServletContext();
+    verify(servletContext).getAttribute(MetricsServlet.METRICS_REGISTRY);
   }
 
   @Test
   void constructorWithRegistryAsArgumentUsesServletConfigWhenNullButWrongTypeInContext()
       throws Exception {
-    assertThrows(
-        ServletException.class,
-        () -> {
-          final ServletContext servletContext = mock(ServletContext.class);
-          final ServletConfig servletConfig = mock(ServletConfig.class);
-          when(servletConfig.getServletContext()).thenReturn(servletContext);
-          when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
-              .thenReturn("IRELLEVANT_STRING");
-
-          final MetricsServlet metricsServlet = new MetricsServlet(null);
-          metricsServlet.init(servletConfig);
-        });
+    assertThatThrownBy(
+            () -> {
+              final ServletContext servletContext = mock(ServletContext.class);
+              final ServletConfig servletConfig = mock(ServletConfig.class);
+              when(servletConfig.getServletContext()).thenReturn(servletContext);
+              when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
+                  .thenReturn("IRELLEVANT_STRING");
+
+              final MetricsServlet metricsServlet = new MetricsServlet(null);
+              metricsServlet.init(servletConfig);
+            })
+        .isInstanceOf(ServletException.class);
   }
 }
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java
index 72e4d9f..56bb1ee 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/PingServletTest.java
@@ -7,7 +7,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class PingServletTest extends AbstractServletTest {
+final class PingServletTest extends AbstractServletTest {
   @Override
   protected void setUp(ServletTester tester) {
     tester.addServlet(PingServlet.class, "/ping");
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java
index 3b92675..5bbb7b1 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/ThreadDumpServletTest.java
@@ -7,7 +7,7 @@ import org.eclipse.jetty.servlet.ServletTester;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
-class ThreadDumpServletTest extends AbstractServletTest {
+final class ThreadDumpServletTest extends AbstractServletTest {
   @Override
   protected void setUp(ServletTester tester) {
     tester.addServlet(ThreadDumpServlet.class, "/threads");
[detached HEAD 05c4a97] minor: Apply patches
 235 files changed, 1678 insertions(+), 1820 deletions(-)
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Metrics5 Parent                                                    [pom]
[INFO] Metrics5 Documentation                                             [jar]
[INFO] Metrics5 BOM                                                       [pom]
[INFO] Annotations for Metrics5                                        [bundle]
[INFO] Metrics5 Core                                                   [bundle]
[INFO] Benchmarks for Metrics5                                            [jar]
[INFO] Metrics Integration for Caffeine 3.x                            [bundle]
[INFO] Metrics Integration for Collectd                                [bundle]
[INFO] Metrics Integration for Ehcache                                 [bundle]
[INFO] Graphite Integration for Metrics5                               [bundle]
[INFO] InfluxDB integration for Metrics5                               [bundle]
[INFO] JVM Integration for Metrics5                                    [bundle]
[INFO] Metrics5 Health Checks                                          [bundle]
[INFO] Metrics Integration for Apache HttpClient                       [bundle]
[INFO] Metrics Integration for Apache HttpClient 5.x                   [bundle]
[INFO] Metrics Integration for Apache HttpAsyncClient                  [bundle]
[INFO] Metrics Integration for Jakarta Servlets                        [bundle]
[INFO] Metrics Integration for Jakarta Servlets 6.x                    [bundle]
[INFO] Jackson Integration for Metrics5                                [bundle]
[INFO] Metrics Integration for Jetty 11.x and higher                   [bundle]
[INFO] Metrics5 Utility Jakarta Servlets                               [bundle]
[INFO] Metrics Integration for JCache                                  [bundle]
[INFO] Metrics Integration for JDBI3                                   [bundle]
[INFO] Metrics Integration for Jersey 2.x                              [bundle]
[INFO] Metrics Integration for Jersey 3.0.x                            [bundle]
[INFO] Metrics Integration for Jersey 3.1.x                            [bundle]
[INFO] Metrics Integration for Jetty 10.x and higher                   [bundle]
[INFO] Metrics Integration for Log4j 2.x                               [bundle]
[INFO] Metrics Integration for Logback 1.3.x                           [bundle]
[INFO] Metrics Integration for Logback 1.4.x                           [bundle]
[INFO] Metrics Integration for Logback 1.5.x                           [bundle]
[INFO] Metrics Integration for Servlets                                [bundle]
[INFO] Metrics5 Utility Servlets                                       [bundle]
[INFO] Metrics5 JCStress tests                                            [jar]
[INFO] Metrics Integration with JMX                                    [bundle]
[INFO] Metrics5 Adapter to Metrics 3/4 API                                [jar]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API                  [jar]
[INFO] Metrics Integration for Jetty 12.x and higher                   [bundle]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 [bundle]
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-parent >----------------
[INFO] Building Metrics5 Parent 5.0.0-rc22                               [1/39]
[INFO]   from pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-parent ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-parent ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-parent ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] --------------------< io.dropwizard.metrics5:docs >---------------------
[INFO] Building Metrics5 Documentation 5.0.0-rc22                        [2/39]
[INFO]   from docs/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ docs ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ docs ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/jacoco.exec
[INFO] 
[INFO] --- build-helper:3.6.0:parse-version (parse-version) @ docs ---
[INFO] 
[INFO] --- resources:3.3.1:resources (process-resources) @ docs ---
[INFO] Copying 72 resources from source to target/source
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ docs ---
[INFO] Copying 72 resources from source to target/classes
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ docs ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ docs ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ docs ---
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ docs ---
[WARNING] Source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/main/java' does not exist, ignoring.
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/java' does not exist, ignoring.
[info] Processed 0 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-bom >-----------------
[INFO] Building Metrics5 BOM 5.0.0-rc22                                  [3/39]
[INFO]   from metrics-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-bom ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-bom ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-bom/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-bom ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-annotation >--------------
[INFO] Building Annotations for Metrics5 5.0.0-rc22                      [4/39]
[INFO]   from metrics-annotation/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-resources-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-resources-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-resources-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-resources-plugin:3.3.1
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-install-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-install-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-install-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-install-plugin:3.1.3
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-annotation ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-annotation ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-annotation ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-annotation ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-annotation ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-annotation ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-annotation:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/metrics-annotation-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-annotation ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/java' does not exist, ignoring.
[info] Processed 9 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-core >-----------------
[INFO] Building Metrics5 Core 5.0.0-rc22                                 [5/39]
[INFO]   from metrics-core/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-core ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-core ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-core ---
[INFO] Compiling 10 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[56,27] [this-escape] possible 'this' escape before subclass is fully initialized
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java:[68,17] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"%s is not in [0..1]", quantile);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java:[240,19] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean 'value > 0, "LockFreeExponentiallyDecayingReservoir size must be positive: %s", value);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java:[51,17] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"%s is not in [0..1]", quantile);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-core ---
[INFO] Compiling 16 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java:[124,54] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean 'assertThat(futures.get(i).get()).withFailMessage("Future %s failed", i).isTrue();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[93,56] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsLessThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsLessThan)
  Did you mean 'assertThat(b).isLessThan(b.resolve("key"));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[101,56] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsLessThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsLessThan)
  Did you mean 'assertThat(MetricName.EMPTY).isLessThan(a);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[102,56] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsLessThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsLessThan)
  Did you mean 'assertThat(MetricName.EMPTY).isLessThan(b);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[92,56] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsGreaterThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsGreaterThan)
  Did you mean 'assertThat(b.resolve("key")).isGreaterThan(b);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[90,41] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsLessThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsLessThan)
  Did you mean 'assertThat(a).isLessThan(b);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[103,41] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsLessThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsLessThan)
  Did you mean 'assertThat(a).isLessThan(b);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[91,41] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsGreaterThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsGreaterThan)
  Did you mean 'assertThat(b).isGreaterThan(a);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java:[104,41] Note: [Refaster Rule] AssertJComparableRules.AssertThatIsGreaterThan: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/AssertJComparableRules#AssertThatIsGreaterThan)
  Did you mean 'assertThat(b).isGreaterThan(a);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[508,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[508,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[529,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[529,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[555,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[555,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[585,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[585,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[611,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[611,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[640,41] [CollectorMutability] Avoid `Collectors.to{List,Map,Set}` in favor of collectors that emphasize (im)mutability
    (see https://error-prone.picnic.tech/bugpatterns/CollectorMutability)
  Did you mean '.collect(toImmutableSet()));' or '.collect(toCollection(HashSet::new)));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java:[640,35] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean '.collect(toSet()));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java:[109,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail("NullPointerException must be thrown !!!");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java:[22,17] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '"Mismatched lengths: %s vs %s", values.length, weights.length);'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-core ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-core ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-core:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/metrics-core-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-core ---
[info] Processed 87 files (6 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-benchmarks >--------------
[INFO] Building Benchmarks for Metrics5 5.0.0-rc22                       [6/39]
[INFO]   from metrics-benchmarks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-benchmarks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-benchmarks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-benchmarks ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] A file for type 'io.dropwizard.metrics5.benchmarks.jmh_generated.SlidingTimeWindowReservoirsBenchmark_arrTime_jmhTest' already exists on the sourcepath or classpath
[WARNING] A file for type 'io.dropwizard.metrics5.benchmarks.jmh_generated.SlidingTimeWindowReservoirsBenchmark_jmhType_B1' already exists on the sourcepath or classpath
[WARNING] A file for type 'io.dropwizard.metrics5.benchmarks.jmh_generated.SlidingTimeWindowReservoirsBenchmark_jmhType_B2' already exists on the sourcepath or classpath
[WARNING] A file for type 'io.dropwizard.metrics5.benchmarks.jmh_generated.SlidingTimeWindowReservoirsBenchmark_jmhType_B3' already exists on the sourcepath or classpath
[WARNING] A file for type 'io.dropwizard.metrics5.benchmarks.jmh_generated.SlidingTimeWindowReservoirsBenchmark_jmhType' already exists on the sourcepath or classpath
[WARNING] A file for type 'io.dropwizard.metrics5.benchmarks.jmh_generated.SlidingTimeWindowReservoirsBenchmark_slidingTime_jmhTest' already exists on the sourcepath or classpath
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-benchmarks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-benchmarks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-benchmarks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (default) @ metrics-benchmarks ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.37 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:5.0.4 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.6.1 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jmh-core-1.37.jar, jopt-simple-5.0.4.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-benchmarks-5.0.0-rc22.jar, metrics-core-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/benchmarks.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-benchmarks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/java' does not exist, ignoring.
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-caffeine3 >--------------
[INFO] Building Metrics Integration for Caffeine 3.x 5.0.0-rc22          [7/39]
[INFO]   from metrics-caffeine3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-caffeine3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-caffeine3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-caffeine3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-caffeine3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-caffeine3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-caffeine3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-caffeine3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/metrics-caffeine3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-caffeine3 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-collectd >---------------
[INFO] Building Metrics Integration for Collectd 5.0.0-rc22              [8/39]
[INFO]   from metrics-collectd/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-collectd ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-collectd ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-collectd ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[306,57] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[152,21] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '!username.isEmpty(), "username is required for securityLevel: %s", securityLevel);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[154,21] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '!password.isEmpty(), "password is required for securityLevel: %s", securityLevel);'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java:[125,20] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'if (Strings.isNullOrEmpty(val)) {'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-collectd ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-collectd ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-collectd ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-collectd:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/metrics-collectd-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-collectd ---
[info] Processed 12 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-ehcache >---------------
[INFO] Building Metrics Integration for Ehcache 5.0.0-rc22               [9/39]
[INFO]   from metrics-ehcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-ehcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-ehcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-ehcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-ehcache ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-ehcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-ehcache ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-ehcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-ehcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-ehcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/metrics-ehcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-ehcache ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-graphite >---------------
[INFO] Building Graphite Integration for Metrics5 5.0.0-rc22            [10/39]
[INFO]   from metrics-graphite/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-graphite ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-graphite ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-graphite ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-graphite ---
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java:[68,35] Note: [Refaster Rule] StringRules.StringIsNullOrEmpty: Refactoring opportunity
    (see https://error-prone.picnic.tech/refasterrules/StringRules#StringIsNullOrEmpty)
  Did you mean 'checkArgument(!Strings.isNullOrEmpty(hostname), "hostname must not be null or empty");'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[431,14] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[436,16] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[449,17] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-graphite ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-graphite ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-graphite ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-graphite ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-graphite:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/metrics-graphite-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-graphite ---
[info] Processed 13 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-influxdb >---------------
[INFO] Building InfluxDB integration for Metrics5 5.0.0-rc22            [11/39]
[INFO]   from metrics-influxdb/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-influxdb ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-influxdb ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-influxdb ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[282,14] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[287,16] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-influxdb ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-influxdb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-influxdb ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-influxdb:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/metrics-influxdb-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-influxdb ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jvm >-----------------
[INFO] Building JVM Integration for Metrics5 5.0.0-rc22                 [12/39]
[INFO]   from metrics-jvm/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jvm ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jvm ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jvm ---
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jvm ---
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[56,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[65,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[74,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[83,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[92,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[101,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java:[37,14] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(new FileDescriptorRatioGauge().getValue())'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jvm ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jvm ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jvm:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/metrics-jvm-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jvm ---
[info] Processed 23 files (1 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-healthchecks >-------------
[INFO] Building Metrics5 Health Checks 5.0.0-rc22                       [13/39]
[INFO]   from metrics-healthchecks/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-healthchecks ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java:[97,19] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
  Did you mean '!healthChecks.containsKey(name), "A health check named %s already exists", name);'?
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-healthchecks ---
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-healthchecks ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-healthchecks:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/metrics-healthchecks-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-healthchecks ---
[info] Processed 14 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient >--------------
[INFO] Building Metrics Integration for Apache HttpClient 5.0.0-rc22    [14/39]
[INFO]   from metrics-httpclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java:[124,22] [deprecation] rewriteURI(URI,HttpHost,boolean) in URIUtils has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java:[69,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/metrics-httpclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient ---
[info] Processed 8 files (1 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient5 >-------------
[INFO] Building Metrics Integration for Apache HttpClient 5.x 5.0.0-rc22 [15/39]
[INFO]   from metrics-httpclient5/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient5 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient5 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient5 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient5 ---
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[46,10] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[68,12] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[104,26] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[109,26] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[147,28] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[157,28] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[163,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[214,28] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java:[219,28] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[69,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail();'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient5 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient5 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient5:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/metrics-httpclient5-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient5 ---
[info] Processed 13 files (2 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-httpasyncclient >-----------
[INFO] Building Metrics Integration for Apache HttpAsyncClient 5.0.0-rc22 [16/39]
[INFO]   from metrics-httpasyncclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpasyncclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpasyncclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpasyncclient ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpasyncclient ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java:[121,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail("This should fail as the client should not be able to connect");'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpasyncclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpasyncclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpasyncclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/metrics-httpasyncclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpasyncclient ---
[info] Processed 5 files (1 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-jakarta-servlet >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 5.0.0-rc22     [17/39]
[INFO]   from metrics-jakarta-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/metrics-jakarta-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlet6 >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 6.x 5.0.0-rc22 [18/39]
[INFO]   from metrics-jakarta-servlet6/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet6 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet6 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet6 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet6 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet6 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet6 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet6:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/metrics-jakarta-servlet6-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet6 ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-json >-----------------
[INFO] Building Jackson Integration for Metrics5 5.0.0-rc22             [19/39]
[INFO]   from metrics-json/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-json ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-json ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-json ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-json ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-json ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-json ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-json:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/metrics-json-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-json ---
[info] Processed 4 files (1 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty11 >---------------
[INFO] Building Metrics Integration for Jetty 11.x and higher 5.0.0-rc22 [20/39]
[INFO]   from metrics-jetty11/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty11 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty11 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty11 ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty11 ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty11 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty11 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty11:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/metrics-jetty11-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty11 ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlets >-----------
[INFO] Building Metrics5 Utility Jakarta Servlets 5.0.0-rc22            [21/39]
[INFO]   from metrics-jakarta-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlets ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlets ---
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[31,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[223,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[224,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[244,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[245,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[247,46] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/metrics-jakarta-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlets ---
[info] Processed 17 files (1 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jcache >----------------
[INFO] Building Metrics Integration for JCache 5.0.0-rc22               [22/39]
[INFO]   from metrics-jcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcache ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcache ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/metrics-jcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcache ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-jdbi3 >----------------
[INFO] Building Metrics Integration for JDBI3 5.0.0-rc22                [23/39]
[INFO]   from metrics-jdbi3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jdbi3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jdbi3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jdbi3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jdbi3 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jdbi3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jdbi3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jdbi3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/metrics-jdbi3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jdbi3 ---
[info] Processed 15 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey2 >---------------
[INFO] Building Metrics Integration for Jersey 2.x 5.0.0-rc22           [24/39]
[INFO]   from metrics-jersey2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey2 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey2 ---
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[110,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail("expected RuntimeException");'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/metrics-jersey2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey2 ---
[info] Processed 24 files (1 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey3 >---------------
[INFO] Building Metrics Integration for Jersey 3.0.x 5.0.0-rc22         [25/39]
[INFO]   from metrics-jersey3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey3 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey3 ---
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[111,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail("expected RuntimeException");'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/metrics-jersey3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey3 ---
[info] Processed 24 files (1 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jersey31 >---------------
[INFO] Building Metrics Integration for Jersey 3.1.x 5.0.0-rc22         [26/39]
[INFO]   from metrics-jersey31/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey31 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey31 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey31 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey31 ---
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java:[111,16] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'fail("expected RuntimeException");'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey31 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey31 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey31:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/metrics-jersey31-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey31 ---
[info] Processed 24 files (1 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty10 >---------------
[INFO] Building Metrics Integration for Jetty 10.x and higher 5.0.0-rc22 [27/39]
[INFO]   from metrics-jetty10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty10 ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty10 ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/metrics-jetty10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty10 ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-log4j2 >----------------
[INFO] Building Metrics Integration for Log4j 2.x 5.0.0-rc22            [28/39]
[INFO]   from metrics-log4j2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-log4j2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-log4j2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-log4j2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-log4j2 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-log4j2 ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-log4j2 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-log4j2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-log4j2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-log4j2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/metrics-log4j2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-log4j2 ---
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback13 >--------------
[INFO] Building Metrics Integration for Logback 1.3.x 5.0.0-rc22        [29/39]
[INFO]   from metrics-logback13/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback13 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback13 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback13 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback13 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback13 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback13 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback13:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/metrics-logback13-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback13 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback14 >--------------
[INFO] Building Metrics Integration for Logback 1.4.x 5.0.0-rc22        [30/39]
[INFO]   from metrics-logback14/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback14 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback14 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback14 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback14 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback14 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback14 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback14:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/metrics-logback14-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback14 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback15 >--------------
[INFO] Building Metrics Integration for Logback 1.5.x 5.0.0-rc22        [31/39]
[INFO]   from metrics-logback15/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback15 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback15 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback15 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback15 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback15 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback15 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback15:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/metrics-logback15-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback15 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-servlet >---------------
[INFO] Building Metrics Integration for Servlets 5.0.0-rc22             [32/39]
[INFO]   from metrics-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/metrics-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-servlets >---------------
[INFO] Building Metrics5 Utility Servlets 5.0.0-rc22                    [33/39]
[INFO]   from metrics-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlets ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlets ---
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[31,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[223,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[224,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[244,56] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletContext servletContext = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[245,54] Note: [MockitoMockClassReference] Don't unnecessarily pass a type to Mockito's `mock(Class)` and `spy(Class)` methods
    (see https://error-prone.picnic.tech/bugpatterns/MockitoMockClassReference)
  Did you mean 'final ServletConfig servletConfig = mock();'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java:[247,46] Note: [MockitoStubbing] Don't unnecessarily use Mockito's `eq(...)`
    (see https://error-prone.picnic.tech/bugpatterns/MockitoStubbing)
  Did you mean 'when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/metrics-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlets ---
[info] Processed 16 files (1 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jcstress >---------------
[INFO] Building Metrics5 JCStress tests 5.0.0-rc22                      [34/39]
[INFO]   from metrics-jcstress/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcstress ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcstress ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcstress ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcstress ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcstress ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-jcstress ---
[INFO] 
[INFO] --- shade:3.6.0:shade (main) @ metrics-jcstress ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jcstress:jcstress-core:jar:0.16 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including net.java.dev.jna:jna:jar:5.8.0 in the shaded jar.
[INFO] Including net.java.dev.jna:jna-platform:jar:5.8.0 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] guava-33.3.1-jre.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] checker-qual-3.43.0.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] checker-qual-3.43.0.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jcstress-core-0.16.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar, jopt-simple-4.6.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-core-5.0.0-rc22.jar, metrics-jcstress-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] jna-5.8.0.jar, jna-platform-5.8.0.jar define 2 overlapping resources: 
[WARNING]   - META-INF/AL2.0
[WARNING]   - META-INF/LGPL2.1
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jcstress.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcstress ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/java' does not exist, ignoring.
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jmx >-----------------
[INFO] Building Metrics Integration with JMX 5.0.0-rc22                 [35/39]
[INFO]   from metrics-jmx/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jmx ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jmx ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jmx ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jmx ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jmx ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jmx ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jmx:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/metrics-jmx-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jmx ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-legacy-adapter >------------
[INFO] Building Metrics5 Adapter to Metrics 3/4 API 5.0.0-rc22          [36/39]
[INFO]   from metrics-legacy-adapter/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,49] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,9] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[108,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[112,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter ---
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java:[25,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(32.62, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java:[26,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(32.62, offset(0.1));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[21,59] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(1.58, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[22,56] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getMedian()).isCloseTo(3, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[23,66] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[24,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get95thPercentile()).isCloseTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[25,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get98thPercentile()).isCloseTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[26,64] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get99thPercentile()).isCloseTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java:[27,65] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.get999thPercentile()).isCloseTo(5, offset(0.01));'?
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java:[25,60] Note: [StaticImport] Identifier should be statically imported
    (see https://error-prone.picnic.tech/bugpatterns/StaticImport)
  Did you mean 'assertThat(snapshot.getStdDev()).isCloseTo(36.47, offset(0.1));'?
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/metrics-legacy-adapter-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter ---
[info] Processed 60 files (4 reformatted).
[INFO] 
[INFO] -----< io.dropwizard.metrics5:metrics-legacy-adapter-healthchecks >-----
[INFO] Building Metrics5 Health Checks Adapter to Metrics 3/4 API 5.0.0-rc22 [37/39]
[INFO]   from metrics-legacy-adapter-healthchecks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter-healthchecks ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter-healthchecks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter-healthchecks ---
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter-healthchecks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/java' does not exist, ignoring.
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty12 >---------------
[INFO] Building Metrics Integration for Jetty 12.x and higher 5.0.0-rc22 [38/39]
[INFO]   from metrics-jetty12/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/metrics-jetty12-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12 ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-jetty12-ee10 >-------------
[INFO] Building Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 5.0.0-rc22 [39/39]
[INFO]   from metrics-jetty12-ee10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12-ee10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12-ee10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12-ee10 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12-ee10 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12-ee10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12-ee10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12-ee10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/metrics-jetty12-ee10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12-ee10 ---
[info] Processed 2 files (0 reformatted).
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Metrics5 Parent 5.0.0-rc22:
[INFO] 
[INFO] Metrics5 Parent .................................... SUCCESS [  0.391 s]
[INFO] Metrics5 Documentation ............................. SUCCESS [  1.880 s]
[INFO] Metrics5 BOM ....................................... SUCCESS [  0.014 s]
[INFO] Annotations for Metrics5 ........................... SUCCESS [  1.568 s]
[INFO] Metrics5 Core ...................................... SUCCESS [ 22.310 s]
[INFO] Benchmarks for Metrics5 ............................ SUCCESS [  5.459 s]
[INFO] Metrics Integration for Caffeine 3.x ............... SUCCESS [  1.077 s]
[INFO] Metrics Integration for Collectd ................... SUCCESS [ 10.115 s]
[INFO] Metrics Integration for Ehcache .................... SUCCESS [  4.245 s]
[INFO] Graphite Integration for Metrics5 .................. SUCCESS [ 11.673 s]
[INFO] InfluxDB integration for Metrics5 .................. SUCCESS [  9.941 s]
[INFO] JVM Integration for Metrics5 ....................... SUCCESS [  9.770 s]
[INFO] Metrics5 Health Checks ............................. SUCCESS [ 10.600 s]
[INFO] Metrics Integration for Apache HttpClient .......... SUCCESS [  4.977 s]
[INFO] Metrics Integration for Apache HttpClient 5.x ...... SUCCESS [  5.551 s]
[INFO] Metrics Integration for Apache HttpAsyncClient ..... SUCCESS [  4.450 s]
[INFO] Metrics Integration for Jakarta Servlets ........... SUCCESS [  1.031 s]
[INFO] Metrics Integration for Jakarta Servlets 6.x ....... SUCCESS [  0.975 s]
[INFO] Jackson Integration for Metrics5 ................... SUCCESS [  7.408 s]
[INFO] Metrics Integration for Jetty 11.x and higher ...... SUCCESS [ 10.104 s]
[INFO] Metrics5 Utility Jakarta Servlets .................. SUCCESS [  5.666 s]
[INFO] Metrics Integration for JCache ..................... SUCCESS [  7.253 s]
[INFO] Metrics Integration for JDBI3 ...................... SUCCESS [  3.869 s]
[INFO] Metrics Integration for Jersey 2.x ................. SUCCESS [  9.938 s]
[INFO] Metrics Integration for Jersey 3.0.x ............... SUCCESS [ 10.113 s]
[INFO] Metrics Integration for Jersey 3.1.x ............... SUCCESS [ 10.754 s]
[INFO] Metrics Integration for Jetty 10.x and higher ...... SUCCESS [ 10.424 s]
[INFO] Metrics Integration for Log4j 2.x .................. SUCCESS [  3.974 s]
[INFO] Metrics Integration for Logback 1.3.x .............. SUCCESS [  4.406 s]
[INFO] Metrics Integration for Logback 1.4.x .............. SUCCESS [  4.368 s]
[INFO] Metrics Integration for Logback 1.5.x .............. SUCCESS [  4.072 s]
[INFO] Metrics Integration for Servlets ................... SUCCESS [  0.960 s]
[INFO] Metrics5 Utility Servlets .......................... SUCCESS [  5.149 s]
[INFO] Metrics5 JCStress tests ............................ SUCCESS [  1.683 s]
[INFO] Metrics Integration with JMX ....................... SUCCESS [ 10.200 s]
[INFO] Metrics5 Adapter to Metrics 3/4 API ................ SUCCESS [  9.881 s]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API .. SUCCESS [  0.890 s]
[INFO] Metrics Integration for Jetty 12.x and higher ...... SUCCESS [  7.734 s]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 SUCCESS [  4.772 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  04:00 min
[INFO] Finished at: 2024-11-18T12:55:25+01:00
[INFO] ------------------------------------------------------------------------
diff --git a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java
index 7b54d0b..b04d203 100644
--- a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java
+++ b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java
@@ -150,9 +150,9 @@ public class CollectdReporter extends ScheduledReporter {
     public CollectdReporter build(Sender sender) {
       if (securityLevel != SecurityLevel.NONE) {
         checkArgument(
-            !username.isEmpty(), "username is required for securityLevel: " + securityLevel);
+            !username.isEmpty(), "username is required for securityLevel: %s", securityLevel);
         checkArgument(
-            !password.isEmpty(), "password is required for securityLevel: " + securityLevel);
+            !password.isEmpty(), "password is required for securityLevel: %s", securityLevel);
       }
       return new CollectdReporter(
           registry,
diff --git a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java
index 764b5f8..8318562 100644
--- a/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java
+++ b/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/PacketWriter.java
@@ -4,6 +4,7 @@ import static com.google.common.base.Preconditions.checkState;
 import static java.nio.charset.StandardCharsets.US_ASCII;
 import static java.nio.charset.StandardCharsets.UTF_8;
 
+import com.google.common.base.Strings;
 import java.io.IOException;
 import java.nio.BufferOverflowException;
 import java.nio.ByteBuffer;
@@ -122,7 +123,7 @@ class PacketWriter {
   }
 
   private void writeString(ByteBuffer buffer, int type, String val) {
-    if (val == null || val.isEmpty()) {
+    if (Strings.isNullOrEmpty(val)) {
       return;
     }
     int len = HEADER_LEN + val.length() + 1;
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java b/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java
index 6e22c83..257a72b 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/ConsoleReporter.java
@@ -1,6 +1,5 @@
 package io.dropwizard.metrics5;
 
-
 import com.google.common.collect.ImmutableSet;
 import java.io.PrintStream;
 import java.text.DateFormat;
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java b/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java
index 43690af..bf4470b 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/LockFreeExponentiallyDecayingReservoir.java
@@ -238,7 +238,7 @@ public final class LockFreeExponentiallyDecayingReservoir implements Reservoir {
      */
     public Builder size(int value) {
       checkArgument(
-          value > 0, "LockFreeExponentiallyDecayingReservoir size must be positive: " + value);
+          value > 0, "LockFreeExponentiallyDecayingReservoir size must be positive: %s", value);
       this.size = value;
       return this;
     }
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java b/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java
index 28c6a60..8a478d9 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/UniformSnapshot.java
@@ -50,7 +50,8 @@ public class UniformSnapshot extends Snapshot {
   public double getValue(double quantile) {
     checkArgument(
         quantile >= 0.0 && quantile <= 1.0 && !Double.isNaN(quantile),
-        quantile + " is not in [0..1]");
+        "%s is not in [0..1]",
+        quantile);
 
     if (values.length == 0) {
       return 0.0;
diff --git a/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java b/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java
index 156bd3c..3e5c339 100644
--- a/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java
+++ b/metrics-core/src/main/java/io/dropwizard/metrics5/WeightedSnapshot.java
@@ -67,7 +67,8 @@ public class WeightedSnapshot extends Snapshot {
   public double getValue(double quantile) {
     checkArgument(
         quantile >= 0.0 && quantile <= 1.0 && !Double.isNaN(quantile),
-        quantile + " is not in [0..1]");
+        "%s is not in [0..1]",
+        quantile);
 
     if (values.length == 0) {
       return 0.0;
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java
index 356b1a5..8c2720a 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/CachedGaugeTest.java
@@ -121,7 +121,7 @@ final class CachedGaugeTest {
     }
 
     for (int i = 0; i < futures.size(); i++) {
-      assertThat(futures.get(i).get()).withFailMessage("Future " + i + " failed").isTrue();
+      assertThat(futures.get(i).get()).withFailMessage("Future %s failed", i).isTrue();
     }
 
     executor.shutdown();
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java
index 35860d7..286e40f 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricNameTest.java
@@ -87,10 +87,10 @@ final class MetricNameTest {
     final MetricName a = MetricName.EMPTY.tagged("foo", "bar");
     final MetricName b = MetricName.EMPTY.tagged("foo", "baz");
 
-    assertThat(a.compareTo(b)).isNegative();
-    assertThat(b.compareTo(a)).isPositive();
-    assertThat(b.resolve("key").compareTo(b)).isPositive();
-    assertThat(b.compareTo(b.resolve("key"))).isNegative();
+    assertThat(a).isLessThan(b);
+    assertThat(b).isGreaterThan(a);
+    assertThat(b.resolve("key")).isGreaterThan(b);
+    assertThat(b).isLessThan(b.resolve("key"));
   }
 
   @Test
@@ -98,9 +98,9 @@ final class MetricNameTest {
     final MetricName a = MetricName.EMPTY.tagged("a", "x");
     final MetricName b = MetricName.EMPTY.tagged("b", "x");
 
-    assertThat(MetricName.EMPTY.compareTo(a)).isNegative();
-    assertThat(MetricName.EMPTY.compareTo(b)).isNegative();
-    assertThat(a.compareTo(b)).isNegative();
-    assertThat(b.compareTo(a)).isPositive();
+    assertThat(MetricName.EMPTY).isLessThan(a);
+    assertThat(MetricName.EMPTY).isLessThan(b);
+    assertThat(a).isLessThan(b);
+    assertThat(b).isGreaterThan(a);
   }
 }
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java
index d79a191..dddda8d 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/MetricRegistryTest.java
@@ -12,7 +12,6 @@ import static org.mockito.Mockito.verify;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
-import java.util.stream.Collectors;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
@@ -505,7 +504,7 @@ final class MetricRegistryTest {
         .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
   }
 
   @Test
@@ -526,7 +525,7 @@ final class MetricRegistryTest {
         .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
   }
 
   @Test
@@ -552,7 +551,7 @@ final class MetricRegistryTest {
         .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
 
     assertThat(childMetrics)
         .containsAll(
@@ -582,7 +581,7 @@ final class MetricRegistryTest {
         .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
 
     assertThat(childMetrics).doesNotContain(MetricName.build("test-1"));
   }
@@ -608,7 +607,7 @@ final class MetricRegistryTest {
         .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
 
     assertThat(childMetrics).doesNotContain(MetricName.build("test-1"), MetricName.build("test-3"));
   }
@@ -637,7 +636,7 @@ final class MetricRegistryTest {
         .hasSameElementsAs(
             childMetrics.stream()
                 .map(m -> MetricName.build("child", m.getKey()))
-                .collect(Collectors.toSet()));
+                .collect(toImmutableSet()));
 
     assertThat(childMetrics)
         .containsAll(
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java
index a3e7329..59c187f 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/ScheduledReporterTest.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5;
 
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.assertThatThrownBy;
+import static org.assertj.core.api.Assertions.fail;
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.mockito.Mockito.any;
 import static org.mockito.Mockito.eq;
@@ -19,7 +20,6 @@ import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 import java.util.concurrent.atomic.AtomicInteger;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
@@ -106,7 +106,7 @@ final class ScheduledReporterTest {
       r =
           new DummyReporter(
               null, "example", MetricFilter.ALL, TimeUnit.SECONDS, TimeUnit.MILLISECONDS, executor);
-      Assertions.fail("NullPointerException must be thrown !!!");
+      fail("NullPointerException must be thrown !!!");
     } catch (NullPointerException e) {
       assertEquals("registry == null", e.getMessage());
     } finally {
diff --git a/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java b/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java
index 052948c..b059444 100644
--- a/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java
+++ b/metrics-core/src/test/java/io/dropwizard/metrics5/WeightedSnapshotTest.java
@@ -21,7 +21,9 @@ final class WeightedSnapshotTest {
       long[] values, double[] weights) {
     checkArgument(
         values.length == weights.length,
-        "Mismatched lengths: " + values.length + " vs " + weights.length);
+        "Mismatched lengths: %s vs %s",
+        values.length,
+        weights.length);
 
     final List<WeightedSnapshot.WeightedSample> samples = new ArrayList<>();
     for (int i = 0; i < values.length; i++) {
diff --git a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java
index 8dfe5cf..36efd52 100644
--- a/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java
+++ b/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/Graphite.java
@@ -5,6 +5,7 @@ import static com.google.common.base.Preconditions.checkState;
 import static java.nio.charset.StandardCharsets.UTF_8;
 import static java.util.Objects.requireNonNull;
 
+import com.google.common.base.Strings;
 import java.io.BufferedWriter;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
@@ -65,7 +66,7 @@ public class Graphite implements GraphiteSender {
    * @param charset the character set used by the server
    */
   public Graphite(String hostname, int port, SocketFactory socketFactory, Charset charset) {
-    checkArgument(hostname != null && !hostname.isEmpty(), "hostname must not be null or empty");
+    checkArgument(!Strings.isNullOrEmpty(hostname), "hostname must not be null or empty");
 
     checkArgument(port >= 0 && port <= 65535, "port must be a valid IP port (0-65535)");
 
diff --git a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java
index 77b1e1e..467fc76 100644
--- a/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java
+++ b/metrics-healthchecks/src/main/java/io/dropwizard/metrics5/health/HealthCheckRegistry.java
@@ -95,7 +95,7 @@ public class HealthCheckRegistry {
     HealthCheck registered;
     synchronized (lock) {
       checkArgument(
-          !healthChecks.containsKey(name), "A health check named " + name + " already exists");
+          !healthChecks.containsKey(name), "A health check named %s already exists", name);
       registered = healthCheck;
       if (healthCheck.getClass().isAnnotationPresent(Async.class)) {
         registered = new AsyncHealthCheckDecorator(healthCheck, asyncExecutorService);
diff --git a/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java b/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java
index 44f52fa..833855e 100644
--- a/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java
+++ b/metrics-httpasyncclient/src/test/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedHttpClientsTimerTest.java
@@ -1,6 +1,7 @@
 package io.dropwizard.metrics5.httpasyncclient;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
@@ -19,7 +20,6 @@ import org.apache.http.client.methods.HttpGet;
 import org.apache.http.concurrent.FutureCallback;
 import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
 import org.apache.http.nio.client.HttpAsyncClient;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
@@ -118,7 +118,7 @@ final class InstrumentedHttpClientsTimerTest extends HttpClientTestBase {
 
     try {
       responseFuture.get(20, TimeUnit.SECONDS);
-      Assertions.fail("This should fail as the client should not be able to connect");
+      fail("This should fail as the client should not be able to connect");
     } catch (Exception e) {
       // Ignore
     }
diff --git a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java
index e5c7259..905b1a5 100644
--- a/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java
+++ b/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientsTest.java
@@ -1,6 +1,7 @@
 package io.dropwizard.metrics5.httpclient;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
@@ -18,7 +19,6 @@ import org.apache.http.HttpRequest;
 import org.apache.http.NoHttpResponseException;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.methods.HttpGet;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
@@ -66,7 +66,7 @@ final class InstrumentedHttpClientsTest {
 
     try {
       client.execute(get);
-      Assertions.fail();
+      fail();
     } catch (NoHttpResponseException expected) {
       assertThat(metricRegistry.getMeters()).containsKey(MetricName.build("exception"));
     } finally {
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java
index b67225a..ee5ceb2 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpAsyncClientsTest.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.httpclient5;
 
 import static java.nio.charset.StandardCharsets.US_ASCII;
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 import static org.awaitility.Awaitility.await;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
@@ -30,7 +31,6 @@ import org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager;
 import org.apache.hc.core5.concurrent.FutureCallback;
 import org.apache.hc.core5.http.ConnectionClosedException;
 import org.apache.hc.core5.http.HttpRequest;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.AfterEach;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
@@ -101,12 +101,12 @@ final class InstrumentedHttpAsyncClientsTest {
 
               @Override
               public void failed(Exception ex) {
-                Assertions.fail();
+                fail();
               }
 
               @Override
               public void cancelled() {
-                Assertions.fail();
+                fail();
               }
             });
     responseFuture.get(1L, TimeUnit.SECONDS);
@@ -144,7 +144,7 @@ final class InstrumentedHttpAsyncClientsTest {
               new FutureCallback<SimpleHttpResponse>() {
                 @Override
                 public void completed(SimpleHttpResponse result) {
-                  Assertions.fail();
+                  fail();
                 }
 
                 @Override
@@ -154,13 +154,13 @@ final class InstrumentedHttpAsyncClientsTest {
 
                 @Override
                 public void cancelled() {
-                  Assertions.fail();
+                  fail();
                 }
               });
       countDownLatch.await(5, TimeUnit.SECONDS);
       responseFuture.get(5, TimeUnit.SECONDS);
 
-      Assertions.fail();
+      fail();
     } catch (ExecutionException e) {
       assertThat(e).hasCauseInstanceOf(ConnectionClosedException.class);
       await()
@@ -211,12 +211,12 @@ final class InstrumentedHttpAsyncClientsTest {
 
                 @Override
                 public void failed(Exception ex) {
-                  Assertions.fail();
+                  fail();
                 }
 
                 @Override
                 public void cancelled() {
-                  Assertions.fail();
+                  fail();
                 }
               });
       responseFuture.get(1L, TimeUnit.SECONDS);
diff --git a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java
index 46cdc5e..c935e61 100644
--- a/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java
+++ b/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java
@@ -1,6 +1,7 @@
 package io.dropwizard.metrics5.httpclient5;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
@@ -18,7 +19,6 @@ import org.apache.hc.client5.http.classic.HttpClient;
 import org.apache.hc.client5.http.classic.methods.HttpGet;
 import org.apache.hc.core5.http.HttpRequest;
 import org.apache.hc.core5.http.NoHttpResponseException;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
@@ -66,7 +66,7 @@ final class InstrumentedHttpClientsTest {
 
     try {
       client.execute(get);
-      Assertions.fail();
+      fail();
     } catch (NoHttpResponseException expected) {
       assertThat(metricRegistry.getMeters()).containsKey(MetricName.build("exception"));
     } finally {
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
index e8208b0..df10b41 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
@@ -220,8 +220,8 @@ final class HealthCheckServletTest extends AbstractServletTest {
       throws Exception {
     assertThatThrownBy(
             () -> {
-              final ServletContext servletContext = mock(ServletContext.class);
-              final ServletConfig servletConfig = mock(ServletConfig.class);
+              final ServletContext servletContext = mock();
+              final ServletConfig servletConfig = mock();
               when(servletConfig.getServletContext()).thenReturn(servletContext);
               when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
                   .thenReturn("IRELLEVANT_STRING");
diff --git a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
index d74900f..67d9741 100644
--- a/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
+++ b/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
@@ -2,7 +2,6 @@ package io.dropwizard.metrics5.servlets;
 
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.assertThatThrownBy;
-import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
@@ -241,10 +240,10 @@ final class MetricsServletTest extends AbstractServletTest {
       throws Exception {
     assertThatThrownBy(
             () -> {
-              final ServletContext servletContext = mock(ServletContext.class);
-              final ServletConfig servletConfig = mock(ServletConfig.class);
+              final ServletContext servletContext = mock();
+              final ServletConfig servletConfig = mock();
               when(servletConfig.getServletContext()).thenReturn(servletContext);
-              when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
+              when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))
                   .thenReturn("IRELLEVANT_STRING");
 
               final MetricsServlet metricsServlet = new MetricsServlet(null);
diff --git a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java
index eeec0da..01abf40 100644
--- a/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java
+++ b/metrics-jersey2/src/test/java/io/dropwizard/metrics5/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java
@@ -1,6 +1,7 @@
 package io.dropwizard.metrics5.jersey2;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -10,7 +11,6 @@ import io.dropwizard.metrics5.jersey2.resources.InstrumentedSubResourceResponseM
 import java.util.logging.Level;
 import java.util.logging.Logger;
 import javax.ws.rs.core.Application;
-import org.assertj.core.api.Assertions;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
@@ -107,7 +107,7 @@ final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest
   void responseMeteredUnmappedExceptionPerClassMethodsAreMetered() {
     try {
       target("responseMeteredRuntimeExceptionPerClass").request().get();
-      Assertions.fail("expected RuntimeException");
+      fail("expected RuntimeException");
     } catch (Exception e) {
       assertThat(e.getCause()).isInstanceOf(RuntimeException.class);
     }
diff --git a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java
index 00e401f..272caf0 100644
--- a/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java
+++ b/metrics-jersey3/src/test/java/io/dropwizard/metrics5/jersey3/SingletonMetricsResponseMeteredPerClassJerseyTest.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.jersey3;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -11,7 +12,6 @@ import io.dropwizard.metrics5.jersey3.resources.InstrumentedSubResourceResponseM
 import jakarta.ws.rs.core.Application;
 import java.util.logging.Level;
 import java.util.logging.Logger;
-import org.assertj.core.api.Assertions;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
@@ -108,7 +108,7 @@ final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest
   void responseMeteredUnmappedExceptionPerClassMethodsAreMetered() {
     try {
       target("responseMeteredRuntimeExceptionPerClass").request().get();
-      Assertions.fail("expected RuntimeException");
+      fail("expected RuntimeException");
     } catch (Exception e) {
       assertThat(e.getCause()).isInstanceOf(RuntimeException.class);
     }
diff --git a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java
index fdd0440..e7d6d3c 100644
--- a/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java
+++ b/metrics-jersey31/src/test/java/io/dropwizard/metrics5/jersey31/SingletonMetricsResponseMeteredPerClassJerseyTest.java
@@ -2,6 +2,7 @@ package io.dropwizard.metrics5.jersey31;
 
 import static io.dropwizard.metrics5.MetricRegistry.name;
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.fail;
 
 import io.dropwizard.metrics5.Meter;
 import io.dropwizard.metrics5.MetricRegistry;
@@ -11,7 +12,6 @@ import io.dropwizard.metrics5.jersey31.resources.InstrumentedSubResourceResponse
 import jakarta.ws.rs.core.Application;
 import java.util.logging.Level;
 import java.util.logging.Logger;
-import org.assertj.core.api.Assertions;
 import org.glassfish.jersey.server.ResourceConfig;
 import org.glassfish.jersey.test.JerseyTest;
 import org.junit.jupiter.api.Test;
@@ -108,7 +108,7 @@ final class SingletonMetricsResponseMeteredPerClassJerseyTest extends JerseyTest
   void responseMeteredUnmappedExceptionPerClassMethodsAreMetered() {
     try {
       target("responseMeteredRuntimeExceptionPerClass").request().get();
-      Assertions.fail("expected RuntimeException");
+      fail("expected RuntimeException");
     } catch (Exception e) {
       assertThat(e.getCause()).isInstanceOf(RuntimeException.class);
     }
diff --git a/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java b/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java
index 0c6cfcf..7db5876 100644
--- a/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java
+++ b/metrics-json/src/main/java/io/dropwizard/metrics5/json/HealthCheckModule.java
@@ -1,6 +1,5 @@
 package io.dropwizard.metrics5.json;
 
-
 import com.fasterxml.jackson.core.JsonGenerator;
 import com.fasterxml.jackson.core.Version;
 import com.fasterxml.jackson.databind.Module;
diff --git a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java
index 019d29c..7f25d68 100644
--- a/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java
+++ b/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/FileDescriptorRatioGaugeTest.java
@@ -8,7 +8,6 @@ import static org.mockito.Mockito.when;
 import com.sun.management.UnixOperatingSystemMXBean;
 import java.lang.management.ManagementFactory;
 import java.lang.management.OperatingSystemMXBean;
-import org.assertj.core.api.Assertions;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
@@ -34,9 +33,7 @@ final class FileDescriptorRatioGaugeTest {
     OperatingSystemMXBean osBean = ManagementFactory.getOperatingSystemMXBean();
     assumeTrue(osBean instanceof com.sun.management.UnixOperatingSystemMXBean);
 
-    Assertions.assertThat(new FileDescriptorRatioGauge().getValue())
-        .isNotNegative()
-        .isLessThanOrEqualTo(1.0);
+    assertThat(new FileDescriptorRatioGauge().getValue()).isNotNegative().isLessThanOrEqualTo(1.0);
   }
 
   @Test
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java
index 39c5242..b57f137 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java
@@ -1,8 +1,8 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
@@ -22,7 +22,7 @@ final class ExponentiallyDecayingReservoirTest {
     assertThat(snapshot.getValues()).contains(120, 130, 140, 190, 200);
     assertThat(snapshot.getMin()).isEqualTo(120);
     assertThat(snapshot.getMax()).isEqualTo(200);
-    assertThat(snapshot.getStdDev()).isCloseTo(32.62, Offset.offset(0.1));
+    assertThat(snapshot.getStdDev()).isCloseTo(32.62, offset(0.1));
     assertThat(snapshot.get75thPercentile()).isEqualTo(190);
     assertThat(snapshot.get95thPercentile()).isEqualTo(200);
     assertThat(snapshot.get98thPercentile()).isEqualTo(200);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java
index a141c70..db5f29b 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/HistogramTest.java
@@ -1,8 +1,8 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
@@ -23,7 +23,7 @@ final class HistogramTest {
     assertThat(snapshot.getValues()).contains(120, 130, 140, 190, 200);
     assertThat(snapshot.getMin()).isEqualTo(120);
     assertThat(snapshot.getMax()).isEqualTo(200);
-    assertThat(snapshot.getStdDev()).isCloseTo(32.62, Offset.offset(0.1));
+    assertThat(snapshot.getStdDev()).isCloseTo(32.62, offset(0.1));
     assertThat(snapshot.get75thPercentile()).isEqualTo(190);
     assertThat(snapshot.get95thPercentile()).isEqualTo(200);
     assertThat(snapshot.get98thPercentile()).isEqualTo(200);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java
index 24a6ae0..77cbdf1 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/SnapshotTest.java
@@ -1,10 +1,10 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
 import io.dropwizard.metrics5.UniformSnapshot;
 import java.io.ByteArrayOutputStream;
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
@@ -18,13 +18,13 @@ final class SnapshotTest {
     assertThat(snapshot.size()).isEqualTo(5);
     assertThat(snapshot.getMin()).isEqualTo(1);
     assertThat(snapshot.getMax()).isEqualTo(5);
-    assertThat(snapshot.getStdDev()).isCloseTo(1.58, Offset.offset(0.01));
-    assertThat(snapshot.getMedian()).isCloseTo(3, Offset.offset(0.01));
-    assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, Offset.offset(0.01));
-    assertThat(snapshot.get95thPercentile()).isCloseTo(5, Offset.offset(0.01));
-    assertThat(snapshot.get98thPercentile()).isCloseTo(5, Offset.offset(0.01));
-    assertThat(snapshot.get99thPercentile()).isCloseTo(5, Offset.offset(0.01));
-    assertThat(snapshot.get999thPercentile()).isCloseTo(5, Offset.offset(0.01));
+    assertThat(snapshot.getStdDev()).isCloseTo(1.58, offset(0.01));
+    assertThat(snapshot.getMedian()).isCloseTo(3, offset(0.01));
+    assertThat(snapshot.get75thPercentile()).isCloseTo(4.5, offset(0.01));
+    assertThat(snapshot.get95thPercentile()).isCloseTo(5, offset(0.01));
+    assertThat(snapshot.get98thPercentile()).isCloseTo(5, offset(0.01));
+    assertThat(snapshot.get99thPercentile()).isCloseTo(5, offset(0.01));
+    assertThat(snapshot.get999thPercentile()).isCloseTo(5, offset(0.01));
 
     ByteArrayOutputStream baos = new ByteArrayOutputStream();
     snapshot.dump(baos);
diff --git a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java
index 0668c1e..01fb3d6 100644
--- a/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java
+++ b/metrics-legacy-adapter/src/test/java/com/codahale/metrics/UniformReservoirTest.java
@@ -1,8 +1,8 @@
 package com.codahale.metrics;
 
 import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.data.Offset.offset;
 
-import org.assertj.core.data.Offset;
 import org.junit.jupiter.api.Test;
 
 @SuppressWarnings("deprecation")
@@ -22,7 +22,7 @@ final class UniformReservoirTest {
     assertThat(snapshot.getValues()).contains(120, 130, 140, 190, 200);
     assertThat(snapshot.getMin()).isEqualTo(120);
     assertThat(snapshot.getMax()).isEqualTo(200);
-    assertThat(snapshot.getStdDev()).isCloseTo(36.47, Offset.offset(0.1));
+    assertThat(snapshot.getStdDev()).isCloseTo(36.47, offset(0.1));
     assertThat(snapshot.get75thPercentile()).isEqualTo(195);
     assertThat(snapshot.get95thPercentile()).isEqualTo(200);
     assertThat(snapshot.get98thPercentile()).isEqualTo(200);
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
index 80b40f1..5aa0027 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java
@@ -220,8 +220,8 @@ final class HealthCheckServletTest extends AbstractServletTest {
       throws Exception {
     assertThatThrownBy(
             () -> {
-              final ServletContext servletContext = mock(ServletContext.class);
-              final ServletConfig servletConfig = mock(ServletConfig.class);
+              final ServletContext servletContext = mock();
+              final ServletConfig servletConfig = mock();
               when(servletConfig.getServletContext()).thenReturn(servletContext);
               when(servletContext.getAttribute(HealthCheckServlet.HEALTH_CHECK_REGISTRY))
                   .thenReturn("IRELLEVANT_STRING");
diff --git a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
index 78086f5..39bdcf2 100644
--- a/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
+++ b/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/MetricsServletTest.java
@@ -2,7 +2,6 @@ package io.dropwizard.metrics5.servlets;
 
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.assertj.core.api.Assertions.assertThatThrownBy;
-import static org.mockito.ArgumentMatchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
@@ -241,10 +240,10 @@ final class MetricsServletTest extends AbstractServletTest {
       throws Exception {
     assertThatThrownBy(
             () -> {
-              final ServletContext servletContext = mock(ServletContext.class);
-              final ServletConfig servletConfig = mock(ServletConfig.class);
+              final ServletContext servletContext = mock();
+              final ServletConfig servletConfig = mock();
               when(servletConfig.getServletContext()).thenReturn(servletContext);
-              when(servletContext.getAttribute(eq(MetricsServlet.METRICS_REGISTRY)))
+              when(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY))
                   .thenReturn("IRELLEVANT_STRING");
 
               final MetricsServlet metricsServlet = new MetricsServlet(null);
[detached HEAD 01cbee7] minor: Apply patches
 30 files changed, 77 insertions(+), 79 deletions(-)
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Metrics5 Parent                                                    [pom]
[INFO] Metrics5 Documentation                                             [jar]
[INFO] Metrics5 BOM                                                       [pom]
[INFO] Annotations for Metrics5                                        [bundle]
[INFO] Metrics5 Core                                                   [bundle]
[INFO] Benchmarks for Metrics5                                            [jar]
[INFO] Metrics Integration for Caffeine 3.x                            [bundle]
[INFO] Metrics Integration for Collectd                                [bundle]
[INFO] Metrics Integration for Ehcache                                 [bundle]
[INFO] Graphite Integration for Metrics5                               [bundle]
[INFO] InfluxDB integration for Metrics5                               [bundle]
[INFO] JVM Integration for Metrics5                                    [bundle]
[INFO] Metrics5 Health Checks                                          [bundle]
[INFO] Metrics Integration for Apache HttpClient                       [bundle]
[INFO] Metrics Integration for Apache HttpClient 5.x                   [bundle]
[INFO] Metrics Integration for Apache HttpAsyncClient                  [bundle]
[INFO] Metrics Integration for Jakarta Servlets                        [bundle]
[INFO] Metrics Integration for Jakarta Servlets 6.x                    [bundle]
[INFO] Jackson Integration for Metrics5                                [bundle]
[INFO] Metrics Integration for Jetty 11.x and higher                   [bundle]
[INFO] Metrics5 Utility Jakarta Servlets                               [bundle]
[INFO] Metrics Integration for JCache                                  [bundle]
[INFO] Metrics Integration for JDBI3                                   [bundle]
[INFO] Metrics Integration for Jersey 2.x                              [bundle]
[INFO] Metrics Integration for Jersey 3.0.x                            [bundle]
[INFO] Metrics Integration for Jersey 3.1.x                            [bundle]
[INFO] Metrics Integration for Jetty 10.x and higher                   [bundle]
[INFO] Metrics Integration for Log4j 2.x                               [bundle]
[INFO] Metrics Integration for Logback 1.3.x                           [bundle]
[INFO] Metrics Integration for Logback 1.4.x                           [bundle]
[INFO] Metrics Integration for Logback 1.5.x                           [bundle]
[INFO] Metrics Integration for Servlets                                [bundle]
[INFO] Metrics5 Utility Servlets                                       [bundle]
[INFO] Metrics5 JCStress tests                                            [jar]
[INFO] Metrics Integration with JMX                                    [bundle]
[INFO] Metrics5 Adapter to Metrics 3/4 API                                [jar]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API                  [jar]
[INFO] Metrics Integration for Jetty 12.x and higher                   [bundle]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 [bundle]
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-parent >----------------
[INFO] Building Metrics5 Parent 5.0.0-rc22                               [1/39]
[INFO]   from pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-parent ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-parent ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-parent ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] --------------------< io.dropwizard.metrics5:docs >---------------------
[INFO] Building Metrics5 Documentation 5.0.0-rc22                        [2/39]
[INFO]   from docs/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ docs ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ docs ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/jacoco.exec
[INFO] 
[INFO] --- build-helper:3.6.0:parse-version (parse-version) @ docs ---
[INFO] 
[INFO] --- resources:3.3.1:resources (process-resources) @ docs ---
[INFO] Copying 72 resources from source to target/source
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ docs ---
[INFO] Copying 72 resources from source to target/classes
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ docs ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ docs ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ docs ---
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ docs ---
[WARNING] Source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/main/java' does not exist, ignoring.
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/java' does not exist, ignoring.
[info] Processed 0 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-bom >-----------------
[INFO] Building Metrics5 BOM 5.0.0-rc22                                  [3/39]
[INFO]   from metrics-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-bom ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-bom ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-bom/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-bom ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-annotation >--------------
[INFO] Building Annotations for Metrics5 5.0.0-rc22                      [4/39]
[INFO]   from metrics-annotation/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-resources-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-resources-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-resources-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-resources-plugin:3.3.1
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-install-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-install-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-install-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-install-plugin:3.1.3
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-annotation ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-annotation ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-annotation ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-annotation ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-annotation ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-annotation ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-annotation:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/metrics-annotation-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-annotation ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/java' does not exist, ignoring.
[info] Processed 9 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-core >-----------------
[INFO] Building Metrics5 Core 5.0.0-rc22                                 [5/39]
[INFO]   from metrics-core/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-core ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-core ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-core ---
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-core ---
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-core ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-core ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-core:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/metrics-core-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-core ---
[info] Processed 87 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-benchmarks >--------------
[INFO] Building Benchmarks for Metrics5 5.0.0-rc22                       [6/39]
[INFO]   from metrics-benchmarks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-benchmarks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-benchmarks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-benchmarks ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-benchmarks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-benchmarks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-benchmarks ---
[INFO] 
[INFO] --- shade:3.6.0:shade (default) @ metrics-benchmarks ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.37 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:5.0.4 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.6.1 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jmh-core-1.37.jar, jopt-simple-5.0.4.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-benchmarks-5.0.0-rc22.jar, metrics-core-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/benchmarks.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-benchmarks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/java' does not exist, ignoring.
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-caffeine3 >--------------
[INFO] Building Metrics Integration for Caffeine 3.x 5.0.0-rc22          [7/39]
[INFO]   from metrics-caffeine3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-caffeine3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-caffeine3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-caffeine3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-caffeine3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-caffeine3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-caffeine3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-caffeine3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/metrics-caffeine3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-caffeine3 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-collectd >---------------
[INFO] Building Metrics Integration for Collectd 5.0.0-rc22              [8/39]
[INFO]   from metrics-collectd/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-collectd ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-collectd ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-collectd ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-collectd ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-collectd ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-collectd ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-collectd:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/metrics-collectd-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-collectd ---
[info] Processed 12 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-ehcache >---------------
[INFO] Building Metrics Integration for Ehcache 5.0.0-rc22               [9/39]
[INFO]   from metrics-ehcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-ehcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-ehcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-ehcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-ehcache ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-ehcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-ehcache ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-ehcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-ehcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-ehcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/metrics-ehcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-ehcache ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-graphite >---------------
[INFO] Building Graphite Integration for Metrics5 5.0.0-rc22            [10/39]
[INFO]   from metrics-graphite/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-graphite ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-graphite ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-graphite ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-graphite ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-graphite ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-graphite ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-graphite ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-graphite ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-graphite:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/metrics-graphite-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-graphite ---
[info] Processed 13 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-influxdb >---------------
[INFO] Building InfluxDB integration for Metrics5 5.0.0-rc22            [11/39]
[INFO]   from metrics-influxdb/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-influxdb ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-influxdb ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-influxdb ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-influxdb ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-influxdb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-influxdb ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-influxdb:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/metrics-influxdb-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-influxdb ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jvm >-----------------
[INFO] Building JVM Integration for Metrics5 5.0.0-rc22                 [12/39]
[INFO]   from metrics-jvm/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jvm ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jvm ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jvm ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jvm ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jvm ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jvm ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jvm:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/metrics-jvm-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jvm ---
[info] Processed 23 files (0 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-healthchecks >-------------
[INFO] Building Metrics5 Health Checks 5.0.0-rc22                       [13/39]
[INFO]   from metrics-healthchecks/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-healthchecks ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-healthchecks ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-healthchecks ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-healthchecks:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/metrics-healthchecks-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-healthchecks ---
[info] Processed 14 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient >--------------
[INFO] Building Metrics Integration for Apache HttpClient 5.0.0-rc22    [14/39]
[INFO]   from metrics-httpclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/metrics-httpclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient5 >-------------
[INFO] Building Metrics Integration for Apache HttpClient 5.x 5.0.0-rc22 [15/39]
[INFO]   from metrics-httpclient5/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient5 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient5 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient5 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient5 ---
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[46,10] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[68,12] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient5 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient5 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient5:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/metrics-httpclient5-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient5 ---
[info] Processed 13 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-httpasyncclient >-----------
[INFO] Building Metrics Integration for Apache HttpAsyncClient 5.0.0-rc22 [16/39]
[INFO]   from metrics-httpasyncclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpasyncclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpasyncclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpasyncclient ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpasyncclient ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpasyncclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpasyncclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpasyncclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/metrics-httpasyncclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpasyncclient ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-jakarta-servlet >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 5.0.0-rc22     [17/39]
[INFO]   from metrics-jakarta-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/metrics-jakarta-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlet6 >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 6.x 5.0.0-rc22 [18/39]
[INFO]   from metrics-jakarta-servlet6/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet6 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet6 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet6 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet6 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet6 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet6 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet6:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/metrics-jakarta-servlet6-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet6 ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-json >-----------------
[INFO] Building Jackson Integration for Metrics5 5.0.0-rc22             [19/39]
[INFO]   from metrics-json/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-json ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-json ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-json ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-json ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-json ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-json ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-json:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/metrics-json-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-json ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty11 >---------------
[INFO] Building Metrics Integration for Jetty 11.x and higher 5.0.0-rc22 [20/39]
[INFO]   from metrics-jetty11/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty11 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty11 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty11 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty11 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty11 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty11 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty11:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/metrics-jetty11-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty11 ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlets >-----------
[INFO] Building Metrics5 Utility Jakarta Servlets 5.0.0-rc22            [21/39]
[INFO]   from metrics-jakarta-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlets ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlets ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/metrics-jakarta-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlets ---
[info] Processed 17 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jcache >----------------
[INFO] Building Metrics Integration for JCache 5.0.0-rc22               [22/39]
[INFO]   from metrics-jcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcache ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcache ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/metrics-jcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcache ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-jdbi3 >----------------
[INFO] Building Metrics Integration for JDBI3 5.0.0-rc22                [23/39]
[INFO]   from metrics-jdbi3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jdbi3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jdbi3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jdbi3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jdbi3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jdbi3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jdbi3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jdbi3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/metrics-jdbi3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jdbi3 ---
[info] Processed 15 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey2 >---------------
[INFO] Building Metrics Integration for Jersey 2.x 5.0.0-rc22           [24/39]
[INFO]   from metrics-jersey2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey2 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey2 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/metrics-jersey2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey2 ---
[info] Processed 24 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey3 >---------------
[INFO] Building Metrics Integration for Jersey 3.0.x 5.0.0-rc22         [25/39]
[INFO]   from metrics-jersey3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey3 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey3 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/metrics-jersey3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey3 ---
[info] Processed 24 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jersey31 >---------------
[INFO] Building Metrics Integration for Jersey 3.1.x 5.0.0-rc22         [26/39]
[INFO]   from metrics-jersey31/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey31 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey31 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey31 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey31 ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey31 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey31 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey31:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/metrics-jersey31-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey31 ---
[info] Processed 24 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty10 >---------------
[INFO] Building Metrics Integration for Jetty 10.x and higher 5.0.0-rc22 [27/39]
[INFO]   from metrics-jetty10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty10 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty10 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/metrics-jetty10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty10 ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-log4j2 >----------------
[INFO] Building Metrics Integration for Log4j 2.x 5.0.0-rc22            [28/39]
[INFO]   from metrics-log4j2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-log4j2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-log4j2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-log4j2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-log4j2 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-log4j2 ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-log4j2 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-log4j2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-log4j2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-log4j2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/metrics-log4j2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-log4j2 ---
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback13 >--------------
[INFO] Building Metrics Integration for Logback 1.3.x 5.0.0-rc22        [29/39]
[INFO]   from metrics-logback13/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback13 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback13 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback13 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback13 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback13 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback13 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback13:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/metrics-logback13-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback13 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback14 >--------------
[INFO] Building Metrics Integration for Logback 1.4.x 5.0.0-rc22        [30/39]
[INFO]   from metrics-logback14/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback14 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback14 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback14 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback14 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback14 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback14 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback14:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/metrics-logback14-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback14 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback15 >--------------
[INFO] Building Metrics Integration for Logback 1.5.x 5.0.0-rc22        [31/39]
[INFO]   from metrics-logback15/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback15 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback15 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback15 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback15 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback15 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback15 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback15:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/metrics-logback15-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback15 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-servlet >---------------
[INFO] Building Metrics Integration for Servlets 5.0.0-rc22             [32/39]
[INFO]   from metrics-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlet ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/metrics-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-servlets >---------------
[INFO] Building Metrics5 Utility Servlets 5.0.0-rc22                    [33/39]
[INFO]   from metrics-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlets ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlets ---
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/metrics-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlets ---
[info] Processed 16 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jcstress >---------------
[INFO] Building Metrics5 JCStress tests 5.0.0-rc22                      [34/39]
[INFO]   from metrics-jcstress/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcstress ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcstress ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcstress ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcstress ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcstress ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-jcstress ---
[INFO] 
[INFO] --- shade:3.6.0:shade (main) @ metrics-jcstress ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jcstress:jcstress-core:jar:0.16 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including net.java.dev.jna:jna:jar:5.8.0 in the shaded jar.
[INFO] Including net.java.dev.jna:jna-platform:jar:5.8.0 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] guava-33.3.1-jre.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] checker-qual-3.43.0.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] checker-qual-3.43.0.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jcstress-core-0.16.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar, jopt-simple-4.6.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-core-5.0.0-rc22.jar, metrics-jcstress-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] jna-5.8.0.jar, jna-platform-5.8.0.jar define 2 overlapping resources: 
[WARNING]   - META-INF/AL2.0
[WARNING]   - META-INF/LGPL2.1
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jcstress.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcstress ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/java' does not exist, ignoring.
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jmx >-----------------
[INFO] Building Metrics Integration with JMX 5.0.0-rc22                 [35/39]
[INFO]   from metrics-jmx/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jmx ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jmx ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jmx ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jmx ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jmx ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jmx ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jmx:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/metrics-jmx-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jmx ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-legacy-adapter >------------
[INFO] Building Metrics5 Adapter to Metrics 3/4 API 5.0.0-rc22          [36/39]
[INFO]   from metrics-legacy-adapter/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter ---
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter ---
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter ---
[info] Processed 60 files (0 reformatted).
[INFO] 
[INFO] -----< io.dropwizard.metrics5:metrics-legacy-adapter-healthchecks >-----
[INFO] Building Metrics5 Health Checks Adapter to Metrics 3/4 API 5.0.0-rc22 [37/39]
[INFO]   from metrics-legacy-adapter-healthchecks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter-healthchecks ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter-healthchecks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter-healthchecks ---
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter-healthchecks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/java' does not exist, ignoring.
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty12 >---------------
[INFO] Building Metrics Integration for Jetty 12.x and higher 5.0.0-rc22 [38/39]
[INFO]   from metrics-jetty12/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/metrics-jetty12-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12 ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-jetty12-ee10 >-------------
[INFO] Building Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 5.0.0-rc22 [39/39]
[INFO]   from metrics-jetty12-ee10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12-ee10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12-ee10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12-ee10 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12-ee10 ---
[INFO] Nothing to compile - all classes are up to date.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12-ee10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12-ee10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12-ee10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/metrics-jetty12-ee10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12-ee10 ---
[info] Processed 2 files (0 reformatted).
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Metrics5 Parent 5.0.0-rc22:
[INFO] 
[INFO] Metrics5 Parent .................................... SUCCESS [  0.360 s]
[INFO] Metrics5 Documentation ............................. SUCCESS [  1.633 s]
[INFO] Metrics5 BOM ....................................... SUCCESS [  0.010 s]
[INFO] Annotations for Metrics5 ........................... SUCCESS [  1.490 s]
[INFO] Metrics5 Core ...................................... SUCCESS [ 11.952 s]
[INFO] Benchmarks for Metrics5 ............................ SUCCESS [  1.680 s]
[INFO] Metrics Integration for Caffeine 3.x ............... SUCCESS [  1.138 s]
[INFO] Metrics Integration for Collectd ................... SUCCESS [  1.143 s]
[INFO] Metrics Integration for Ehcache .................... SUCCESS [  1.143 s]
[INFO] Graphite Integration for Metrics5 .................. SUCCESS [  4.578 s]
[INFO] InfluxDB integration for Metrics5 .................. SUCCESS [  1.134 s]
[INFO] JVM Integration for Metrics5 ....................... SUCCESS [  4.038 s]
[INFO] Metrics5 Health Checks ............................. SUCCESS [  1.171 s]
[INFO] Metrics Integration for Apache HttpClient .......... SUCCESS [  3.962 s]
[INFO] Metrics Integration for Apache HttpClient 5.x ...... SUCCESS [  5.074 s]
[INFO] Metrics Integration for Apache HttpAsyncClient ..... SUCCESS [  4.234 s]
[INFO] Metrics Integration for Jakarta Servlets ........... SUCCESS [  1.043 s]
[INFO] Metrics Integration for Jakarta Servlets 6.x ....... SUCCESS [  0.974 s]
[INFO] Jackson Integration for Metrics5 ................... SUCCESS [  4.146 s]
[INFO] Metrics Integration for Jetty 11.x and higher ...... SUCCESS [  1.212 s]
[INFO] Metrics5 Utility Jakarta Servlets .................. SUCCESS [  4.821 s]
[INFO] Metrics Integration for JCache ..................... SUCCESS [  1.155 s]
[INFO] Metrics Integration for JDBI3 ...................... SUCCESS [  1.069 s]
[INFO] Metrics Integration for Jersey 2.x ................. SUCCESS [  4.570 s]
[INFO] Metrics Integration for Jersey 3.0.x ............... SUCCESS [  4.438 s]
[INFO] Metrics Integration for Jersey 3.1.x ............... SUCCESS [  4.365 s]
[INFO] Metrics Integration for Jetty 10.x and higher ...... SUCCESS [  1.063 s]
[INFO] Metrics Integration for Log4j 2.x .................. SUCCESS [  1.018 s]
[INFO] Metrics Integration for Logback 1.3.x .............. SUCCESS [  1.002 s]
[INFO] Metrics Integration for Logback 1.4.x .............. SUCCESS [  1.031 s]
[INFO] Metrics Integration for Logback 1.5.x .............. SUCCESS [  0.990 s]
[INFO] Metrics Integration for Servlets ................... SUCCESS [  0.951 s]
[INFO] Metrics5 Utility Servlets .......................... SUCCESS [  4.621 s]
[INFO] Metrics5 JCStress tests ............................ SUCCESS [  1.508 s]
[INFO] Metrics Integration with JMX ....................... SUCCESS [  1.102 s]
[INFO] Metrics5 Adapter to Metrics 3/4 API ................ SUCCESS [  4.456 s]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API .. SUCCESS [  0.861 s]
[INFO] Metrics Integration for Jetty 12.x and higher ...... SUCCESS [  1.028 s]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 SUCCESS [  1.186 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:34 min
[INFO] Finished at: 2024-11-18T12:57:00+01:00
[INFO] ------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Metrics5 Parent                                                    [pom]
[INFO] Metrics5 Documentation                                             [jar]
[INFO] Metrics5 BOM                                                       [pom]
[INFO] Annotations for Metrics5                                        [bundle]
[INFO] Metrics5 Core                                                   [bundle]
[INFO] Benchmarks for Metrics5                                            [jar]
[INFO] Metrics Integration for Caffeine 3.x                            [bundle]
[INFO] Metrics Integration for Collectd                                [bundle]
[INFO] Metrics Integration for Ehcache                                 [bundle]
[INFO] Graphite Integration for Metrics5                               [bundle]
[INFO] InfluxDB integration for Metrics5                               [bundle]
[INFO] JVM Integration for Metrics5                                    [bundle]
[INFO] Metrics5 Health Checks                                          [bundle]
[INFO] Metrics Integration for Apache HttpClient                       [bundle]
[INFO] Metrics Integration for Apache HttpClient 5.x                   [bundle]
[INFO] Metrics Integration for Apache HttpAsyncClient                  [bundle]
[INFO] Metrics Integration for Jakarta Servlets                        [bundle]
[INFO] Metrics Integration for Jakarta Servlets 6.x                    [bundle]
[INFO] Jackson Integration for Metrics5                                [bundle]
[INFO] Metrics Integration for Jetty 11.x and higher                   [bundle]
[INFO] Metrics5 Utility Jakarta Servlets                               [bundle]
[INFO] Metrics Integration for JCache                                  [bundle]
[INFO] Metrics Integration for JDBI3                                   [bundle]
[INFO] Metrics Integration for Jersey 2.x                              [bundle]
[INFO] Metrics Integration for Jersey 3.0.x                            [bundle]
[INFO] Metrics Integration for Jersey 3.1.x                            [bundle]
[INFO] Metrics Integration for Jetty 10.x and higher                   [bundle]
[INFO] Metrics Integration for Log4j 2.x                               [bundle]
[INFO] Metrics Integration for Logback 1.3.x                           [bundle]
[INFO] Metrics Integration for Logback 1.4.x                           [bundle]
[INFO] Metrics Integration for Logback 1.5.x                           [bundle]
[INFO] Metrics Integration for Servlets                                [bundle]
[INFO] Metrics5 Utility Servlets                                       [bundle]
[INFO] Metrics5 JCStress tests                                            [jar]
[INFO] Metrics Integration with JMX                                    [bundle]
[INFO] Metrics5 Adapter to Metrics 3/4 API                                [jar]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API                  [jar]
[INFO] Metrics Integration for Jetty 12.x and higher                   [bundle]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 [bundle]
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-parent >----------------
[INFO] Building Metrics5 Parent 5.0.0-rc22                               [1/39]
[INFO]   from pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-parent ---
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-parent ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-parent ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-parent ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] --------------------< io.dropwizard.metrics5:docs >---------------------
[INFO] Building Metrics5 Documentation 5.0.0-rc22                        [2/39]
[INFO]   from docs/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ docs ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ docs ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ docs ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/jacoco.exec
[INFO] 
[INFO] --- build-helper:3.6.0:parse-version (parse-version) @ docs ---
[INFO] 
[INFO] --- resources:3.3.1:resources (process-resources) @ docs ---
[INFO] Copying 72 resources from source to target/source
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ docs ---
[INFO] Copying 72 resources from source to target/classes
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ docs ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ docs ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ docs ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/docs-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ docs ---
[WARNING] Source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/main/java' does not exist, ignoring.
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/java' does not exist, ignoring.
[info] Processed 0 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-bom >-----------------
[INFO] Building Metrics5 BOM 5.0.0-rc22                                  [3/39]
[INFO]   from metrics-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-bom ---
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-bom ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-bom ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-bom/target/jacoco.exec
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-bom ---
[INFO] Skipping format check: project uses 'pom' packaging
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-annotation >--------------
[INFO] Building Annotations for Metrics5 5.0.0-rc22                      [4/39]
[INFO]   from metrics-annotation/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-resources-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-resources-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-resources-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-resources-plugin:3.3.1
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-install-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-install-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-install-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-install-plugin:3.1.3
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-annotation ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-annotation ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-annotation ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-annotation ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 9 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-annotation ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-annotation ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-annotation ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-annotation:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/metrics-annotation-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-annotation ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/java' does not exist, ignoring.
[info] Processed 9 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-core >-----------------
[INFO] Building Metrics5 Core 5.0.0-rc22                                 [5/39]
[INFO]   from metrics-core/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-core ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-core ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-core ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-core ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 49 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[56,27] [this-escape] possible 'this' escape before subclass is fully initialized
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java:[390,35] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/InstrumentedExecutorService.java:[244,25] [try] auto-closeable resource durationContext is never referenced in body of corresponding try statement
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/InstrumentedExecutorService.java:[266,25] [try] auto-closeable resource context is never referenced in body of corresponding try statement
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-core ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 38 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-core ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-core ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-core:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/metrics-core-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-core ---
[info] Processed 87 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-benchmarks >--------------
[INFO] Building Benchmarks for Metrics5 5.0.0-rc22                       [6/39]
[INFO]   from metrics-benchmarks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-benchmarks ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-benchmarks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-benchmarks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-benchmarks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-benchmarks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-benchmarks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-benchmarks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (default) @ metrics-benchmarks ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.37 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:5.0.4 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.6.1 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jmh-core-1.37.jar, jopt-simple-5.0.4.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-benchmarks-5.0.0-rc22.jar, metrics-core-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/benchmarks.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-benchmarks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/java' does not exist, ignoring.
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-caffeine3 >--------------
[INFO] Building Metrics Integration for Caffeine 3.x 5.0.0-rc22          [7/39]
[INFO]   from metrics-caffeine3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-caffeine3 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-caffeine3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-caffeine3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-caffeine3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-caffeine3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-caffeine3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-caffeine3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-caffeine3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/metrics-caffeine3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-caffeine3 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-collectd >---------------
[INFO] Building Metrics Integration for Collectd 5.0.0-rc22              [8/39]
[INFO]   from metrics-collectd/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-collectd ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-collectd ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-collectd ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-collectd ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[306,57] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-collectd ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-collectd ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-collectd ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-collectd:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/metrics-collectd-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-collectd ---
[info] Processed 12 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-ehcache >---------------
[INFO] Building Metrics Integration for Ehcache 5.0.0-rc22               [9/39]
[INFO]   from metrics-ehcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-ehcache ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-ehcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-ehcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-ehcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-ehcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-ehcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-ehcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-ehcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-ehcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-ehcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/metrics-ehcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-ehcache ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-graphite >---------------
[INFO] Building Graphite Integration for Metrics5 5.0.0-rc22            [10/39]
[INFO]   from metrics-graphite/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-graphite ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-graphite ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-graphite ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-graphite ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-graphite ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[431,14] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[436,16] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[449,17] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-graphite ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-graphite ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-graphite ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-graphite ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-graphite:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/metrics-graphite-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-graphite ---
[info] Processed 13 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-influxdb >---------------
[INFO] Building InfluxDB integration for Metrics5 5.0.0-rc22            [11/39]
[INFO]   from metrics-influxdb/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-influxdb ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-influxdb ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-influxdb ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-influxdb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[282,14] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[287,16] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-influxdb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-influxdb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-influxdb ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-influxdb:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/metrics-influxdb-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-influxdb ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jvm >-----------------
[INFO] Building JVM Integration for Metrics5 5.0.0-rc22                 [12/39]
[INFO]   from metrics-jvm/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jvm ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jvm ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jvm ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jvm ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 12 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jvm ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[56,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[65,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[74,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[83,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[92,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[101,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jvm ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jvm ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jvm:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/metrics-jvm-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jvm ---
[info] Processed 23 files (0 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-healthchecks >-------------
[INFO] Building Metrics5 Health Checks 5.0.0-rc22                       [13/39]
[INFO]   from metrics-healthchecks/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-healthchecks ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[189,46] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[203,46] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-healthchecks ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-healthchecks:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/metrics-healthchecks-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-healthchecks ---
[info] Processed 14 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient >--------------
[INFO] Building Metrics Integration for Apache HttpClient 5.0.0-rc22    [14/39]
[INFO]   from metrics-httpclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-httpclient ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManager.java:[114,8] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java:[124,22] [deprecation] rewriteURI(URI,HttpHost,boolean) in URIUtils has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/metrics-httpclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient5 >-------------
[INFO] Building Metrics Integration for Apache HttpClient 5.x 5.0.0-rc22 [15/39]
[INFO]   from metrics-httpclient5/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-httpclient5 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient5 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient5 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient5 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[14,40] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[15,40] [deprecation] PlainConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[16,37] [deprecation] SSLConnectionSocketFactory in org.apache.hc.client5.http.ssl has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManager.java:[29,62] [deprecation] getDefault() in DefaultClientTlsStrategy has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[30,28] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[31,28] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[32,37] [deprecation] PlainConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[33,38] [deprecation] SSLConnectionSocketFactory in org.apache.hc.client5.http.ssl has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[96,21] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[116,50] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[160,12] [deprecation] DefaultHttpClientConnectionOperator(Lookup<ConnectionSocketFactory>,SchemePortResolver,DnsResolver) in DefaultHttpClientConnectionOperator has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpRequestExecutor.java:[49,4] [deprecation] HttpRequestExecutor(Timeout,ConnectionReuseStrategy,Http1StreamListener) in HttpRequestExecutor has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient5 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[46,10] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[68,12] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient5 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient5 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient5:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/metrics-httpclient5-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpclient5 ---
[info] Processed 13 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-httpasyncclient >-----------
[INFO] Building Metrics Integration for Apache HttpAsyncClient 5.0.0-rc22 [16/39]
[INFO]   from metrics-httpasyncclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-httpasyncclient ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpasyncclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpasyncclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpasyncclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedNClientConnManager.java:[40,8] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpasyncclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpasyncclient ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpasyncclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpasyncclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/metrics-httpasyncclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-httpasyncclient ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-jakarta-servlet >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 5.0.0-rc22     [17/39]
[INFO]   from metrics-jakarta-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jakarta-servlet ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/metrics-jakarta-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlet6 >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 6.x 5.0.0-rc22 [18/39]
[INFO]   from metrics-jakarta-servlet6/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jakarta-servlet6 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet6 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet6 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet6 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet6 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet6 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet6 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet6:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/metrics-jakarta-servlet6-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlet6 ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-json >-----------------
[INFO] Building Jackson Integration for Metrics5 5.0.0-rc22             [19/39]
[INFO]   from metrics-json/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-json ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-json ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-json ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-json ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/java/io/dropwizard/metrics5/json/MetricsModule.java:[189,31] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-json ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-json ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-json ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-json:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/metrics-json-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-json ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty11 >---------------
[INFO] Building Metrics Integration for Jetty 11.x and higher 5.0.0-rc22 [20/39]
[INFO]   from metrics-jetty11/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty11 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty11 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty11 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty11 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty11 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty11 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty11 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty11:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/metrics-jetty11-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty11 ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlets >-----------
[INFO] Building Metrics5 Utility Jakarta Servlets 5.0.0-rc22            [21/39]
[INFO]   from metrics-jakarta-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jakarta-servlets ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/CpuProfileServlet.java:[23,21] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[31,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/metrics-jakarta-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jakarta-servlets ---
[info] Processed 17 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jcache >----------------
[INFO] Building Metrics Integration for JCache 5.0.0-rc22               [22/39]
[INFO]   from metrics-jcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jcache ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcache ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/metrics-jcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcache ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-jdbi3 >----------------
[INFO] Building Metrics Integration for JDBI3 5.0.0-rc22                [23/39]
[INFO]   from metrics-jdbi3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jdbi3 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jdbi3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jdbi3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jdbi3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 9 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/InstrumentedTimingCollector.java:[10,33] [deprecation] TimingCollector in org.jdbi.v3.core.statement has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jdbi3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[9,35] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[18,10] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[24,20] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jdbi3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jdbi3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jdbi3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/metrics-jdbi3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jdbi3 ---
[info] Processed 15 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey2 >---------------
[INFO] Building Metrics Integration for Jersey 2.x 5.0.0-rc22           [24/39]
[INFO]   from metrics-jersey2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jersey2 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/metrics-jersey2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey2 ---
[info] Processed 24 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey3 >---------------
[INFO] Building Metrics Integration for Jersey 3.0.x 5.0.0-rc22         [25/39]
[INFO]   from metrics-jersey3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jersey3 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey3 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/metrics-jersey3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey3 ---
[info] Processed 24 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jersey31 >---------------
[INFO] Building Metrics Integration for Jersey 3.1.x 5.0.0-rc22         [26/39]
[INFO]   from metrics-jersey31/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jersey31 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey31 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey31 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey31 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey31 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey31 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey31 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey31:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/metrics-jersey31-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jersey31 ---
[info] Processed 24 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty10 >---------------
[INFO] Building Metrics Integration for Jetty 10.x and higher 5.0.0-rc22 [27/39]
[INFO]   from metrics-jetty10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty10 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/metrics-jetty10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty10 ---
[info] Processed 8 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-log4j2 >----------------
[INFO] Building Metrics Integration for Log4j 2.x 5.0.0-rc22            [28/39]
[INFO]   from metrics-log4j2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-log4j2 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-log4j2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-log4j2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-log4j2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-log4j2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/java/io/dropwizard/metrics5/log4j2/InstrumentedAppender.java:[85,4] [deprecation] AbstractAppender(String,Filter,Layout<? extends Serializable>,boolean) in AbstractAppender has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/java/io/dropwizard/metrics5/log4j2/InstrumentedAppender.java:[96,4] [deprecation] AbstractAppender(String,Filter,Layout<? extends Serializable>,boolean) in AbstractAppender has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-log4j2 ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-log4j2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-log4j2 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-log4j2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-log4j2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/metrics-log4j2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-log4j2 ---
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback13 >--------------
[INFO] Building Metrics Integration for Logback 1.3.x 5.0.0-rc22        [29/39]
[INFO]   from metrics-logback13/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-logback13 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback13 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback13 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback13 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/java/io/dropwizard/metrics/logback13/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback13 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback13 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback13 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback13:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/metrics-logback13-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback13 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback14 >--------------
[INFO] Building Metrics Integration for Logback 1.4.x 5.0.0-rc22        [30/39]
[INFO]   from metrics-logback14/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-logback14 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback14 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback14 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback14 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/java/io/dropwizard/metrics/logback14/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback14 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback14 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback14 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback14:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/metrics-logback14-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback14 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback15 >--------------
[INFO] Building Metrics Integration for Logback 1.5.x 5.0.0-rc22        [31/39]
[INFO]   from metrics-logback15/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-logback15 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback15 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback15 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback15 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/java/io/dropwizard/metrics5/logback15/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback15 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback15 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback15 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback15:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/metrics-logback15-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-logback15 ---
[info] Processed 2 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-servlet >---------------
[INFO] Building Metrics Integration for Servlets 5.0.0-rc22             [32/39]
[INFO]   from metrics-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-servlet ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlet ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/metrics-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlet ---
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-servlets >---------------
[INFO] Building Metrics5 Utility Servlets 5.0.0-rc22                    [33/39]
[INFO]   from metrics-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-servlets ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/CpuProfileServlet.java:[23,21] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 10 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[31,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlets ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/metrics-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-servlets ---
[info] Processed 16 files (0 reformatted).
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jcstress >---------------
[INFO] Building Metrics5 JCStress tests 5.0.0-rc22                      [34/39]
[INFO]   from metrics-jcstress/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jcstress ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcstress ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcstress ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcstress ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcstress ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcstress ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-jcstress ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (main) @ metrics-jcstress ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jcstress:jcstress-core:jar:0.16 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including net.java.dev.jna:jna:jar:5.8.0 in the shaded jar.
[INFO] Including net.java.dev.jna:jna-platform:jar:5.8.0 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] guava-33.3.1-jre.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] checker-qual-3.43.0.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] checker-qual-3.43.0.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jcstress-core-0.16.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar, jopt-simple-4.6.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-core-5.0.0-rc22.jar, metrics-jcstress-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] jna-5.8.0.jar, jna-platform-5.8.0.jar define 2 overlapping resources: 
[WARNING]   - META-INF/AL2.0
[WARNING]   - META-INF/LGPL2.1
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jcstress.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jcstress ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/java' does not exist, ignoring.
[info] Processed 3 files (0 reformatted).
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jmx >-----------------
[INFO] Building Metrics Integration with JMX 5.0.0-rc22                 [35/39]
[INFO]   from metrics-jmx/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jmx ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jmx ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jmx ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jmx ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jmx ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jmx ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jmx ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jmx:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/metrics-jmx-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jmx ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-legacy-adapter >------------
[INFO] Building Metrics5 Adapter to Metrics 3/4 API 5.0.0-rc22          [36/39]
[INFO]   from metrics-legacy-adapter/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-legacy-adapter ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 36 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,49] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,9] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[108,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[112,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 24 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[50,4] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[367,22] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/metrics-legacy-adapter-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter ---
[info] Processed 60 files (0 reformatted).
[INFO] 
[INFO] -----< io.dropwizard.metrics5:metrics-legacy-adapter-healthchecks >-----
[INFO] Building Metrics5 Health Checks Adapter to Metrics 3/4 API 5.0.0-rc22 [37/39]
[INFO]   from metrics-legacy-adapter-healthchecks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-legacy-adapter-healthchecks ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter-healthchecks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter-healthchecks ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter-healthchecks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/metrics-legacy-adapter-healthchecks-5.0.0-rc22.jar
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-legacy-adapter-healthchecks ---
[WARNING] Test source directory '/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/java' does not exist, ignoring.
[info] Processed 4 files (0 reformatted).
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty12 >---------------
[INFO] Building Metrics Integration for Jetty 12.x and higher 5.0.0-rc22 [38/39]
[INFO]   from metrics-jetty12/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty12 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/metrics-jetty12-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12 ---
[info] Processed 5 files (0 reformatted).
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-jetty12-ee10 >-------------
[INFO] Building Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 5.0.0-rc22 [39/39]
[INFO]   from metrics-jetty12-ee10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty12-ee10 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12-ee10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12-ee10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12-ee10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12-ee10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12-ee10 ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12-ee10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12-ee10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/metrics-jetty12-ee10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --- fmt:2.21.1:format (default-cli) @ metrics-jetty12-ee10 ---
[info] Processed 2 files (0 reformatted).
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Metrics5 Parent 5.0.0-rc22:
[INFO] 
[INFO] Metrics5 Parent .................................... SUCCESS [  0.418 s]
[INFO] Metrics5 Documentation ............................. SUCCESS [  1.391 s]
[INFO] Metrics5 BOM ....................................... SUCCESS [  0.011 s]
[INFO] Annotations for Metrics5 ........................... SUCCESS [  4.821 s]
[INFO] Metrics5 Core ...................................... SUCCESS [ 28.095 s]
[INFO] Benchmarks for Metrics5 ............................ SUCCESS [  6.099 s]
[INFO] Metrics Integration for Caffeine 3.x ............... SUCCESS [  8.141 s]
[INFO] Metrics Integration for Collectd ................... SUCCESS [ 11.672 s]
[INFO] Metrics Integration for Ehcache .................... SUCCESS [  8.411 s]
[INFO] Graphite Integration for Metrics5 .................. SUCCESS [ 13.436 s]
[INFO] InfluxDB integration for Metrics5 .................. SUCCESS [ 11.847 s]
[INFO] JVM Integration for Metrics5 ....................... SUCCESS [ 11.927 s]
[INFO] Metrics5 Health Checks ............................. SUCCESS [ 12.779 s]
[INFO] Metrics Integration for Apache HttpClient .......... SUCCESS [  8.383 s]
[INFO] Metrics Integration for Apache HttpClient 5.x ...... SUCCESS [  9.257 s]
[INFO] Metrics Integration for Apache HttpAsyncClient ..... SUCCESS [  7.406 s]
[INFO] Metrics Integration for Jakarta Servlets ........... SUCCESS [  6.872 s]
[INFO] Metrics Integration for Jakarta Servlets 6.x ....... SUCCESS [  6.500 s]
[INFO] Jackson Integration for Metrics5 ................... SUCCESS [  7.977 s]
[INFO] Metrics Integration for Jetty 11.x and higher ...... SUCCESS [  9.592 s]
[INFO] Metrics5 Utility Jakarta Servlets .................. SUCCESS [ 10.249 s]
[INFO] Metrics Integration for JCache ..................... SUCCESS [  6.698 s]
[INFO] Metrics Integration for JDBI3 ...................... SUCCESS [  8.201 s]
[INFO] Metrics Integration for Jersey 2.x ................. SUCCESS [ 10.156 s]
[INFO] Metrics Integration for Jersey 3.0.x ............... SUCCESS [  9.897 s]
[INFO] Metrics Integration for Jersey 3.1.x ............... SUCCESS [ 10.378 s]
[INFO] Metrics Integration for Jetty 10.x and higher ...... SUCCESS [ 10.002 s]
[INFO] Metrics Integration for Log4j 2.x .................. SUCCESS [  6.949 s]
[INFO] Metrics Integration for Logback 1.3.x .............. SUCCESS [  6.816 s]
[INFO] Metrics Integration for Logback 1.4.x .............. SUCCESS [  6.705 s]
[INFO] Metrics Integration for Logback 1.5.x .............. SUCCESS [  6.484 s]
[INFO] Metrics Integration for Servlets ................... SUCCESS [  6.860 s]
[INFO] Metrics5 Utility Servlets .......................... SUCCESS [  9.801 s]
[INFO] Metrics5 JCStress tests ............................ SUCCESS [  4.324 s]
[INFO] Metrics Integration with JMX ....................... SUCCESS [  8.759 s]
[INFO] Metrics5 Adapter to Metrics 3/4 API ................ SUCCESS [ 13.046 s]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API .. SUCCESS [  4.518 s]
[INFO] Metrics Integration for Jetty 12.x and higher ...... SUCCESS [  8.373 s]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 SUCCESS [  7.795 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  05:31 min
[INFO] Finished at: 2024-11-18T13:02:34+01:00
[INFO] ------------------------------------------------------------------------
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Metrics5 Parent                                                    [pom]
[INFO] Metrics5 Documentation                                             [jar]
[INFO] Metrics5 BOM                                                       [pom]
[INFO] Annotations for Metrics5                                        [bundle]
[INFO] Metrics5 Core                                                   [bundle]
[INFO] Benchmarks for Metrics5                                            [jar]
[INFO] Metrics Integration for Caffeine 3.x                            [bundle]
[INFO] Metrics Integration for Collectd                                [bundle]
[INFO] Metrics Integration for Ehcache                                 [bundle]
[INFO] Graphite Integration for Metrics5                               [bundle]
[INFO] InfluxDB integration for Metrics5                               [bundle]
[INFO] JVM Integration for Metrics5                                    [bundle]
[INFO] Metrics5 Health Checks                                          [bundle]
[INFO] Metrics Integration for Apache HttpClient                       [bundle]
[INFO] Metrics Integration for Apache HttpClient 5.x                   [bundle]
[INFO] Metrics Integration for Apache HttpAsyncClient                  [bundle]
[INFO] Metrics Integration for Jakarta Servlets                        [bundle]
[INFO] Metrics Integration for Jakarta Servlets 6.x                    [bundle]
[INFO] Jackson Integration for Metrics5                                [bundle]
[INFO] Metrics Integration for Jetty 11.x and higher                   [bundle]
[INFO] Metrics5 Utility Jakarta Servlets                               [bundle]
[INFO] Metrics Integration for JCache                                  [bundle]
[INFO] Metrics Integration for JDBI3                                   [bundle]
[INFO] Metrics Integration for Jersey 2.x                              [bundle]
[INFO] Metrics Integration for Jersey 3.0.x                            [bundle]
[INFO] Metrics Integration for Jersey 3.1.x                            [bundle]
[INFO] Metrics Integration for Jetty 10.x and higher                   [bundle]
[INFO] Metrics Integration for Log4j 2.x                               [bundle]
[INFO] Metrics Integration for Logback 1.3.x                           [bundle]
[INFO] Metrics Integration for Logback 1.4.x                           [bundle]
[INFO] Metrics Integration for Logback 1.5.x                           [bundle]
[INFO] Metrics Integration for Servlets                                [bundle]
[INFO] Metrics5 Utility Servlets                                       [bundle]
[INFO] Metrics5 JCStress tests                                            [jar]
[INFO] Metrics Integration with JMX                                    [bundle]
[INFO] Metrics5 Adapter to Metrics 3/4 API                                [jar]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API                  [jar]
[INFO] Metrics Integration for Jetty 12.x and higher                   [bundle]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 [bundle]
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-parent >----------------
[INFO] Building Metrics5 Parent 5.0.0-rc22                               [1/39]
[INFO]   from pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-parent ---
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-parent ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-parent ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/target/jacoco.exec
[INFO] 
[INFO] --------------------< io.dropwizard.metrics5:docs >---------------------
[INFO] Building Metrics5 Documentation 5.0.0-rc22                        [2/39]
[INFO]   from docs/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ docs ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ docs ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ docs ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/jacoco.exec
[INFO] 
[INFO] --- build-helper:3.6.0:parse-version (parse-version) @ docs ---
[INFO] 
[INFO] --- resources:3.3.1:resources (process-resources) @ docs ---
[INFO] Copying 72 resources from source to target/source
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ docs ---
[INFO] Copying 72 resources from source to target/classes
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ docs ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ docs ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ docs ---
[INFO] No tests to run.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ docs ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/docs/target/docs-5.0.0-rc22.jar
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-bom >-----------------
[INFO] Building Metrics5 BOM 5.0.0-rc22                                  [3/39]
[INFO]   from metrics-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-bom ---
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-bom ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-bom ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-bom/target/jacoco.exec
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-annotation >--------------
[INFO] Building Annotations for Metrics5 5.0.0-rc22                      [4/39]
[INFO]   from metrics-annotation/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-resources-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-resources-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-resources-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-resources-plugin:3.3.1
[WARNING] Ignoring incompatible plugin version 4.0.0-beta-1: The plugin org.apache.maven.plugins:maven-install-plugin:4.0.0-beta-1 requires Maven version 4.0.0-beta-3
[INFO] Latest version of plugin org.apache.maven.plugins:maven-install-plugin failed compatibility check
[INFO] Looking for compatible RELEASE version of plugin org.apache.maven.plugins:maven-install-plugin
[INFO] Selected plugin org.apache.maven.plugins:maven-install-plugin:3.1.3
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-annotation ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-annotation ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-annotation ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-annotation ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 9 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-annotation ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-annotation ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-annotation ---
[INFO] No tests to run.
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-annotation ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-annotation:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/metrics-annotation-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-annotation/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-core >-----------------
[INFO] Building Metrics5 Core 5.0.0-rc22                                 [5/39]
[INFO]   from metrics-core/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-core ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-core ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-core ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-core ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 49 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/MetricRegistry.java:[56,27] [this-escape] possible 'this' escape before subclass is fully initialized
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/CsvReporter.java:[390,35] [FormatStringConcatenation] Defer string concatenation to the invoked method
    (see https://error-prone.picnic.tech/bugpatterns/FormatStringConcatenation)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/InstrumentedExecutorService.java:[244,25] [try] auto-closeable resource durationContext is never referenced in body of corresponding try statement
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/main/java/io/dropwizard/metrics5/InstrumentedExecutorService.java:[266,25] [try] auto-closeable resource context is never referenced in body of corresponding try statement
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-core ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-core ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 38 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-core ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.ExponentialMovingAveragesTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.311 s -- in io.dropwizard.metrics5.ExponentialMovingAveragesTest
[INFO] Running io.dropwizard.metrics5.SlidingWindowReservoirTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.219 s -- in io.dropwizard.metrics5.SlidingWindowReservoirTest
[INFO] Running io.dropwizard.metrics5.InstrumentedScheduledExecutorServiceTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.762 s -- in io.dropwizard.metrics5.InstrumentedScheduledExecutorServiceTest
[INFO] Running io.dropwizard.metrics5.ExponentiallyDecayingReservoirTest
[INFO] Tests run: 24, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.212 s -- in io.dropwizard.metrics5.ExponentiallyDecayingReservoirTest
[INFO] Running io.dropwizard.metrics5.HistogramTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.113 s -- in io.dropwizard.metrics5.HistogramTest
[INFO] Running io.dropwizard.metrics5.ScheduledReporterTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.402 s -- in io.dropwizard.metrics5.ScheduledReporterTest
[INFO] Running io.dropwizard.metrics5.ConsoleReporterTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.200 s -- in io.dropwizard.metrics5.ConsoleReporterTest
[INFO] Running io.dropwizard.metrics5.RatioGaugeTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s -- in io.dropwizard.metrics5.RatioGaugeTest
[INFO] Running io.dropwizard.metrics5.SimpleSettableGaugeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s -- in io.dropwizard.metrics5.SimpleSettableGaugeTest
[INFO] Running io.dropwizard.metrics5.UniformSnapshotTest
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 s -- in io.dropwizard.metrics5.UniformSnapshotTest
[INFO] Running io.dropwizard.metrics5.ChunkedAssociativeLongArrayTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in io.dropwizard.metrics5.ChunkedAssociativeLongArrayTest
[INFO] Running io.dropwizard.metrics5.MetricNameTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s -- in io.dropwizard.metrics5.MetricNameTest
[INFO] Running io.dropwizard.metrics5.MetricFilterTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s -- in io.dropwizard.metrics5.MetricFilterTest
[INFO] Running io.dropwizard.metrics5.ClockTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s -- in io.dropwizard.metrics5.ClockTest
[INFO] Running io.dropwizard.metrics5.SlidingTimeWindowReservoirTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.363 s -- in io.dropwizard.metrics5.SlidingTimeWindowReservoirTest
[INFO] Running io.dropwizard.metrics5.DefaultSettableGaugeTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s -- in io.dropwizard.metrics5.DefaultSettableGaugeTest
[INFO] Running io.dropwizard.metrics5.TimerTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s -- in io.dropwizard.metrics5.TimerTest
[INFO] Running io.dropwizard.metrics5.Slf4jReporterTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.189 s -- in io.dropwizard.metrics5.Slf4jReporterTest
[INFO] Running io.dropwizard.metrics5.SharedMetricRegistriesTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 s -- in io.dropwizard.metrics5.SharedMetricRegistriesTest
[INFO] Running io.dropwizard.metrics5.MetricRegistryListenerTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s -- in io.dropwizard.metrics5.MetricRegistryListenerTest
[INFO] Running io.dropwizard.metrics5.UniformReservoirTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s -- in io.dropwizard.metrics5.UniformReservoirTest
[INFO] Running io.dropwizard.metrics5.InstrumentedThreadFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s -- in io.dropwizard.metrics5.InstrumentedThreadFactoryTest
[INFO] Running io.dropwizard.metrics5.WeightedSnapshotTest
[INFO] Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.230 s -- in io.dropwizard.metrics5.WeightedSnapshotTest
[INFO] Running io.dropwizard.metrics5.CounterTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s -- in io.dropwizard.metrics5.CounterTest
[INFO] Running io.dropwizard.metrics5.SlidingTimeWindowMovingAveragesTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s -- in io.dropwizard.metrics5.SlidingTimeWindowMovingAveragesTest
[INFO] Running io.dropwizard.metrics5.CsvReporterTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.083 s -- in io.dropwizard.metrics5.CsvReporterTest
[INFO] Running io.dropwizard.metrics5.MeterTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s -- in io.dropwizard.metrics5.MeterTest
[INFO] Running io.dropwizard.metrics5.NoopMetricRegistryTest
[INFO] Tests run: 40, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.130 s -- in io.dropwizard.metrics5.NoopMetricRegistryTest
[INFO] Running io.dropwizard.metrics5.EWMATest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s -- in io.dropwizard.metrics5.EWMATest
[INFO] Running io.dropwizard.metrics5.DerivativeGaugeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s -- in io.dropwizard.metrics5.DerivativeGaugeTest
[INFO] Running io.dropwizard.metrics5.MeterApproximationTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.107 s -- in io.dropwizard.metrics5.MeterApproximationTest
[INFO] Running io.dropwizard.metrics5.InstrumentedExecutorServiceTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s -- in io.dropwizard.metrics5.InstrumentedExecutorServiceTest
[INFO] Running io.dropwizard.metrics5.FixedNameCsvFileProviderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s -- in io.dropwizard.metrics5.FixedNameCsvFileProviderTest
[INFO] Running io.dropwizard.metrics5.SlidingTimeWindowArrayReservoirTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.209 s -- in io.dropwizard.metrics5.SlidingTimeWindowArrayReservoirTest
[INFO] Running io.dropwizard.metrics5.ClassMetadataTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.021 s -- in io.dropwizard.metrics5.ClassMetadataTest
[INFO] Running io.dropwizard.metrics5.CachedGaugeTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.16 s -- in io.dropwizard.metrics5.CachedGaugeTest
[INFO] Running io.dropwizard.metrics5.MetricRegistryTest
[INFO] Tests run: 53, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 s -- in io.dropwizard.metrics5.MetricRegistryTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 338, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-core ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-core:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/metrics-core-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-core/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-benchmarks >--------------
[INFO] Building Benchmarks for Metrics5 5.0.0-rc22                       [6/39]
[INFO]   from metrics-benchmarks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-benchmarks ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-benchmarks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-benchmarks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-benchmarks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-benchmarks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-benchmarks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-benchmarks ---
[INFO] No tests to run.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-benchmarks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (default) @ metrics-benchmarks ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jmh:jmh-core:jar:1.37 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:5.0.4 in the shaded jar.
[INFO] Including org.apache.commons:commons-math3:jar:3.6.1 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jmh-core-1.37.jar, jopt-simple-5.0.4.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-benchmarks-5.0.0-rc22.jar, metrics-core-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] checker-qual-3.43.0.jar, commons-math3-3.6.1.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/benchmarks.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-benchmarks/target/metrics-benchmarks-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-caffeine3 >--------------
[INFO] Building Metrics Integration for Caffeine 3.x 5.0.0-rc22          [7/39]
[INFO]   from metrics-caffeine3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-caffeine3 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-caffeine3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-caffeine3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-caffeine3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-caffeine3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-caffeine3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-caffeine3 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.caffeine3.MetricsStatsCounterTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.281 s -- in io.dropwizard.metrics5.caffeine3.MetricsStatsCounterTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-caffeine3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-caffeine3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/metrics-caffeine3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-caffeine3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-collectd >---------------
[INFO] Building Metrics Integration for Collectd 5.0.0-rc22              [8/39]
[INFO]   from metrics-collectd/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-collectd ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-collectd ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-collectd ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-collectd ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/main/java/io/dropwizard/metrics5/collectd/CollectdReporter.java:[306,57] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-collectd ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-collectd ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-collectd ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.collectd.CollectdReporterSecurityTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.224 s -- in io.dropwizard.metrics5.collectd.CollectdReporterSecurityTest
[INFO] Running io.dropwizard.metrics5.collectd.PacketWriterTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.102 s -- in io.dropwizard.metrics5.collectd.PacketWriterTest
[INFO] Running io.dropwizard.metrics5.collectd.CollectdReporterTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.770 s -- in io.dropwizard.metrics5.collectd.CollectdReporterTest
[INFO] Running io.dropwizard.metrics5.collectd.SanitizeTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s -- in io.dropwizard.metrics5.collectd.SanitizeTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 26, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-collectd ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-collectd:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/metrics-collectd-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-collectd/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-ehcache >---------------
[INFO] Building Metrics Integration for Ehcache 5.0.0-rc22               [9/39]
[INFO]   from metrics-ehcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-ehcache ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-ehcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-ehcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-ehcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-ehcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-ehcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-ehcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-ehcache ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.ehcache.InstrumentedCacheDecoratorFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.325 s -- in io.dropwizard.metrics5.ehcache.InstrumentedCacheDecoratorFactoryTest
[INFO] Running io.dropwizard.metrics5.ehcache.InstrumentedEhcacheTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s -- in io.dropwizard.metrics5.ehcache.InstrumentedEhcacheTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-ehcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-ehcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/metrics-ehcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-ehcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-graphite >---------------
[INFO] Building Graphite Integration for Metrics5 5.0.0-rc22            [10/39]
[INFO]   from metrics-graphite/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-graphite ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-graphite ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-graphite ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-graphite ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-graphite ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 7 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[431,14] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[436,16] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/src/main/java/io/dropwizard/metrics5/graphite/GraphiteReporter.java:[449,17] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-graphite ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-graphite ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-graphite ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.graphite.GraphiteRabbitMQTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.020 s -- in io.dropwizard.metrics5.graphite.GraphiteRabbitMQTest
[INFO] Running io.dropwizard.metrics5.graphite.GraphiteTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.297 s -- in io.dropwizard.metrics5.graphite.GraphiteTest
[INFO] Running io.dropwizard.metrics5.graphite.GraphiteUDPTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.108 s -- in io.dropwizard.metrics5.graphite.GraphiteUDPTest
[INFO] Running io.dropwizard.metrics5.graphite.PickledGraphiteTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.740 s -- in io.dropwizard.metrics5.graphite.PickledGraphiteTest
[INFO] Running io.dropwizard.metrics5.graphite.GraphiteSanitizeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.351 s -- in io.dropwizard.metrics5.graphite.GraphiteSanitizeTest
[INFO] Running io.dropwizard.metrics5.graphite.GraphiteReporterTest
[INFO] Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.429 s -- in io.dropwizard.metrics5.graphite.GraphiteReporterTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 45, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-graphite ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-graphite:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/metrics-graphite-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-graphite/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-influxdb >---------------
[INFO] Building InfluxDB integration for Metrics5 5.0.0-rc22            [11/39]
[INFO]   from metrics-influxdb/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-influxdb ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-influxdb ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-influxdb ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-influxdb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[282,14] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/main/java/io/dropwizard/metrics5/influxdb/InfluxDbReporter.java:[287,16] [Slf4jLogStatement] Log statement contains 0 placeholders, but specifies 1 matching argument(s)
    (see https://error-prone.picnic.tech/bugpatterns/Slf4jLogStatement)
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-influxdb ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-influxdb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-influxdb ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.influxdb.InfluxDbReporterTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.312 s -- in io.dropwizard.metrics5.influxdb.InfluxDbReporterTest
[INFO] Running io.dropwizard.metrics5.influxdb.InfluxDbLineBuilderAssumptionsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s -- in io.dropwizard.metrics5.influxdb.InfluxDbLineBuilderAssumptionsTest
[INFO] Running io.dropwizard.metrics5.influxdb.InfluxDbUdpTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.144 s -- in io.dropwizard.metrics5.influxdb.InfluxDbUdpTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 20, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-influxdb ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-influxdb:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/metrics-influxdb-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-influxdb/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jvm >-----------------
[INFO] Building JVM Integration for Metrics5 5.0.0-rc22                 [12/39]
[INFO]   from metrics-jvm/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jvm ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jvm ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jvm ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jvm ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 12 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jvm ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jvm ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[56,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[65,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[74,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[83,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[92,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/src/test/java/io/dropwizard/metrics5/jvm/BufferPoolMetricSetTest.java:[101,74] [unchecked] unchecked cast
  required: Gauge<Integer>
  found:    Metric
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jvm ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jvm.ThreadStatesGaugeSetTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.806 s -- in io.dropwizard.metrics5.jvm.ThreadStatesGaugeSetTest
[INFO] Running io.dropwizard.metrics5.jvm.MemoryUsageGaugeSetTest
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.315 s -- in io.dropwizard.metrics5.jvm.MemoryUsageGaugeSetTest
[INFO] Running io.dropwizard.metrics5.jvm.CpuTimeClockTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.010 s -- in io.dropwizard.metrics5.jvm.CpuTimeClockTest
[INFO] Running io.dropwizard.metrics5.jvm.JmxAttributeGaugeTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.113 s -- in io.dropwizard.metrics5.jvm.JmxAttributeGaugeTest
[INFO] Running io.dropwizard.metrics5.jvm.FileDescriptorRatioGaugeTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.091 s -- in io.dropwizard.metrics5.jvm.FileDescriptorRatioGaugeTest
[INFO] Running io.dropwizard.metrics5.jvm.JvmAttributeGaugeSetTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 s -- in io.dropwizard.metrics5.jvm.JvmAttributeGaugeSetTest
[INFO] Running io.dropwizard.metrics5.jvm.ThreadDeadlockDetectorTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s -- in io.dropwizard.metrics5.jvm.ThreadDeadlockDetectorTest
[INFO] Running io.dropwizard.metrics5.jvm.BufferPoolMetricSetTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.162 s -- in io.dropwizard.metrics5.jvm.BufferPoolMetricSetTest
[INFO] Running io.dropwizard.metrics5.jvm.ThreadDumpTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.010 s -- in io.dropwizard.metrics5.jvm.ThreadDumpTest
[INFO] Running io.dropwizard.metrics5.jvm.GarbageCollectorMetricSetTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s -- in io.dropwizard.metrics5.jvm.GarbageCollectorMetricSetTest
[INFO] Running io.dropwizard.metrics5.jvm.ClassLoadingGaugeSetTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 s -- in io.dropwizard.metrics5.jvm.ClassLoadingGaugeSetTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 66, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jvm ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jvm:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/metrics-jvm-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jvm/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-healthchecks >-------------
[INFO] Building Metrics5 Health Checks 5.0.0-rc22                       [13/39]
[INFO]   from metrics-healthchecks/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-healthchecks ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[189,46] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/src/test/java/io/dropwizard/metrics5/health/HealthCheckTest.java:[203,46] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-healthchecks ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.health.AsyncHealthCheckDecoratorTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.608 s -- in io.dropwizard.metrics5.health.AsyncHealthCheckDecoratorTest
[INFO] Running io.dropwizard.metrics5.health.HealthCheckFilterTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s -- in io.dropwizard.metrics5.health.HealthCheckFilterTest
[INFO] Running io.dropwizard.metrics5.health.SharedHealthCheckRegistriesTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 s -- in io.dropwizard.metrics5.health.SharedHealthCheckRegistriesTest
[INFO] Running io.dropwizard.metrics5.health.HealthCheckTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.271 s -- in io.dropwizard.metrics5.health.HealthCheckTest
[INFO] Running io.dropwizard.metrics5.health.HealthCheckRegistryTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.108 s -- in io.dropwizard.metrics5.health.HealthCheckRegistryTest
[INFO] Running io.dropwizard.metrics5.health.jvm.ThreadDeadlockHealthCheckTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 s -- in io.dropwizard.metrics5.health.jvm.ThreadDeadlockHealthCheckTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 59, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-healthchecks ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-healthchecks:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/metrics-healthchecks-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-healthchecks/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient >--------------
[INFO] Building Metrics Integration for Apache HttpClient 5.0.0-rc22    [14/39]
[INFO]   from metrics-httpclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-httpclient ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/main/java/io/dropwizard/metrics5/httpclient/InstrumentedHttpClientConnectionManager.java:[114,8] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/src/test/java/io/dropwizard/metrics5/httpclient/HttpClientMetricNameStrategiesTest.java:[124,22] [deprecation] rewriteURI(URI,HttpHost,boolean) in URIUtils has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.httpclient.InstrumentedHttpClientsTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.183 s -- in io.dropwizard.metrics5.httpclient.InstrumentedHttpClientsTest
[INFO] Running io.dropwizard.metrics5.httpclient.InstrumentedHttpClientConnectionManagerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.187 s -- in io.dropwizard.metrics5.httpclient.InstrumentedHttpClientConnectionManagerTest
[INFO] Running io.dropwizard.metrics5.httpclient.HttpClientMetricNameStrategiesTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 s -- in io.dropwizard.metrics5.httpclient.HttpClientMetricNameStrategiesTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/metrics-httpclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -------------< io.dropwizard.metrics5:metrics-httpclient5 >-------------
[INFO] Building Metrics Integration for Apache HttpClient 5.x 5.0.0-rc22 [15/39]
[INFO]   from metrics-httpclient5/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-httpclient5 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpclient5 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpclient5 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpclient5 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 8 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[14,40] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[15,40] [deprecation] PlainConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[16,37] [deprecation] SSLConnectionSocketFactory in org.apache.hc.client5.http.ssl has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedAsyncClientConnectionManager.java:[29,62] [deprecation] getDefault() in DefaultClientTlsStrategy has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[30,28] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[31,28] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[32,37] [deprecation] PlainConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[33,38] [deprecation] SSLConnectionSocketFactory in org.apache.hc.client5.http.ssl has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[96,21] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[116,50] [deprecation] ConnectionSocketFactory in org.apache.hc.client5.http.socket has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientConnectionManager.java:[160,12] [deprecation] DefaultHttpClientConnectionOperator(Lookup<ConnectionSocketFactory>,SchemePortResolver,DnsResolver) in DefaultHttpClientConnectionOperator has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/main/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpRequestExecutor.java:[49,4] [deprecation] HttpRequestExecutor(Timeout,ConnectionReuseStrategy,Http1StreamListener) in HttpRequestExecutor has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpclient5 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpclient5 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 5 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[46,10] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/src/test/java/io/dropwizard/metrics5/httpclient5/InstrumentedHttpClientsTest.java:[68,12] [deprecation] execute(ClassicHttpRequest) in HttpClient has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpclient5 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.httpclient5.InstrumentedHttpClientsTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.411 s -- in io.dropwizard.metrics5.httpclient5.InstrumentedHttpClientsTest
[INFO] Running io.dropwizard.metrics5.httpclient5.InstrumentedHttpClientConnectionManagerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.206 s -- in io.dropwizard.metrics5.httpclient5.InstrumentedHttpClientConnectionManagerTest
[INFO] Running io.dropwizard.metrics5.httpclient5.InstrumentedHttpAsyncClientsTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.550 s -- in io.dropwizard.metrics5.httpclient5.InstrumentedHttpAsyncClientsTest
[INFO] Running io.dropwizard.metrics5.httpclient5.InstrumentedAsyncClientConnectionManagerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s -- in io.dropwizard.metrics5.httpclient5.InstrumentedAsyncClientConnectionManagerTest
[INFO] Running io.dropwizard.metrics5.httpclient5.HttpClientMetricNameStrategiesTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s -- in io.dropwizard.metrics5.httpclient5.HttpClientMetricNameStrategiesTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpclient5 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpclient5:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/metrics-httpclient5-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpclient5/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-httpasyncclient >-----------
[INFO] Building Metrics Integration for Apache HttpAsyncClient 5.0.0-rc22 [16/39]
[INFO]   from metrics-httpasyncclient/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-httpasyncclient ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-httpasyncclient ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-httpasyncclient ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-httpasyncclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/main/java/io/dropwizard/metrics5/httpasyncclient/InstrumentedNClientConnManager.java:[40,8] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-httpasyncclient ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-httpasyncclient ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-httpasyncclient ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.httpasyncclient.InstrumentedHttpClientsTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.927 s -- in io.dropwizard.metrics5.httpasyncclient.InstrumentedHttpClientsTest
[INFO] Running io.dropwizard.metrics5.httpasyncclient.InstrumentedHttpClientsTimerTest
[WARNING] Tests run: 3, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.001 s -- in io.dropwizard.metrics5.httpasyncclient.InstrumentedHttpClientsTimerTest
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 4, Failures: 0, Errors: 0, Skipped: 3
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-httpasyncclient ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-httpasyncclient:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/metrics-httpasyncclient-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-httpasyncclient/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-jakarta-servlet >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 5.0.0-rc22     [17/39]
[INFO]   from metrics-jakarta-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jakarta-servlet ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.servlet.InstrumentedFilterContextListenerTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.523 s -- in io.dropwizard.metrics5.servlet.InstrumentedFilterContextListenerTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/metrics-jakarta-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlet6 >-----------
[INFO] Building Metrics Integration for Jakarta Servlets 6.x 5.0.0-rc22 [18/39]
[INFO]   from metrics-jakarta-servlet6/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jakarta-servlet6 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlet6 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlet6 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlet6 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlet6 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlet6 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlet6 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.servlet6.InstrumentedFilterContextListenerTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.522 s -- in io.dropwizard.metrics5.servlet6.InstrumentedFilterContextListenerTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlet6 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlet6:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/metrics-jakarta-servlet6-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlet6/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-json >-----------------
[INFO] Building Jackson Integration for Metrics5 5.0.0-rc22             [19/39]
[INFO]   from metrics-json/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-json ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-json ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-json ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-json ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/main/java/io/dropwizard/metrics5/json/MetricsModule.java:[189,31] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-json ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-json ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-json ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.json.MetricsModuleTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.168 s -- in io.dropwizard.metrics5.json.MetricsModuleTest
[INFO] Running io.dropwizard.metrics5.json.HealthCheckModuleTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 s -- in io.dropwizard.metrics5.json.HealthCheckModuleTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-json ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-json:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/metrics-json-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-json/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty11 >---------------
[INFO] Building Metrics Integration for Jetty 11.x and higher 5.0.0-rc22 [20/39]
[INFO]   from metrics-jetty11/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty11 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty11 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty11 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty11 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/11.0.24/jetty-util-11.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/11.0.24/jetty-server-11.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/main/java/io/dropwizard/metrics5/jetty11/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty11 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty11 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty11 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jetty11.InstrumentedConnectionFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.029 s -- in io.dropwizard.metrics5.jetty11.InstrumentedConnectionFactoryTest
[INFO] Running io.dropwizard.metrics5.jetty11.InstrumentedHandlerTest
[WARNING] Tests run: 7, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.252 s -- in io.dropwizard.metrics5.jetty11.InstrumentedHandlerTest
[INFO] Running io.dropwizard.metrics5.jetty11.InstrumentedQueuedThreadPoolTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s -- in io.dropwizard.metrics5.jetty11.InstrumentedQueuedThreadPoolTest
[INFO] Running io.dropwizard.metrics5.jetty11.InstrumentedHttpChannelListenerTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.454 s -- in io.dropwizard.metrics5.jetty11.InstrumentedHttpChannelListenerTest
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 14, Failures: 0, Errors: 0, Skipped: 1
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty11 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty11:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/metrics-jetty11-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty11/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ----------< io.dropwizard.metrics5:metrics-jakarta-servlets >-----------
[INFO] Building Metrics5 Utility Jakarta Servlets 5.0.0-rc22            [21/39]
[INFO]   from metrics-jakarta-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jakarta-servlets ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jakarta-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jakarta-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jakarta-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/main/java/io/dropwizard/metrics5/servlets/CpuProfileServlet.java:[23,21] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jakarta-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jakarta-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 11 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.1.0/jakarta.servlet-api-6.1.0.jar(/jakarta/servlet/http/HttpServlet.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[31,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jakarta-servlets ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.servlets.MetricsServletContextListenerTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.667 s -- in io.dropwizard.metrics5.servlets.MetricsServletContextListenerTest
[INFO] Running io.dropwizard.metrics5.servlets.HealthCheckServletTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.359 s -- in io.dropwizard.metrics5.servlets.HealthCheckServletTest
[INFO] Running io.dropwizard.metrics5.servlets.ThreadDumpServletTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.072 s -- in io.dropwizard.metrics5.servlets.ThreadDumpServletTest
[INFO] Running io.dropwizard.metrics5.servlets.CpuProfileServletTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.032 s -- in io.dropwizard.metrics5.servlets.CpuProfileServletTest
[INFO] Running io.dropwizard.metrics5.servlets.AdminServletExclusionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s -- in io.dropwizard.metrics5.servlets.AdminServletExclusionTest
[INFO] Running io.dropwizard.metrics5.servlets.MetricsServletTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.150 s -- in io.dropwizard.metrics5.servlets.MetricsServletTest
[INFO] Running io.dropwizard.metrics5.servlets.PingServletTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s -- in io.dropwizard.metrics5.servlets.PingServletTest
[INFO] Running io.dropwizard.metrics5.servlets.AdminServletTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in io.dropwizard.metrics5.servlets.AdminServletTest
[INFO] Running io.dropwizard.metrics5.servlets.AdminServletUriTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in io.dropwizard.metrics5.servlets.AdminServletUriTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 33, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jakarta-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jakarta-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/metrics-jakarta-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jakarta-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jcache >----------------
[INFO] Building Metrics Integration for JCache 5.0.0-rc22               [22/39]
[INFO]   from metrics-jcache/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jcache ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcache ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcache ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcache ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcache ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcache ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcache ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running JCacheGaugeSetTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.112 s -- in JCacheGaugeSetTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jcache ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jcache:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/metrics-jcache-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcache/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ----------------< io.dropwizard.metrics5:metrics-jdbi3 >----------------
[INFO] Building Metrics Integration for JDBI3 5.0.0-rc22                [23/39]
[INFO]   from metrics-jdbi3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jdbi3 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jdbi3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jdbi3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jdbi3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 9 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/main/java/io/dropwizard/metrics5/jdbi3/InstrumentedTimingCollector.java:[10,33] [deprecation] TimingCollector in org.jdbi.v3.core.statement has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jdbi3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jdbi3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[9,35] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[18,10] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/src/test/java/io/dropwizard/metrics5/jdbi3/strategies/SmartNameStrategyTest.java:[24,20] [deprecation] InstrumentedTimingCollector in io.dropwizard.metrics5.jdbi3 has been deprecated
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jdbi3 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jdbi3.strategies.TimedAnnotationNameStrategyTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.525 s -- in io.dropwizard.metrics5.jdbi3.strategies.TimedAnnotationNameStrategyTest
[INFO] Running io.dropwizard.metrics5.jdbi3.strategies.BasicSqlNameStrategyTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in io.dropwizard.metrics5.jdbi3.strategies.BasicSqlNameStrategyTest
[INFO] Running io.dropwizard.metrics5.jdbi3.strategies.NaiveNameStrategyTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s -- in io.dropwizard.metrics5.jdbi3.strategies.NaiveNameStrategyTest
[INFO] Running io.dropwizard.metrics5.jdbi3.strategies.SmartNameStrategyTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 s -- in io.dropwizard.metrics5.jdbi3.strategies.SmartNameStrategyTest
[INFO] Running io.dropwizard.metrics5.jdbi3.strategies.InstrumentedSqlLoggerTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.306 s -- in io.dropwizard.metrics5.jdbi3.strategies.InstrumentedSqlLoggerTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jdbi3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jdbi3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/metrics-jdbi3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jdbi3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey2 >---------------
[INFO] Building Metrics Integration for Jersey 2.x 5.0.0-rc22           [24/39]
[INFO]   from metrics-jersey2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jersey2 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey2 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jersey2.SingletonMetricsJerseyTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.543 s -- in io.dropwizard.metrics5.jersey2.SingletonMetricsJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey2.SingletonMetricsTimedPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.108 s -- in io.dropwizard.metrics5.jersey2.SingletonMetricsTimedPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey2.SingletonFilterMetricsJerseyTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.417 s -- in io.dropwizard.metrics5.jersey2.SingletonFilterMetricsJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey2.SingletonMetricsMeteredPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.074 s -- in io.dropwizard.metrics5.jersey2.SingletonMetricsMeteredPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey2.SingletonMetricsExceptionMeteredPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.081 s -- in io.dropwizard.metrics5.jersey2.SingletonMetricsExceptionMeteredPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey2.CustomReservoirImplementationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 s -- in io.dropwizard.metrics5.jersey2.CustomReservoirImplementationTest
[INFO] Running io.dropwizard.metrics5.jersey2.SingletonMetricsResponseMeteredPerClassJerseyTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.242 s -- in io.dropwizard.metrics5.jersey2.SingletonMetricsResponseMeteredPerClassJerseyTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 28, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/metrics-jersey2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jersey3 >---------------
[INFO] Building Metrics Integration for Jersey 3.0.x 5.0.0-rc22         [25/39]
[INFO]   from metrics-jersey3/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jersey3 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey3 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey3 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey3 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey3 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey3 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jersey3.SingletonMetricsJerseyTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.630 s -- in io.dropwizard.metrics5.jersey3.SingletonMetricsJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey3.SingletonMetricsTimedPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 s -- in io.dropwizard.metrics5.jersey3.SingletonMetricsTimedPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey3.SingletonFilterMetricsJerseyTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.367 s -- in io.dropwizard.metrics5.jersey3.SingletonFilterMetricsJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey3.SingletonMetricsMeteredPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 s -- in io.dropwizard.metrics5.jersey3.SingletonMetricsMeteredPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey3.SingletonMetricsExceptionMeteredPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.074 s -- in io.dropwizard.metrics5.jersey3.SingletonMetricsExceptionMeteredPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey3.CustomReservoirImplementationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.049 s -- in io.dropwizard.metrics5.jersey3.CustomReservoirImplementationTest
[INFO] Running io.dropwizard.metrics5.jersey3.SingletonMetricsResponseMeteredPerClassJerseyTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.216 s -- in io.dropwizard.metrics5.jersey3.SingletonMetricsResponseMeteredPerClassJerseyTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 30, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey3 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey3:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/metrics-jersey3-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey3/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jersey31 >---------------
[INFO] Building Metrics Integration for Jersey 3.1.x 5.0.0-rc22         [26/39]
[INFO]   from metrics-jersey31/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jersey31 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jersey31 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jersey31 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jersey31 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jersey31 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jersey31 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 22 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jersey31 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jersey31.SingletonMetricsJerseyTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.924 s -- in io.dropwizard.metrics5.jersey31.SingletonMetricsJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey31.SingletonMetricsTimedPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.103 s -- in io.dropwizard.metrics5.jersey31.SingletonMetricsTimedPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey31.SingletonFilterMetricsJerseyTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.376 s -- in io.dropwizard.metrics5.jersey31.SingletonFilterMetricsJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey31.SingletonMetricsMeteredPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 s -- in io.dropwizard.metrics5.jersey31.SingletonMetricsMeteredPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey31.SingletonMetricsExceptionMeteredPerClassJerseyTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 s -- in io.dropwizard.metrics5.jersey31.SingletonMetricsExceptionMeteredPerClassJerseyTest
[INFO] Running io.dropwizard.metrics5.jersey31.CustomReservoirImplementationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s -- in io.dropwizard.metrics5.jersey31.CustomReservoirImplementationTest
[INFO] Running io.dropwizard.metrics5.jersey31.SingletonMetricsResponseMeteredPerClassJerseyTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.215 s -- in io.dropwizard.metrics5.jersey31.SingletonMetricsResponseMeteredPerClassJerseyTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 31, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jersey31 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jersey31:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/metrics-jersey31-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jersey31/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty10 >---------------
[INFO] Building Metrics Integration for Jetty 10.x and higher 5.0.0-rc22 [27/39]
[INFO]   from metrics-jetty10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty10 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Request.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/10.0.24/jetty-util-10.0.24.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-server/10.0.24/jetty-server-10.0.24.jar(/org/eclipse/jetty/server/Response.class): warning: Cannot find annotation method 'since()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/main/java/io/dropwizard/metrics5/jetty10/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty10 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jetty10.InstrumentedConnectionFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.053 s -- in io.dropwizard.metrics5.jetty10.InstrumentedConnectionFactoryTest
[INFO] Running io.dropwizard.metrics5.jetty10.InstrumentedHandlerTest
[WARNING] Tests run: 7, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.255 s -- in io.dropwizard.metrics5.jetty10.InstrumentedHandlerTest
[INFO] Running io.dropwizard.metrics5.jetty10.InstrumentedQueuedThreadPoolTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s -- in io.dropwizard.metrics5.jetty10.InstrumentedQueuedThreadPoolTest
[INFO] Running io.dropwizard.metrics5.jetty10.InstrumentedHttpChannelListenerTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.468 s -- in io.dropwizard.metrics5.jetty10.InstrumentedHttpChannelListenerTest
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 14, Failures: 0, Errors: 0, Skipped: 1
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/metrics-jetty10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty10/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-log4j2 >----------------
[INFO] Building Metrics Integration for Log4j 2.x 5.0.0-rc22            [28/39]
[INFO]   from metrics-log4j2/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-log4j2 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-log4j2 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-log4j2 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-log4j2 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-log4j2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/java/io/dropwizard/metrics5/log4j2/InstrumentedAppender.java:[85,4] [deprecation] AbstractAppender(String,Filter,Layout<? extends Serializable>,boolean) in AbstractAppender has been deprecated
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/src/main/java/io/dropwizard/metrics5/log4j2/InstrumentedAppender.java:[96,4] [deprecation] AbstractAppender(String,Filter,Layout<? extends Serializable>,boolean) in AbstractAppender has been deprecated
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-log4j2 ---
[INFO] Copying 1 resource from src/test/resources to target/test-classes
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-log4j2 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-log4j2 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.log4j2.InstrumentedAppenderTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.721 s -- in io.dropwizard.metrics5.log4j2.InstrumentedAppenderTest
[INFO] Running io.dropwizard.metrics5.log4j2.InstrumentedAppenderConfigTest
2024-11-18T12:07:39.193984674Z main INFO Starting LoggerContext[name=18b4aac2] with configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.200922446Z main WARN The use of package scanning to locate Log4j plugins is deprecated.
Please remove the `packages` attribute from your configuration file.
See https://logging.apache.org/log4j/2.x/faq.html#package-scanning for details.
2024-11-18T12:07:39.207876369Z main WARN Some custom `Core` Log4j plugins are not properly registered:
	io.dropwizard.metrics5.log4j2.InstrumentedAppender
Please consider reporting this to the maintainers of these plugins.
See https://logging.apache.org/log4j/2.x/manual/plugins.html#plugin-registry for details.
2024-11-18T12:07:39.252201564Z main INFO Starting configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.252463966Z main INFO Start watching for changes to stream (376 bytes, unknown location) every 0 seconds
2024-11-18T12:07:39.253074854Z main INFO Configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z] started.
2024-11-18T12:07:39.254125924Z main INFO Stopping configuration org.apache.logging.log4j.core.config.DefaultConfiguration@ac4915e...
2024-11-18T12:07:39.254564734Z main INFO Configuration org.apache.logging.log4j.core.config.DefaultConfiguration@ac4915e stopped.
2024-11-18T12:07:39.258930312Z main INFO LoggerContext[name=18b4aac2] started with configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z].
2024-11-18T12:07:39.273527830Z main INFO Stopping configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.273749982Z main INFO Configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z] stopped.
2024-11-18T12:07:39.281549911Z main INFO Starting LoggerContext[name=18b4aac2] with configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.281853632Z main WARN The use of package scanning to locate Log4j plugins is deprecated.
Please remove the `packages` attribute from your configuration file.
See https://logging.apache.org/log4j/2.x/faq.html#package-scanning for details.
2024-11-18T12:07:39.282118934Z main WARN Some custom `Core` Log4j plugins are not properly registered:
	io.dropwizard.metrics5.log4j2.InstrumentedAppender
Please consider reporting this to the maintainers of these plugins.
See https://logging.apache.org/log4j/2.x/manual/plugins.html#plugin-registry for details.
2024-11-18T12:07:39.283482926Z main INFO Starting configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.283620004Z main INFO Start watching for changes to stream (376 bytes, unknown location) every 0 seconds
2024-11-18T12:07:39.283897571Z main INFO Configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z] started.
2024-11-18T12:07:39.284115452Z main INFO Stopping configuration org.apache.logging.log4j.core.config.DefaultConfiguration@5086623f...
2024-11-18T12:07:39.284280232Z main INFO Configuration org.apache.logging.log4j.core.config.DefaultConfiguration@5086623f stopped.
2024-11-18T12:07:39.284468124Z main INFO LoggerContext[name=18b4aac2] started with configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z].
2024-11-18T12:07:39.285252313Z main INFO Stopping configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.285427352Z main INFO Configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z] stopped.
2024-11-18T12:07:39.292498164Z main INFO Starting LoggerContext[name=18b4aac2] with configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.292822040Z main WARN The use of package scanning to locate Log4j plugins is deprecated.
Please remove the `packages` attribute from your configuration file.
See https://logging.apache.org/log4j/2.x/faq.html#package-scanning for details.
2024-11-18T12:07:39.293143105Z main WARN Some custom `Core` Log4j plugins are not properly registered:
	io.dropwizard.metrics5.log4j2.InstrumentedAppender
Please consider reporting this to the maintainers of these plugins.
See https://logging.apache.org/log4j/2.x/manual/plugins.html#plugin-registry for details.
2024-11-18T12:07:39.294793189Z main INFO Starting configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.294953661Z main INFO Start watching for changes to stream (376 bytes, unknown location) every 0 seconds
2024-11-18T12:07:39.295337107Z main INFO Configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z] started.
2024-11-18T12:07:39.295497681Z main INFO Stopping configuration org.apache.logging.log4j.core.config.DefaultConfiguration@7eae55...
2024-11-18T12:07:39.295668975Z main INFO Configuration org.apache.logging.log4j.core.config.DefaultConfiguration@7eae55 stopped.
2024-11-18T12:07:39.295909868Z main INFO LoggerContext[name=18b4aac2] started with configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z].
2024-11-18T12:07:39.296699991Z main INFO Stopping configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z]...
2024-11-18T12:07:39.296886682Z main INFO Configuration XmlConfiguration[location=stream (376 bytes, unknown location), lastModified=1970-01-01T00:00:00Z] stopped.
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.633 s -- in io.dropwizard.metrics5.log4j2.InstrumentedAppenderConfigTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-log4j2 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-log4j2:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/metrics-log4j2-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-log4j2/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback13 >--------------
[INFO] Building Metrics Integration for Logback 1.3.x 5.0.0-rc22        [29/39]
[INFO]   from metrics-logback13/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-logback13 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback13 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback13 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback13 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/main/java/io/dropwizard/metrics/logback13/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback13 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback13 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback13 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics.logback13.InstrumentedAppenderTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.881 s -- in io.dropwizard.metrics.logback13.InstrumentedAppenderTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback13 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback13:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/metrics-logback13-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback13/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback14 >--------------
[INFO] Building Metrics Integration for Logback 1.4.x 5.0.0-rc22        [30/39]
[INFO]   from metrics-logback14/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-logback14 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback14 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback14 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback14 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/main/java/io/dropwizard/metrics/logback14/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback14 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback14 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback14 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics.logback14.InstrumentedAppenderTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.666 s -- in io.dropwizard.metrics.logback14.InstrumentedAppenderTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback14 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback14:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/metrics-logback14-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback14/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-logback15 >--------------
[INFO] Building Metrics Integration for Logback 1.5.x 5.0.0-rc22        [31/39]
[INFO]   from metrics-logback15/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-logback15 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-logback15 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-logback15 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-logback15 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/main/java/io/dropwizard/metrics5/logback15/InstrumentedAppender.java:[51,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-logback15 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-logback15 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-logback15 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.logback15.InstrumentedAppenderTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.605 s -- in io.dropwizard.metrics5.logback15.InstrumentedAppenderTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-logback15 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-logback15:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/metrics-logback15-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-logback15/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-servlet >---------------
[INFO] Building Metrics Integration for Servlets 5.0.0-rc22             [32/39]
[INFO]   from metrics-servlet/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-servlet ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlet ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlet ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlet ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlet ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlet ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.servlet.InstrumentedFilterContextListenerTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.546 s -- in io.dropwizard.metrics5.servlet.InstrumentedFilterContextListenerTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlet ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlet:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/metrics-servlet-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlet/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-servlets >---------------
[INFO] Building Metrics5 Utility Servlets 5.0.0-rc22                    [33/39]
[INFO]   from metrics-servlets/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-servlets ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-servlets ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-servlets ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 6 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/main/java/io/dropwizard/metrics5/servlets/CpuProfileServlet.java:[23,21] [serial] non-transient instance field of a serializable class declared with a non-serializable type
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-servlets ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-servlets ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 10 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/src/test/java/io/dropwizard/metrics5/servlets/HealthCheckServletTest.java:[31,67] [TimeZoneUsage] Derive the current time from an existing `Clock` Spring bean, and don't rely on a `Clock`'s time zone
    (see https://error-prone.picnic.tech/bugpatterns/TimeZoneUsage)
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-servlets ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.servlets.MetricsServletContextListenerTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.524 s -- in io.dropwizard.metrics5.servlets.MetricsServletContextListenerTest
[INFO] Running io.dropwizard.metrics5.servlets.HealthCheckServletTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.360 s -- in io.dropwizard.metrics5.servlets.HealthCheckServletTest
[INFO] Running io.dropwizard.metrics5.servlets.ThreadDumpServletTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 s -- in io.dropwizard.metrics5.servlets.ThreadDumpServletTest
[INFO] Running io.dropwizard.metrics5.servlets.CpuProfileServletTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.050 s -- in io.dropwizard.metrics5.servlets.CpuProfileServletTest
[INFO] Running io.dropwizard.metrics5.servlets.MetricsServletTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.159 s -- in io.dropwizard.metrics5.servlets.MetricsServletTest
[INFO] Running io.dropwizard.metrics5.servlets.PingServletTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.024 s -- in io.dropwizard.metrics5.servlets.PingServletTest
[INFO] Running io.dropwizard.metrics5.servlets.AdminServletTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s -- in io.dropwizard.metrics5.servlets.AdminServletTest
[INFO] Running io.dropwizard.metrics5.servlets.AdminServletUriTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s -- in io.dropwizard.metrics5.servlets.AdminServletUriTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 32, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-servlets ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-servlets:bundle:5.0.0-rc22 : Unused Import-Package instructions: [org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/metrics-servlets-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-servlets/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] --------------< io.dropwizard.metrics5:metrics-jcstress >---------------
[INFO] Building Metrics5 JCStress tests 5.0.0-rc22                      [34/39]
[INFO]   from metrics-jcstress/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jcstress ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jcstress ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jcstress ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jcstress ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jcstress ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jcstress ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jcstress ---
[INFO] No tests to run.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-jcstress ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22.jar
[INFO] 
[INFO] --- shade:3.6.0:shade (main) @ metrics-jcstress ---
[INFO] Including io.dropwizard.metrics5:metrics-core:jar:5.0.0-rc22 in the shaded jar.
[INFO] Including org.slf4j:slf4j-api:jar:2.0.16 in the shaded jar.
[INFO] Including org.openjdk.jcstress:jcstress-core:jar:0.16 in the shaded jar.
[INFO] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[INFO] Including net.java.dev.jna:jna:jar:5.8.0 in the shaded jar.
[INFO] Including net.java.dev.jna:jna-platform:jar:5.8.0 in the shaded jar.
[INFO] Including com.google.guava:guava:jar:33.3.1-jre in the shaded jar.
[INFO] Including com.google.guava:failureaccess:jar:1.0.2 in the shaded jar.
[INFO] Including com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava in the shaded jar.
[INFO] Including com.google.code.findbugs:jsr305:jar:3.0.2 in the shaded jar.
[INFO] Including org.checkerframework:checker-qual:jar:3.43.0 in the shaded jar.
[INFO] Including com.google.j2objc:j2objc-annotations:jar:3.0.0 in the shaded jar.
[INFO] Including com.google.errorprone:error_prone_annotations:jar:2.35.1 in the shaded jar.
[INFO] Dependency-reduced POM written at: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/dependency-reduced-pom.xml
[WARNING] Discovered module-info.class. Shading will break its strong encapsulation.
[WARNING] guava-33.3.1-jre.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE
[WARNING] error_prone_annotations-2.35.1.jar, j2objc-annotations-3.0.0.jar, slf4j-api-2.0.16.jar define 1 overlapping classes: 
[WARNING]   - META-INF.versions.9.module-info
[WARNING] checker-qual-3.43.0.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/LICENSE.txt
[WARNING] checker-qual-3.43.0.jar, error_prone_annotations-2.35.1.jar, failureaccess-1.0.2.jar, guava-33.3.1-jre.jar, j2objc-annotations-3.0.0.jar, jcstress-core-0.16.jar, jna-5.8.0.jar, jna-platform-5.8.0.jar, jopt-simple-4.6.jar, jsr305-3.0.2.jar, listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar, metrics-core-5.0.0-rc22.jar, metrics-jcstress-5.0.0-rc22.jar, slf4j-api-2.0.16.jar define 1 overlapping resource: 
[WARNING]   - META-INF/MANIFEST.MF
[WARNING] jna-5.8.0.jar, jna-platform-5.8.0.jar define 2 overlapping resources: 
[WARNING]   - META-INF/AL2.0
[WARNING]   - META-INF/LGPL2.1
[WARNING] maven-shade-plugin has detected that some files are
[WARNING] present in two or more JARs. When this happens, only one
[WARNING] single version of the file is copied to the uber jar.
[WARNING] Usually this is not harmful and you can skip these warnings,
[WARNING] otherwise try to manually exclude artifacts based on
[WARNING] mvn dependency:tree -Ddetail=true and the above output.
[WARNING] See https://maven.apache.org/plugins/maven-shade-plugin/
[INFO] Replacing /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/jcstress.jar with /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jcstress/target/metrics-jcstress-5.0.0-rc22-shaded.jar
[INFO] 
[INFO] -----------------< io.dropwizard.metrics5:metrics-jmx >-----------------
[INFO] Building Metrics Integration with JMX 5.0.0-rc22                 [35/39]
[INFO]   from metrics-jmx/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jmx ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jmx ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jmx ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jmx ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jmx ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jmx ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jmx ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics5.jmx.DefaultObjectNameFactoryTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.231 s -- in io.dropwizard.metrics5.jmx.DefaultObjectNameFactoryTest
[INFO] Running io.dropwizard.metrics5.jmx.JmxReporterTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.994 s -- in io.dropwizard.metrics5.jmx.JmxReporterTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jmx ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jmx:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/metrics-jmx-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jmx/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] -----------< io.dropwizard.metrics5:metrics-legacy-adapter >------------
[INFO] Building Metrics5 Adapter to Metrics 3/4 API 5.0.0-rc22          [36/39]
[INFO]   from metrics-legacy-adapter/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-legacy-adapter ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 36 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,49] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[51,9] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[108,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/main/java/com/codahale/metrics/MetricRegistry.java:[112,27] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 24 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[50,4] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[WARNING] /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/src/test/java/com/codahale/metrics/MetricRegistryTest.java:[367,22] [rawtypes] found raw type: Gauge
  missing type arguments for generic class Gauge<T>
  where T is a type-variable:
    T extends Object declared in interface Gauge
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.codahale.metrics.GaugeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.162 s -- in com.codahale.metrics.GaugeTest
[INFO] Running com.codahale.metrics.SlidingWindowReservoirTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.010 s -- in com.codahale.metrics.SlidingWindowReservoirTest
[INFO] Running com.codahale.metrics.InstrumentedScheduledExecutorServiceTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.169 s -- in com.codahale.metrics.InstrumentedScheduledExecutorServiceTest
[INFO] Running com.codahale.metrics.ExponentiallyDecayingReservoirTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s -- in com.codahale.metrics.ExponentiallyDecayingReservoirTest
[INFO] Running com.codahale.metrics.HistogramTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s -- in com.codahale.metrics.HistogramTest
[INFO] Running com.codahale.metrics.ScheduledReporterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 s -- in com.codahale.metrics.ScheduledReporterTest
[INFO] Running com.codahale.metrics.ConsoleReporterTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 s -- in com.codahale.metrics.ConsoleReporterTest
[INFO] Running com.codahale.metrics.RatioGaugeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s -- in com.codahale.metrics.RatioGaugeTest
[INFO] Running com.codahale.metrics.SnapshotTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s -- in com.codahale.metrics.SnapshotTest
[INFO] Running com.codahale.metrics.ClockTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in com.codahale.metrics.ClockTest
[INFO] Running com.codahale.metrics.SlidingTimeWindowReservoirTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s -- in com.codahale.metrics.SlidingTimeWindowReservoirTest
[INFO] Running com.codahale.metrics.TimerTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 s -- in com.codahale.metrics.TimerTest
[INFO] Running com.codahale.metrics.Slf4jReporterTest
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.432 s -- in com.codahale.metrics.Slf4jReporterTest
[INFO] Running com.codahale.metrics.SharedMetricRegistriesTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 s -- in com.codahale.metrics.SharedMetricRegistriesTest
[INFO] Running com.codahale.metrics.UniformReservoirTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s -- in com.codahale.metrics.UniformReservoirTest
[INFO] Running com.codahale.metrics.InstrumentedThreadFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s -- in com.codahale.metrics.InstrumentedThreadFactoryTest
[INFO] Running com.codahale.metrics.CounterTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in com.codahale.metrics.CounterTest
[INFO] Running com.codahale.metrics.MeterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s -- in com.codahale.metrics.MeterTest
[INFO] Running com.codahale.metrics.DerivativeGaugeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s -- in com.codahale.metrics.DerivativeGaugeTest
[INFO] Running com.codahale.metrics.InstrumentedExecutorServiceTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s -- in com.codahale.metrics.InstrumentedExecutorServiceTest
[INFO] Running com.codahale.metrics.FixedNameCsvFileProviderTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s -- in com.codahale.metrics.FixedNameCsvFileProviderTest
[INFO] Running com.codahale.metrics.SlidingTimeWindowArrayReservoirTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in com.codahale.metrics.SlidingTimeWindowArrayReservoirTest
[INFO] Running com.codahale.metrics.CachedGaugeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s -- in com.codahale.metrics.CachedGaugeTest
[INFO] Running com.codahale.metrics.MetricRegistryTest
[INFO] Tests run: 32, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.160 s -- in com.codahale.metrics.MetricRegistryTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 83, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter/target/metrics-legacy-adapter-5.0.0-rc22.jar
[INFO] 
[INFO] -----< io.dropwizard.metrics5:metrics-legacy-adapter-healthchecks >-----
[INFO] Building Metrics5 Health Checks Adapter to Metrics 3/4 API 5.0.0-rc22 [37/39]
[INFO]   from metrics-legacy-adapter-healthchecks/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-legacy-adapter-healthchecks ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-legacy-adapter-healthchecks ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-legacy-adapter-healthchecks ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-legacy-adapter-healthchecks ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 4 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-legacy-adapter-healthchecks ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-legacy-adapter-healthchecks ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-legacy-adapter-healthchecks ---
[INFO] No tests to run.
[INFO] 
[INFO] --- jar:3.4.2:jar (default-jar) @ metrics-legacy-adapter-healthchecks ---
[INFO] Building jar: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-legacy-adapter-healthchecks/target/metrics-legacy-adapter-healthchecks-5.0.0-rc22.jar
[INFO] 
[INFO] ---------------< io.dropwizard.metrics5:metrics-jetty12 >---------------
[INFO] Building Metrics Integration for Jetty 12.x and higher 5.0.0-rc22 [38/39]
[INFO]   from metrics-jetty12/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty12 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 3 source files with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[WARNING] /home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/.m2/repository/org/eclipse/jetty/jetty-util/12.0.14/jetty-util-12.0.14.jar(/org/eclipse/jetty/util/VirtualThreads$Configurable.class): warning: Cannot find annotation method 'forRemoval()' in type 'Deprecated'
/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/main/java/io/dropwizard/metrics/jetty12/InstrumentedConnectionFactory.java:[26,11] [this-escape] possible 'this' escape before subclass is fully initialized
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics.jetty12.InstrumentedConnectionFactoryTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.040 s -- in io.dropwizard.metrics.jetty12.InstrumentedConnectionFactoryTest
[INFO] Running io.dropwizard.metrics.jetty12.InstrumentedQueuedThreadPoolTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 s -- in io.dropwizard.metrics.jetty12.InstrumentedQueuedThreadPoolTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/metrics-jetty12-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12/target/classes/META-INF/MANIFEST.MF
[INFO] 
[INFO] ------------< io.dropwizard.metrics5:metrics-jetty12-ee10 >-------------
[INFO] Building Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 5.0.0-rc22 [39/39]
[INFO]   from metrics-jetty12-ee10/pom.xml
[INFO] -------------------------------[ bundle ]-------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ metrics-jetty12-ee10 ---
[INFO] Deleting /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target
[INFO] 
[INFO] --- enforcer:3.5.0:enforce (enforce) @ metrics-jetty12-ee10 ---
[INFO] Rule 0: org.apache.maven.enforcer.rules.dependency.DependencyConvergence passed
[INFO] 
[INFO] --- jacoco:0.8.12:prepare-agent (prepare-agent) @ metrics-jetty12-ee10 ---
[INFO] argLine set to -javaagent:/home/rick/.m2/repository/org/jacoco/org.jacoco.agent/0.8.12/org.jacoco.agent-0.8.12-runtime.jar=destfile=/home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/jacoco.exec
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/main/resources
[INFO] 
[INFO] --- compiler:3.13.0:compile (default-compile) @ metrics-jetty12-ee10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ metrics-jetty12-ee10 ---
[INFO] skip non existing resourceDirectory /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/src/test/resources
[INFO] 
[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ metrics-jetty12-ee10 ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 1 source file with javac [forked debug parameters release 8] to target/test-classes
[WARNING] [options] source value 8 is obsolete and will be removed in a future release
[WARNING] [options] target value 8 is obsolete and will be removed in a future release
[WARNING] [options] To suppress warnings about obsolete options, use -Xlint:-options.
[INFO] 
[INFO] --- surefire:3.5.0:test (default-test) @ metrics-jetty12-ee10 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.dropwizard.metrics.jetty12.ee10.InstrumentedEE10HandlerTest
[WARNING] Tests run: 7, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 1.101 s -- in io.dropwizard.metrics.jetty12.ee10.InstrumentedEE10HandlerTest
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 7, Failures: 0, Errors: 0, Skipped: 2
[INFO] 
[INFO] 
[INFO] --- bundle:5.1.9:bundle (default-bundle) @ metrics-jetty12-ee10 ---
[WARNING] Bundle io.dropwizard.metrics5:metrics-jetty12-ee10:bundle:5.0.0-rc22 : Unused Import-Package instructions: [javax.servlet*, org.slf4j*, sun.misc.*, com.sun.management.*] 
[INFO] Building bundle: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/metrics-jetty12-ee10-5.0.0-rc22.jar
[INFO] Writing manifest: /home/rick/repos/error-prone-support/integration-tests/.repos/metrics/metrics-jetty12-ee10/target/classes/META-INF/MANIFEST.MF
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Metrics5 Parent 5.0.0-rc22:
[INFO] 
[INFO] Metrics5 Parent .................................... SUCCESS [  0.301 s]
[INFO] Metrics5 Documentation ............................. SUCCESS [  0.858 s]
[INFO] Metrics5 BOM ....................................... SUCCESS [  0.010 s]
[INFO] Annotations for Metrics5 ........................... SUCCESS [  3.433 s]
[INFO] Metrics5 Core ...................................... SUCCESS [ 43.065 s]
[INFO] Benchmarks for Metrics5 ............................ SUCCESS [  4.517 s]
[INFO] Metrics Integration for Caffeine 3.x ............... SUCCESS [  6.998 s]
[INFO] Metrics Integration for Collectd ................... SUCCESS [ 13.792 s]
[INFO] Metrics Integration for Ehcache .................... SUCCESS [  8.234 s]
[INFO] Graphite Integration for Metrics5 .................. SUCCESS [ 23.915 s]
[INFO] InfluxDB integration for Metrics5 .................. SUCCESS [ 11.740 s]
[INFO] JVM Integration for Metrics5 ....................... SUCCESS [ 12.421 s]
[INFO] Metrics5 Health Checks ............................. SUCCESS [ 12.220 s]
[INFO] Metrics Integration for Apache HttpClient .......... SUCCESS [ 10.439 s]
[INFO] Metrics Integration for Apache HttpClient 5.x ...... SUCCESS [ 11.712 s]
[INFO] Metrics Integration for Apache HttpAsyncClient ..... SUCCESS [  9.507 s]
[INFO] Metrics Integration for Jakarta Servlets ........... SUCCESS [  8.534 s]
[INFO] Metrics Integration for Jakarta Servlets 6.x ....... SUCCESS [  8.044 s]
[INFO] Jackson Integration for Metrics5 ................... SUCCESS [ 10.017 s]
[INFO] Metrics Integration for Jetty 11.x and higher ...... SUCCESS [ 11.538 s]
[INFO] Metrics5 Utility Jakarta Servlets .................. SUCCESS [ 15.820 s]
[INFO] Metrics Integration for JCache ..................... SUCCESS [  7.572 s]
[INFO] Metrics Integration for JDBI3 ...................... SUCCESS [  9.939 s]
[INFO] Metrics Integration for Jersey 2.x ................. SUCCESS [ 12.822 s]
[INFO] Metrics Integration for Jersey 3.0.x ............... SUCCESS [ 12.505 s]
[INFO] Metrics Integration for Jersey 3.1.x ............... SUCCESS [ 12.638 s]
[INFO] Metrics Integration for Jetty 10.x and higher ...... SUCCESS [ 11.402 s]
[INFO] Metrics Integration for Log4j 2.x .................. SUCCESS [  9.544 s]
[INFO] Metrics Integration for Logback 1.3.x .............. SUCCESS [  8.491 s]
[INFO] Metrics Integration for Logback 1.4.x .............. SUCCESS [  8.182 s]
[INFO] Metrics Integration for Logback 1.5.x .............. SUCCESS [  8.366 s]
[INFO] Metrics Integration for Servlets ................... SUCCESS [  7.982 s]
[INFO] Metrics5 Utility Servlets .......................... SUCCESS [ 16.075 s]
[INFO] Metrics5 JCStress tests ............................ SUCCESS [  3.657 s]
[INFO] Metrics Integration with JMX ....................... SUCCESS [ 11.060 s]
[INFO] Metrics5 Adapter to Metrics 3/4 API ................ SUCCESS [ 15.265 s]
[INFO] Metrics5 Health Checks Adapter to Metrics 3/4 API .. SUCCESS [  3.360 s]
[INFO] Metrics Integration for Jetty 12.x and higher ...... SUCCESS [  9.505 s]
[INFO] Metrics Integration for Jetty 12.x and higher with Jakarta EE 10 SUCCESS [  8.916 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  06:45 min
[INFO] Finished at: 2024-11-18T13:09:20+01:00
[INFO] ------------------------------------------------------------------------
Inspecting changes...
Inspecting emitted warnings...
